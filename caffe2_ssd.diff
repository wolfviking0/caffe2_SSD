From 8d36b00b2389a5a73a9db6bb568ecc5b22477f5e Mon Sep 17 00:00:00 2001
From: Anthony Liot <anthony.liot@gmail.com>
Date: Tue, 13 Feb 2018 19:46:44 -0800
Subject: [PATCH] patch sra

Signed-off-by: Anthony Liot <anthony.liot@gmail.com>
---
 caffe/proto/caffe.proto                            |  184 +
 caffe2/operators/detection_output_op.cc            |  202 +
 caffe2/operators/detection_output_op.cu            |  311 +
 caffe2/operators/detection_output_op.h             |   74 +
 caffe2/operators/norm_op.cc                        |  114 +
 caffe2/operators/norm_op.cu                        |  115 +
 caffe2/operators/norm_op.h                         |   41 +
 caffe2/operators/prior_box_op.cc                   |   74 +
 caffe2/operators/prior_box_op.h                    |  231 +
 caffe2/operators/prior_box_op_gpu.cc               |   20 +
 caffe2/python/benchmark_res50.py                   |   43 +
 caffe2/python/caffe_translator.py                  |   99 +-
 caffe2/python/examples/ssd/.gitignore              |    3 +
 caffe2/python/examples/ssd/README.md               |   48 +
 caffe2/python/examples/ssd/cat.jpg                 |  Bin 0 -> 140391 bytes
 .../ssd/data/VOC0712/labelmap_voc.prototxt         |  105 +
 .../ssd/data/VOC0712Plus/labelmap_voc.prototxt     |  105 +
 caffe2/python/examples/ssd/fish-bike.jpg           |  Bin 0 -> 47638 bytes
 .../ssd/visualize_caffe2_implementation_det.ipynb  |  646 ++
 .../ssd/visualize_caffe_implementation_det.ipynb   |  181 +
 .../ssd_test/caffe_ssd_models/deploy.prototxt      | 1621 +++++
 .../python/ssd_test/caffe_translator_norm_test.py  |   57 +
 .../ssd_test/caffe_translator_permute_test.py      |   75 +
 .../python/ssd_test/caffe_translator_prior_test.py |   58 +
 caffe2/python/ssd_test/conv_test.py                |   81 +
 .../ssd_test/debug_det_layer/deploy.prototxt       | 1621 +++++
 .../ssd_test/debug_norm_layer/debug.prototxt       |   29 +
 .../ssd_test/debug_pemute_layer/debug.prototxt     | 1598 +++++
 .../ssd_test/debug_pemute_layer/debug2.prototxt    | 1482 +++++
 .../ssd_test/debug_prior_layer/debug.prototxt      |   39 +
 .../ssd_test/debug_ssd_conv_layer/debug.prototxt   | 1598 +++++
 .../ssd_test/debug_ssd_conv_layer/debug2.prototxt  |   66 +
 caffe2/python/ssd_test/det.py                      |   88 +
 caffe2/python/ssd_test/det_test.py                 |   86 +
 caffe2/python/ssd_test/net.prototxt                | 2215 +++++++
 caffe2/python/ssd_test/norm_test.py                |   52 +
 caffe2/python/ssd_test/priorbox_test.py            |   21 +
 caffe2/python/ssd_test/ssd_conv.py                 |   26 +
 caffe2/python/ssd_test/ssd_preproc.py              |   27 +
 caffe2/python/ssd_test/ssd_prior.py                |   18 +
 .../visualize_caffe2_implementation_det.ipynb      |  126 +
 caffe2/python/tutorials/ResNet-152-deploy.prototxt | 6778 ++++++++++++++++++++
 caffe2/python/tutorials/ResNet-50-deploy.prototxt  | 2323 +++++++
 .../Run_Alexnet_in_CPU_and_GPU_mode.ipynb          |  409 ++
 caffe2/utils/bbox_util.cc                          |  494 ++
 caffe2/utils/bbox_util.cu                          |   10 +
 caffe2/utils/bbox_util.h                           |   97 +
 47 files changed, 23689 insertions(+), 2 deletions(-)
 create mode 100644 caffe2/operators/detection_output_op.cc
 create mode 100644 caffe2/operators/detection_output_op.cu
 create mode 100644 caffe2/operators/detection_output_op.h
 create mode 100644 caffe2/operators/norm_op.cc
 create mode 100644 caffe2/operators/norm_op.cu
 create mode 100644 caffe2/operators/norm_op.h
 create mode 100644 caffe2/operators/prior_box_op.cc
 create mode 100644 caffe2/operators/prior_box_op.h
 create mode 100644 caffe2/operators/prior_box_op_gpu.cc
 create mode 100644 caffe2/python/benchmark_res50.py
 create mode 100644 caffe2/python/examples/ssd/.gitignore
 create mode 100644 caffe2/python/examples/ssd/README.md
 create mode 100644 caffe2/python/examples/ssd/cat.jpg
 create mode 100644 caffe2/python/examples/ssd/data/VOC0712/labelmap_voc.prototxt
 create mode 100644 caffe2/python/examples/ssd/data/VOC0712Plus/labelmap_voc.prototxt
 create mode 100644 caffe2/python/examples/ssd/fish-bike.jpg
 create mode 100644 caffe2/python/examples/ssd/visualize_caffe2_implementation_det.ipynb
 create mode 100644 caffe2/python/examples/ssd/visualize_caffe_implementation_det.ipynb
 create mode 100644 caffe2/python/ssd_test/caffe_ssd_models/deploy.prototxt
 create mode 100644 caffe2/python/ssd_test/caffe_translator_norm_test.py
 create mode 100644 caffe2/python/ssd_test/caffe_translator_permute_test.py
 create mode 100644 caffe2/python/ssd_test/caffe_translator_prior_test.py
 create mode 100644 caffe2/python/ssd_test/conv_test.py
 create mode 100644 caffe2/python/ssd_test/debug_det_layer/deploy.prototxt
 create mode 100644 caffe2/python/ssd_test/debug_norm_layer/debug.prototxt
 create mode 100644 caffe2/python/ssd_test/debug_pemute_layer/debug.prototxt
 create mode 100644 caffe2/python/ssd_test/debug_pemute_layer/debug2.prototxt
 create mode 100644 caffe2/python/ssd_test/debug_prior_layer/debug.prototxt
 create mode 100644 caffe2/python/ssd_test/debug_ssd_conv_layer/debug.prototxt
 create mode 100644 caffe2/python/ssd_test/debug_ssd_conv_layer/debug2.prototxt
 create mode 100644 caffe2/python/ssd_test/det.py
 create mode 100644 caffe2/python/ssd_test/det_test.py
 create mode 100644 caffe2/python/ssd_test/net.prototxt
 create mode 100644 caffe2/python/ssd_test/norm_test.py
 create mode 100644 caffe2/python/ssd_test/priorbox_test.py
 create mode 100644 caffe2/python/ssd_test/ssd_conv.py
 create mode 100644 caffe2/python/ssd_test/ssd_preproc.py
 create mode 100644 caffe2/python/ssd_test/ssd_prior.py
 create mode 100644 caffe2/python/ssd_test/visualize_caffe2_implementation_det.ipynb
 create mode 100644 caffe2/python/tutorials/ResNet-152-deploy.prototxt
 create mode 100644 caffe2/python/tutorials/ResNet-50-deploy.prototxt
 create mode 100644 caffe2/python/tutorials/Run_Alexnet_in_CPU_and_GPU_mode.ipynb
 create mode 100644 caffe2/utils/bbox_util.cc
 create mode 100644 caffe2/utils/bbox_util.cu
 create mode 100644 caffe2/utils/bbox_util.h

diff --git a/caffe/proto/caffe.proto b/caffe/proto/caffe.proto
index 1556781cb..4e3c3d440 100644
--- a/caffe/proto/caffe.proto
+++ b/caffe/proto/caffe.proto
@@ -403,6 +403,190 @@ message LayerParameter {
   optional ThresholdParameter threshold_param = 128;
   optional TileParameter tile_param = 138;
   optional WindowDataParameter window_data_param = 129;
+  optional NormalizeParameter norm_param = 206;
+  optional PermuteParameter permute_param = 202;
+  optional PriorBoxParameter prior_box_param = 203;
+  optional DetectionOutputParameter detection_output_param = 204;
+}
+
+// Message that stores parameters used by data transformer for resize policy
+message ResizeParameter {
+  //Probability of using this resize policy
+  optional float prob = 1 [default = 1];
+
+  enum Resize_mode {
+    WARP = 1;
+    FIT_SMALL_SIZE = 2;
+    FIT_LARGE_SIZE_AND_PAD = 3;
+  }
+  optional Resize_mode resize_mode = 2 [default = WARP];
+  optional uint32 height = 3 [default = 0];
+  optional uint32 width = 4 [default = 0];
+  // A parameter used to update bbox in FIT_SMALL_SIZE mode.
+  optional uint32 height_scale = 8 [default = 0];
+  optional uint32 width_scale = 9 [default = 0];
+
+  enum Pad_mode {
+    CONSTANT = 1;
+    MIRRORED = 2;
+    REPEAT_NEAREST = 3;
+  }
+  // Padding mode for BE_SMALL_SIZE_AND_PAD mode and object centering
+  optional Pad_mode pad_mode = 5 [default = CONSTANT];
+  // if specified can be repeated once (would fill all the channels)
+  // or can be repeated the same number of times as channels
+  // (would use it them to the corresponding channel)
+  repeated float pad_value = 6;
+
+  enum Interp_mode { //Same as in OpenCV
+    LINEAR = 1;
+    AREA = 2;
+    NEAREST = 3;
+    CUBIC = 4;
+    LANCZOS4 = 5;
+  }
+  //interpolation for for resizing
+  repeated Interp_mode interp_mode = 7;
+}
+
+message SaveOutputParameter {
+  // Output directory. If not empty, we will save the results.
+  optional string output_directory = 1;
+  // Output name prefix.
+  optional string output_name_prefix = 2;
+  // Output format.
+  //    VOC - PASCAL VOC output format.
+  //    COCO - MS COCO output format.
+  optional string output_format = 3;
+  // If you want to output results, must also provide the following two files.
+  // Otherwise, we will ignore saving results.
+  // label map file.
+  optional string label_map_file = 4;
+  // A file which contains a list of names and sizes with same order
+  // of the input DB. The file is in the following format:
+  //    name height width
+  //    ...
+  optional string name_size_file = 5;
+  // Number of test images. It can be less than the lines specified in
+  // name_size_file. For example, when we only want to evaluate on part
+  // of the test images.
+  optional uint32 num_test_image = 6;
+  // The resize parameter used in saving the data.
+  optional ResizeParameter resize_param = 7;
+}
+
+message NonMaximumSuppressionParameter {
+  // Threshold to be used in nms.
+  optional float nms_threshold = 1 [default = 0.3];
+  // Maximum number of results to be kept.
+  optional int32 top_k = 2;
+  // Parameter for adaptive nms.
+  optional float eta = 3 [default = 1.0];
+}
+
+
+// Message that store parameters used by DetectionOutputLayer
+message DetectionOutputParameter {
+  // Number of classes to be predicted. Required!
+  optional uint32 num_classes = 1;
+  // If true, bounding box are shared among different classes.
+  optional bool share_location = 2 [default = true];
+  // Background label id. If there is no background class,
+  // set it as -1.
+  optional int32 background_label_id = 3 [default = 0];
+  // Parameters used for non maximum suppression.
+  optional NonMaximumSuppressionParameter nms_param = 4;
+  // Parameters used for saving detection results.
+  optional SaveOutputParameter save_output_param = 5;
+  // Type of coding method for bbox.
+  optional PriorBoxParameter.CodeType code_type = 6 [default = CORNER];
+  // If true, variance is encoded in target; otherwise we need to adjust the
+  // predicted offset accordingly.
+  optional bool variance_encoded_in_target = 8 [default = false];
+  // Number of total bboxes to be kept per image after nms step.
+  // -1 means keeping all bboxes after nms step.
+  optional int32 keep_top_k = 7 [default = -1];
+  // Only consider detections whose confidences are larger than a threshold.
+  // If not provided, consider all boxes.
+  optional float confidence_threshold = 9;
+  // If true, visualize the detection results.
+  optional bool visualize = 10 [default = false];
+  // The threshold used to visualize the detection results.
+  optional float visualize_threshold = 11;
+  // If provided, save outputs to video file.
+  optional string save_file = 12;
+}
+
+// The normalized bounding box [0, 1] w.r.t. the input image size.
+message NormalizedBBox {
+  optional float xmin = 1;
+  optional float ymin = 2;
+  optional float xmax = 3;
+  optional float ymax = 4;
+  optional int32 label = 5;
+  optional bool difficult = 6;
+  optional float score = 7;
+  optional float size = 8;
+}
+
+message PermuteParameter {
+  // The new orders of the axes of data. Notice it should be with
+  // in the same range as the input data, and it starts from 0.
+  // Do not provide repeated order.
+  repeated uint32 order = 1;
+}
+
+// Message that store parameters used by PriorBoxLayer
+message PriorBoxParameter {
+  // Encode/decode type.
+  enum CodeType {
+    CORNER = 1;
+    CENTER_SIZE = 2;
+    CORNER_SIZE = 3;
+  }
+  // Minimum box size (in pixels). Required!
+  repeated float min_size = 1;
+  // Maximum box size (in pixels). Required!
+  repeated float max_size = 2;
+  // Various of aspect ratios. Duplicate ratios will be ignored.
+  // If none is provided, we use default ratio 1.
+  repeated float aspect_ratio = 3;
+  // If true, will flip each aspect ratio.
+  // For example, if there is aspect ratio "r",
+  // we will generate aspect ratio "1.0/r" as well.
+  optional bool flip = 4 [default = true];
+  // If true, will clip the prior so that it is within [0, 1]
+  optional bool clip = 5 [default = false];
+  // Variance for adjusting the prior bboxes.
+  repeated float variance = 6;
+  // By default, we calculate img_height, img_width, step_x, step_y based on
+  // bottom[0] (feat) and bottom[1] (img). Unless these values are explicitely
+  // provided.
+  // Explicitly provide the img_size.
+  optional uint32 img_size = 7;
+  // Either img_size or img_h/img_w should be specified; not both.
+  optional uint32 img_h = 8;
+  optional uint32 img_w = 9;
+
+  // Explicitly provide the step size.
+  optional float step = 10;
+  // Either step or step_h/step_w should be specified; not both.
+  optional float step_h = 11;
+  optional float step_w = 12;
+
+  // Offset to the top left corner of each cell.
+  optional float offset = 13 [default = 0.5];
+}
+
+// Message that stores parameters used by NormalizeLayer
+message NormalizeParameter {
+  optional bool across_spatial = 1 [default = true];
+  // Initial value of scale. Default is 1.0 for all
+  optional FillerParameter scale_filler = 2;
+  // Whether or not scale parameters are shared across channels.
+  optional bool channel_shared = 3 [default = true];
+  // Epsilon for not dividing by zero while normalizing variance
+  optional float eps = 4 [default = 1e-10];
 }
 
 // Message that stores parameters used to apply transformation
diff --git a/caffe2/operators/detection_output_op.cc b/caffe2/operators/detection_output_op.cc
new file mode 100644
index 000000000..e1989906e
--- /dev/null
+++ b/caffe2/operators/detection_output_op.cc
@@ -0,0 +1,202 @@
+#include "caffe2/operators/detection_output_op.h"
+
+namespace caffe2 {
+
+template <>
+bool DetectionOutputOp<float, CPUContext>::RunOnDevice() {
+	const auto& loc = Input(0);
+	const auto& conf = Input(1); 
+
+  // TODO(ky): 
+  // DetectionOutputOp must run in CUDA devs
+  // because I don't find a way in CPUContext 
+  // to access loc and conf which are in CUDAContext.
+  // So you will get a error when runing in CPU.
+  // Please run in CUDAContext!!!
+  //
+
+
+  //Tensor<CPUContext> loc, conf;
+  //loc.CopyFrom(loc_, &context_);
+  //conf.CopyFrom(conf_, &context_);
+	const auto& prior = OperatorBase::Input<TensorCPU>(2);
+	auto* Y = OperatorBase::Output<TensorCPU>(0);
+
+	const float* loc_data = loc.template data<float>();
+	const float* conf_data = conf.template data<float>();
+	const float* prior_data = prior.template data<float>();
+
+	const int num = loc.dim(0);
+	int num_priors_ = prior.dim(2) / 4;
+	CAFFE_ENFORCE_EQ(num_priors_ * num_loc_classes_ * 4, loc.dim(1));
+	CAFFE_ENFORCE_EQ(num_priors_ * num_classes_, conf.dim(1));
+	
+	// Retrieve all location predictions.
+	vector<LabelBBox> all_loc_preds;
+	GetLocPredictions(loc_data, num, num_priors_, num_loc_classes_,
+										share_location_, &all_loc_preds);
+	
+	// Retrieve all confidences.
+	vector<map<int, vector<float> > > all_conf_scores;
+	GetConfidenceScores(conf_data, num, num_priors_, num_classes_,
+											&all_conf_scores);
+
+	// Retrieve all prior bboxes. It is same within a batch since we assume all
+	// images in a batch are of same dimension.
+	vector<NormalizedBBox> prior_bboxes;
+	vector<vector<float> > prior_variances;
+	GetPriorBBoxes(prior_data, num_priors_, &prior_bboxes, &prior_variances);
+
+	// Decode all loc predictions to bboxes.
+	vector<LabelBBox> all_decode_bboxes;
+	const bool clip_bbox = false;
+	DecodeBBoxesAll(all_loc_preds, prior_bboxes, prior_variances, num,
+									share_location_, num_loc_classes_, background_label_id_,
+									code_type_, variance_encoded_in_target_, clip_bbox,
+									&all_decode_bboxes);
+	
+	int num_kept = 0;
+	vector<map<int, vector<int> > > all_indices;
+	for(int i = 0; i < num; i++) {
+		const LabelBBox& decode_bboxes = all_decode_bboxes[i];
+		const map<int, vector<float> >& conf_scores = all_conf_scores[i];
+		map<int, vector<int> > indices;
+		int num_det = 0;
+		for (int c = 0; c < num_classes_; ++c) {
+			if (c == background_label_id_) {
+				continue;
+			}
+			if (conf_scores.find(c) == conf_scores.end()) {
+				LOG(FATAL) << "Could not find confidence predictions for label " << c;
+			}
+			const vector<float>& scores = conf_scores.find(c)->second;
+			int label = share_location_ ? -1 : c;
+			if (decode_bboxes.find(label) == decode_bboxes.end()) {
+				// Something bad happened if there are no predictions for current label.
+				LOG(FATAL) << "Could not find location predictions for label " << label;
+				continue;
+			}
+			const vector<NormalizedBBox>& bboxes = decode_bboxes.find(label)->second;
+			ApplyNMSFast(bboxes, scores, confidence_threshold_, nms_threshold_, eta_,
+					top_k_, &(indices[c]));
+			num_det += indices[c].size();
+		}
+		if (keep_top_k_ > -1 && num_det > keep_top_k_) {
+			vector<pair<float, pair<int, int> > > score_index_pairs;
+			for (map<int, vector<int> >::iterator it = indices.begin();
+					it != indices.end(); ++it) {
+				int label = it->first;
+				const vector<int>& label_indices = it->second;
+				if (conf_scores.find(label) == conf_scores.end()) {
+					LOG(FATAL) << "Could not find location predictions for " << label;
+					continue;
+				}
+				const vector<float>& scores = conf_scores.find(label)->second;
+				for (int j = 0; j < label_indices.size(); ++j) {
+					int idx = label_indices[j];
+					CAFFE_ENFORCE_LT(idx, scores.size());
+					score_index_pairs.push_back(std::make_pair(
+								scores[idx], std::make_pair(label, idx)));
+				}
+			}
+			// Keep top k results per image.
+			std::sort(score_index_pairs.begin(), score_index_pairs.end(),
+					SortScorePairDescend<pair<int, int> >);
+			score_index_pairs.resize(keep_top_k_);
+			// Store the new indices.
+			map<int, vector<int> > new_indices;
+			for (int j = 0; j < score_index_pairs.size(); ++j) {
+				int label = score_index_pairs[j].second.first;
+				int idx = score_index_pairs[j].second.second;
+				new_indices[label].push_back(idx);
+			}
+			all_indices.push_back(new_indices);
+			num_kept += keep_top_k_;
+		} else {
+			all_indices.push_back(indices);
+			num_kept += num_det;
+		}
+	}
+
+	float* top_data;
+	if(num_kept == 0) {
+		LOG(INFO) << "Couldn't find any detections";
+		Y->Resize(1,1,num,7);
+		top_data = Y->template mutable_data<float>();
+		math::Set<float, CPUContext>(num*7, float(-1), top_data, &context_);
+		// Generate fake results per image.
+		for (int i = 0; i < num; ++i) {
+			top_data[0] = i;
+			top_data += 7;
+		}
+	} else {
+		Y->Resize(1,1,num_kept,7);
+		top_data = Y->template mutable_data<float>();
+	}
+
+	int count = 0;
+	for (int i = 0; i < num; ++i) {
+		const map<int, vector<float> >& conf_scores = all_conf_scores[i];
+		const LabelBBox& decode_bboxes = all_decode_bboxes[i];
+		for (map<int, vector<int> >::iterator it = all_indices[i].begin();
+				it != all_indices[i].end(); ++it) {
+			int label = it->first;
+			if (conf_scores.find(label) == conf_scores.end()) {
+				// Something bad happened if there are no predictions for current label.
+				LOG(FATAL) << "Could not find confidence predictions for " << label;
+				continue;
+			}
+			const vector<float>& scores = conf_scores.find(label)->second;
+			int loc_label = share_location_ ? -1 : label;
+			if (decode_bboxes.find(loc_label) == decode_bboxes.end()) {
+				// Something bad happened if there are no predictions for current label.
+				LOG(FATAL) << "Could not find location predictions for " << loc_label;
+				continue;
+			}
+			const vector<NormalizedBBox>& bboxes =
+				decode_bboxes.find(loc_label)->second;
+			vector<int>& indices = it->second;
+
+			for (int j = 0; j < indices.size(); ++j) {
+				int idx = indices[j];
+				top_data[count * 7] = i;
+				top_data[count * 7 + 1] = label;
+				top_data[count * 7 + 2] = scores[idx];
+				const NormalizedBBox& bbox = bboxes[idx];
+				top_data[count * 7 + 3] = bbox.xmin();
+				top_data[count * 7 + 4] = bbox.ymin();
+				top_data[count * 7 + 5] = bbox.xmax();
+				top_data[count * 7 + 6] = bbox.ymax();
+				++count;
+			}
+		}
+	}
+	
+	return true;
+}
+
+namespace {
+REGISTER_CPU_OPERATOR(DetectionOutput, DetectionOutputOp<float, CPUContext>);
+NO_GRADIENT(DetectionOutput);
+
+OPERATOR_SCHEMA(DetectionOutput)
+	.NumInputs(3)
+	.NumOutputs(1)
+	.SetDoc(R"DOC(DetectionOutputLayer in SSD)DOC")
+	.Arg("num_classes", "num_classes")
+	.Arg("share_location", "share_location")
+	.Arg("background_label_id", "background_label_id")
+	.Arg("nms_threshold", "nms_threshold")
+	.Arg("top_k", "top_k")
+	.Arg("eta", "eta")
+	.Arg("code_type", "code_type")
+	.Arg("variance_encoded_in_target", "variance_encoded_in_target")
+	.Arg("keep_top_k", "keep_top_k")
+	.Arg("confidence_threshold", "confidence_threshold")
+	.Input(0, "loc", "loc")
+	.Input(1, "conf", "conf")
+	.Input(2, "prior", "prior")
+	.Output(0, "Y", "detection results");
+} // namespace 
+
+} // namespace caffe2
diff --git a/caffe2/operators/detection_output_op.cu b/caffe2/operators/detection_output_op.cu
new file mode 100644
index 000000000..ed79c3123
--- /dev/null
+++ b/caffe2/operators/detection_output_op.cu
@@ -0,0 +1,311 @@
+#include "caffe2/core/context_gpu.h"
+#include "caffe2/operators/detection_output_op.h"
+
+namespace caffe2 {
+
+template <typename Dtype>
+__global__ void DecodeBBoxesKernel(const int nthreads,
+          const Dtype* loc_data, const Dtype* prior_data,
+          const CodeType code_type, const bool variance_encoded_in_target,
+          const int num_priors, const bool share_location,
+          const int num_loc_classes, const int background_label_id,
+          const bool clip_bbox, Dtype* bbox_data) {
+  CUDA_1D_KERNEL_LOOP(index, nthreads) {
+    const int i = index % 4;
+    const int c = (index / 4) % num_loc_classes;
+    const int d = (index / 4 / num_loc_classes) % num_priors;
+    if (!share_location && c == background_label_id) {
+      // Ignore background class if not share_location.
+      return;
+    }
+    const int pi = d * 4;
+    const int vi = pi + num_priors * 4;
+    if (code_type == caffe::PriorBoxParameter_CodeType_CORNER) {
+      if (variance_encoded_in_target) {
+        // variance is encoded in target, we simply need to add the offset
+        // predictions.
+        bbox_data[index] = prior_data[pi + i] + loc_data[index];
+      } else {
+        // variance is encoded in bbox, we need to scale the offset accordingly.
+        bbox_data[index] =
+          prior_data[pi + i] + loc_data[index] * prior_data[vi + i];
+      }
+    } else if (code_type == caffe::PriorBoxParameter_CodeType_CENTER_SIZE) {
+      const Dtype p_xmin = prior_data[pi];
+      const Dtype p_ymin = prior_data[pi + 1];
+      const Dtype p_xmax = prior_data[pi + 2];
+      const Dtype p_ymax = prior_data[pi + 3];
+      const Dtype prior_width = p_xmax - p_xmin;
+      const Dtype prior_height = p_ymax - p_ymin;
+      const Dtype prior_center_x = (p_xmin + p_xmax) / 2.;
+      const Dtype prior_center_y = (p_ymin + p_ymax) / 2.;
+
+      const Dtype xmin = loc_data[index - i];
+      const Dtype ymin = loc_data[index - i + 1];
+      const Dtype xmax = loc_data[index - i + 2];
+      const Dtype ymax = loc_data[index - i + 3];
+
+      Dtype decode_bbox_center_x, decode_bbox_center_y;
+      Dtype decode_bbox_width, decode_bbox_height;
+      if (variance_encoded_in_target) {
+        // variance is encoded in target, we simply need to retore the offset
+        // predictions.
+        decode_bbox_center_x = xmin * prior_width + prior_center_x;
+        decode_bbox_center_y = ymin * prior_height + prior_center_y;
+        decode_bbox_width = exp(xmax) * prior_width;
+        decode_bbox_height = exp(ymax) * prior_height;
+      } else {
+        // variance is encoded in bbox, we need to scale the offset accordingly.
+        decode_bbox_center_x =
+          prior_data[vi] * xmin * prior_width + prior_center_x;
+        decode_bbox_center_y =
+          prior_data[vi + 1] * ymin * prior_height + prior_center_y;
+        decode_bbox_width =
+          exp(prior_data[vi + 2] * xmax) * prior_width;
+        decode_bbox_height =
+          exp(prior_data[vi + 3] * ymax) * prior_height;
+      }
+
+      switch (i) {
+        case 0:
+          bbox_data[index] = decode_bbox_center_x - decode_bbox_width / 2.;
+          break;
+        case 1:
+          bbox_data[index] = decode_bbox_center_y - decode_bbox_height / 2.;
+          break;
+        case 2:
+          bbox_data[index] = decode_bbox_center_x + decode_bbox_width / 2.;
+          break;
+        case 3:
+          bbox_data[index] = decode_bbox_center_y + decode_bbox_height / 2.;
+          break;
+      }
+    } else if (code_type == caffe::PriorBoxParameter_CodeType_CORNER_SIZE) {
+      const Dtype p_xmin = prior_data[pi];
+      const Dtype p_ymin = prior_data[pi + 1];
+      const Dtype p_xmax = prior_data[pi + 2];
+      const Dtype p_ymax = prior_data[pi + 3];
+      const Dtype prior_width = p_xmax - p_xmin;
+      const Dtype prior_height = p_ymax - p_ymin;
+      Dtype p_size;
+      if (i == 0 || i == 2) {
+        p_size = prior_width;
+      } else {
+        p_size = prior_height;
+      }
+      if (variance_encoded_in_target) {
+        // variance is encoded in target, we simply need to add the offset
+        // predictions.
+        bbox_data[index] = prior_data[pi + i] + loc_data[index] * p_size;
+      } else {
+        // variance is encoded in bbox, we need to scale the offset accordingly.
+        bbox_data[index] =
+          prior_data[pi + i] + loc_data[index] * prior_data[vi + i] * p_size;
+      }
+    } else {
+      // Unknown code type.
+    }
+    if (clip_bbox) {
+      bbox_data[index] = max(min(bbox_data[index], Dtype(1.)), Dtype(0.));
+    }
+  }
+}
+
+template <typename Dtype>
+__global__ void PermuteDataKernel(const int nthreads,
+          const Dtype* data, const int num_classes, const int num_data,
+          const int num_dim, Dtype* new_data) {
+  CUDA_1D_KERNEL_LOOP(index, nthreads) {
+    const int i = index % num_dim;
+    const int c = (index / num_dim) % num_classes;
+    const int d = (index / num_dim / num_classes) % num_data;
+    const int n = index / num_dim / num_classes / num_data;
+    const int new_index = ((n * num_classes + c) * num_data + d) * num_dim + i;
+    new_data[new_index] = data[index];
+  }
+}
+
+
+template<>
+bool DetectionOutputOp<float, CUDAContext>::RunOnDevice() {
+  auto& loc = Input(0);
+  auto& conf = Input(1);
+  auto& prior_ = OperatorBase::Input<TensorCPU>(2);
+	auto* Y = OperatorBase::Output<TensorCPU>(0);
+
+  Tensor<CUDAContext> prior;
+  prior.CopyFrom(prior_, &context_);
+
+  const float* loc_data = loc.data<float>();
+	const float* conf_data = conf.data<float>();
+  const float* prior_data = prior.data<float>();
+  const int num = loc.dim(0);
+  
+  bbox_preds_.ResizeLike(loc);
+  if (!share_location_) {
+    bbox_permute_.ResizeLike(loc);
+  }
+  conf_permute_.ResizeLike(conf);
+  
+  float* bbox_data = bbox_preds_.mutable_data<float>();
+  const int loc_count = bbox_preds_.size();
+  const bool clip_bbox = false;
+	const int num_priors_ = prior.dim(2) / 4;
+	CAFFE_ENFORCE_EQ(num_priors_ * num_loc_classes_ * 4, loc.dim(1));
+	CAFFE_ENFORCE_EQ(num_priors_ * num_classes_, conf.dim(1));
+  
+  
+	DecodeBBoxesKernel<float> <<<CAFFE_GET_BLOCKS(loc_count),
+															 CAFFE_CUDA_NUM_THREADS, 0,
+															 context_.cuda_stream()>>> 
+	(loc_count, loc_data, prior_data, code_type_, variance_encoded_in_target_,
+   num_priors_, share_location_, num_loc_classes_, background_label_id_,
+	 clip_bbox, bbox_data);
+  
+  
+	const float* bbox_cpu_data = (float*)malloc(bbox_permute_.size()*sizeof(float));
+	Tensor<CPUContext> bbox_device_data;
+	if (!share_location_) {
+		float* bbox_permute_data = bbox_permute_.mutable_data<float>();
+		PermuteDataKernel<float> <<<CAFFE_GET_BLOCKS(loc_count),
+																CAFFE_CUDA_NUM_THREADS, 0,
+																context_.cuda_stream()>>>
+		(loc_count, bbox_data, num_loc_classes_, num_priors_, 4, bbox_permute_data);
+		bbox_device_data.CopyFrom(bbox_permute_, &context_);
+		bbox_cpu_data = bbox_device_data.data<float>();
+	} else {
+		bbox_device_data.CopyFrom(bbox_preds_, &context_);
+		bbox_cpu_data = bbox_device_data.data<float>();
+	}
+
+	// Retrieve all confidences.
+	float* conf_permute_data = conf_permute_.mutable_data<float>();
+	const int conf_count = conf.size();
+	PermuteDataKernel<float> <<<CAFFE_GET_BLOCKS(conf_count),
+															CAFFE_CUDA_NUM_THREADS, 0,
+															context_.cuda_stream()>>>
+	(conf_count, conf_data, num_classes_, num_priors_, 1, conf_permute_data);
+	Tensor<CPUContext> conf_device_data;
+	conf_device_data.CopyFrom(conf_permute_, &context_);
+	const float* conf_cpu_data = conf_device_data.data<float>();
+
+  // I found CopyFrom use cudaMemcpyAsync, 
+  // here in my opinion should wait and check kernal function finished.
+  CHECK(context_.FinishDeviceComputation());
+	
+  int num_kept = 0;
+	vector<map<int, vector<int> > > all_indices;
+	for (int i = 0; i < num; ++i) {
+		map<int, vector<int> > indices;
+    int num_det = 0;
+    const int conf_idx = i * num_classes_ * num_priors_;
+    int bbox_idx;
+    if (share_location_) {
+      bbox_idx = i * num_priors_ * 4;
+    } else {
+      bbox_idx = conf_idx * 4;
+    }
+    for (int c = 0; c < num_classes_; ++c) {
+      if (c == background_label_id_) {
+        // Ignore background class.
+        continue;
+      }
+      const float* cur_conf_data = conf_cpu_data + conf_idx + c * num_priors_;
+      const float* cur_bbox_data = bbox_cpu_data + bbox_idx;
+      if (!share_location_) {
+        cur_bbox_data += c * num_priors_ * 4;
+      }
+      ApplyNMSFast(cur_bbox_data, cur_conf_data, num_priors_,
+          confidence_threshold_, nms_threshold_, eta_, top_k_, &(indices[c]));
+      num_det += indices[c].size();
+    }
+    if (keep_top_k_ > -1 && num_det > keep_top_k_) {
+      vector<pair<float, pair<int, int> > > score_index_pairs;
+      for (map<int, vector<int> >::iterator it = indices.begin();
+           it != indices.end(); ++it) {
+        int label = it->first;
+        const vector<int>& label_indices = it->second;
+        for (int j = 0; j < label_indices.size(); ++j) {
+          int idx = label_indices[j];
+          float score = conf_cpu_data[conf_idx + label * num_priors_ + idx];
+          score_index_pairs.push_back(std::make_pair(
+                  score, std::make_pair(label, idx)));
+        }
+      }
+      // Keep top k results per image.
+      std::sort(score_index_pairs.begin(), score_index_pairs.end(),
+                SortScorePairDescend<pair<int, int> >);
+      score_index_pairs.resize(keep_top_k_);
+      // Store the new indices.
+      map<int, vector<int> > new_indices;
+      for (int j = 0; j < score_index_pairs.size(); ++j) {
+        int label = score_index_pairs[j].second.first;
+        int idx = score_index_pairs[j].second.second;
+        new_indices[label].push_back(idx);
+      }
+      all_indices.push_back(new_indices);
+      num_kept += keep_top_k_;
+    } else {
+      all_indices.push_back(indices);
+      num_kept += num_det;
+    }
+  }
+	float* top_data;
+	if(num_kept == 0) {
+		LOG(INFO) << "Couldn't find any detections";
+		Y->Resize(1,1,num,7);
+		top_data = Y->mutable_data<float>();
+		// here context_ is CUDAContext, but we need CPUContext.
+		// So i set 0
+		math::Set<float, CPUContext>(num*7, float(-1), top_data, 0);
+		for (int i = 0; i < num; ++i) {
+			top_data[0] = i;
+			top_data += 7;
+		}
+	} else {
+		Y->Resize(1,1,num_kept,7);
+		top_data = Y->mutable_data<float>();
+	}
+
+	int count = 0;
+	for (int i = 0; i < num; ++i) {
+		const int conf_idx = i * num_classes_ * num_priors_;
+		int bbox_idx;
+		if (share_location_) {
+			bbox_idx = i * num_priors_ * 4;
+		} else {
+			bbox_idx = conf_idx * 4;
+		}
+		for (map<int, vector<int> >::iterator it = all_indices[i].begin();
+				it != all_indices[i].end(); ++it) {
+			int label = it->first;
+			vector<int>& indices = it->second;
+			const float* cur_conf_data = conf_cpu_data + conf_idx + label * num_priors_;
+			const float* cur_bbox_data = bbox_cpu_data + bbox_idx;
+			if (!share_location_) {
+				cur_bbox_data += label * num_priors_ * 4;
+			}
+			for (int j = 0; j < indices.size(); ++j) {
+				int idx = indices[j];
+				top_data[count * 7] = i;
+				top_data[count * 7 + 1] = label;
+				top_data[count * 7 + 2] = cur_conf_data[idx];
+				for (int k = 0; k < 4; ++k) {
+					top_data[count * 7 + 3 + k] = cur_bbox_data[idx * 4 + k];
+				}
+        count++;
+			}
+		}
+	}
+
+	return true;
+}
+
+
+namespace caffe {
+
+REGISTER_CUDA_OPERATOR(DetectionOutput, DetectionOutputOp<float, CUDAContext>);
+} // namespace caffe
+
+} // namespace caffe2
+
diff --git a/caffe2/operators/detection_output_op.h b/caffe2/operators/detection_output_op.h
new file mode 100644
index 000000000..96f095567
--- /dev/null
+++ b/caffe2/operators/detection_output_op.h
@@ -0,0 +1,74 @@
+#ifndef DETECTION_OUTPUT_OP_H_
+#define DETECTION_OUTPUT_OP_H_
+
+#include "caffe/proto/caffe.pb.h"
+#include "caffe2/core/context.h"
+#include "caffe2/core/logging.h"
+#include "caffe2/core/operator.h"
+#include "caffe2/utils/math.h"
+#include "caffe2/utils/bbox_util.h"
+
+namespace caffe2 {
+template <typename T, class Context>
+class DetectionOutputOp final : public Operator<Context> {
+	public:
+		DetectionOutputOp(const OperatorDef& operator_def, Workspace* ws)
+			: Operator<Context>(operator_def, ws),
+				num_classes_(OperatorBase::GetSingleArgument<int>("num_classes", -1)),
+				share_location_(OperatorBase::GetSingleArgument<bool>("share_location", true)),
+				background_label_id_(OperatorBase::GetSingleArgument<int>("background_label_id", 0)),
+				nms_threshold_(OperatorBase::GetSingleArgument<float>("nms_threshold", 0.3)),
+				top_k_(OperatorBase::GetSingleArgument<int>("top_k", -1)),
+				eta_(OperatorBase::GetSingleArgument<float>("eta", 1.0)),
+				variance_encoded_in_target_(OperatorBase::GetSingleArgument<bool>("variance_encoded_in_target", false)),
+				keep_top_k_(OperatorBase::GetSingleArgument<int>("keep_top_k", -1)),
+				confidence_threshold_(OperatorBase::GetSingleArgument<float>("confidence_threshold", 0.00999999977648)),
+				code_t_(OperatorBase::GetSingleArgument<int>("code_type", 2))	{
+			
+			CAFFE_ENFORCE_GT(num_classes_, 0);
+			CAFFE_ENFORCE_GE(nms_threshold_, 0.);
+			CAFFE_ENFORCE_GT(eta_, 0.);
+			CAFFE_ENFORCE_LE(eta_, 1.);
+			num_loc_classes_ = share_location_ ? 1 : num_classes_;
+			switch(code_t_) {
+			case 1:
+				code_type_ = caffe::PriorBoxParameter_CodeType_CORNER;
+				break;
+			case 2:
+				code_type_ = caffe::PriorBoxParameter_CodeType_CENTER_SIZE;
+				break;
+			case 3:
+				code_type_ = caffe::PriorBoxParameter_CodeType_CORNER_SIZE;
+				break;
+			default:
+				LOG(FATAL) << "Unknown CodeType";
+			}
+		}
+		USE_OPERATOR_CONTEXT_FUNCTIONS;
+		bool RunOnDevice() override;
+	
+	protected:
+		vector<NormalizedBBox> prior_bboxes;
+		int num_loc_classes_;
+		bool share_location_;
+		int num_classes_;
+		int background_label_id_;
+		CodeType code_type_;
+		int code_t_;
+		bool variance_encoded_in_target_;
+		float confidence_threshold_;
+		float nms_threshold_;
+		float eta_;
+		int top_k_;
+		int keep_top_k_;
+    
+    Tensor<Context> bbox_preds_;
+    Tensor<Context> bbox_permute_;
+    Tensor<Context> conf_permute_;
+};
+
+} // namespace caffe2
+
+
+
+#endif
diff --git a/caffe2/operators/norm_op.cc b/caffe2/operators/norm_op.cc
new file mode 100644
index 000000000..c7349e1e5
--- /dev/null
+++ b/caffe2/operators/norm_op.cc
@@ -0,0 +1,114 @@
+#include "caffe2/operators/norm_op.h"
+
+
+namespace caffe2 {
+
+template <>
+bool NormOp<float, CPUContext>::RunOnDevice() {
+	const auto& X = Input(0);
+	const auto& scale = Input(1);
+	auto* Y = Output(0);
+
+	int batch_size = X.dim(0);
+	int channels = X.dim(1);
+	int height = X.dim(2);
+	int width = X.dim(3);
+
+	if(channel_shared_) {
+		CAFFE_ENFORCE_EQ(scale.dim(0), 1);
+	} else {
+		CAFFE_ENFORCE_EQ(scale.dim(0), channels);
+	}
+
+	Y->ResizeLike(X);
+	buffer_.Resize(1, channels, height, width);
+	buffer_channel_.Resize(1, channels, 1, 1);
+	buffer_spatial_.Resize(1, 1, height, width);
+
+	if(across_spatial_) {
+		norm_.Resize(batch_size, 1, 1, 1);
+	} else {
+		norm_.Resize(batch_size, 1, height, width);
+	}
+	sum_channel_multiplier_.Resize(1, channels, 1, 1);
+	math::Set<float, CPUContext>(channels, 
+			float(1.0), sum_channel_multiplier_.template mutable_data<float>(),
+			&context_);
+	int spatial_dim = height * width;
+	sum_spatial_multiplier_.Resize(1, 1, height, width);
+	math::Set<float, CPUContext>(spatial_dim, 
+			float(1.0), sum_spatial_multiplier_.template mutable_data<float>(),
+			&context_);
+
+	const float* Xdata = X.data<float>();
+	const float* Sdata = scale.data<float>();
+	float* buffer_data = buffer_.mutable_data<float>();
+	float* norm_data = norm_.mutable_data<float>();
+	math::Set<float, CPUContext>(norm_.size_from_dim(0),
+			eps_, norm_data, &context_);
+	const float* sum_channel_multiplier = sum_channel_multiplier_.data<float>();
+	const float* sum_spatial_multiplier = sum_spatial_multiplier_.data<float>();
+	float* Ydata = Y->mutable_data<float>();
+	int dim = channels * height * width;
+
+	for(int n = 0; n < batch_size; n++) {
+		math::Sqr<float, CPUContext>(dim, Xdata, buffer_data, &context_);
+		if(across_spatial_) {
+			float accu_sum;
+			math::Sum<float, CPUContext>(dim, buffer_data, &accu_sum, &context_);
+			norm_data[n] = pow(accu_sum+eps_, float(0.5));
+			math::Scale<float, CPUContext>(dim, float(1.0 / norm_data[n]), Xdata, Ydata, 
+					&context_);
+		} else {
+			math::Gemv<float, CPUContext>(CblasTrans, channels, spatial_dim,
+								float(1.0), buffer_data, sum_channel_multiplier, float(1.0),
+								norm_data, &context_);
+			math::Powx<float, CPUContext>(spatial_dim, norm_data, float(0.5), 
+								norm_data, &context_);
+			math::Gemm<float, CPUContext>(CblasNoTrans, CblasNoTrans, channels, spatial_dim,
+								1, float(1.0), sum_channel_multiplier, norm_data, float(0.0),
+								buffer_data, &context_);
+			math::Div<float, CPUContext>(dim, Xdata, buffer_data, Ydata, &context_);
+			norm_data += spatial_dim;
+		}
+		if (channel_shared_) {
+			math::Scale<float, CPUContext>(dim, Sdata[0], Ydata, Ydata, &context_);
+		} else {
+			math::Gemm<float, CPUContext>(CblasNoTrans, CblasNoTrans, channels, spatial_dim,
+								1, float(1.0), Sdata, sum_spatial_multiplier, float(0.0), buffer_data,
+								&context_);
+			math::Mul<float, CPUContext>(dim, Ydata, buffer_data, Ydata, &context_);
+		}
+		Xdata += dim;
+		Ydata += dim;
+	}
+	return true;
+}
+
+
+namespace {
+
+REGISTER_CPU_OPERATOR(Norm, NormOp<float, CPUContext>);
+NO_GRADIENT(Norm);
+
+// Input: X, scale
+// Output: Y
+OPERATOR_SCHEMA(Norm)
+		.NumInputs(2)
+		.NumOutputs(1)
+		.IdenticalTypeAndShape()
+		.SetDoc(R"Doc(SSD L2 and Scale layer)Doc")
+		.Arg("across_spatial", "default: false")
+		.Arg("order", "default: NCHW")
+		.Arg("eps", "default: 10e-10")
+		.Arg("channel_shared", "default: false")
+		.Input(0, "X", "NCHW tensor")
+		.Input(1, "scale", "scale factor")
+		.Output(0, "Y", "NCHW tensor");
+
+} // namespace
+
+
+} // namespace caffe2
+
+
diff --git a/caffe2/operators/norm_op.cu b/caffe2/operators/norm_op.cu
new file mode 100644
index 000000000..1d643f5d1
--- /dev/null
+++ b/caffe2/operators/norm_op.cu
@@ -0,0 +1,115 @@
+#include "caffe2/operators/norm_op.h"
+#include "caffe2/core/context_gpu.h"
+
+namespace caffe2 {
+namespace {
+
+// divid a matrix with vector
+template <typename T>
+__global__ void DivBsx(const int nthreads, const T* A,
+    const T* v, const int rows, const int cols, const CBLAS_TRANSPOSE trans,
+    T* B) {
+  CUDA_1D_KERNEL_LOOP(index, nthreads) {
+    int c = index % cols;
+    int r = (index / cols) % rows;
+    if (trans == CblasNoTrans) {
+      B[index] = A[index] / v[c];
+    } else {
+      B[index] = A[index] / v[r];
+    }
+  }
+}
+
+template <typename T>
+__global__ void MulBsx(const int nthreads, const T* A,
+    const T* v, const int rows, const int cols, const CBLAS_TRANSPOSE trans,
+   	T* B) {
+  CUDA_1D_KERNEL_LOOP(index, nthreads) {
+    int c = index % cols;
+    int r = (index / cols) % rows;
+    if (trans == CblasNoTrans) {
+      B[index] = A[index] * v[c];
+    } else {
+      B[index] = A[index] * v[r];
+    }
+  }
+}
+
+REGISTER_CUDA_OPERATOR(Norm, NormOp<float, CUDAContext>);
+} // namespace
+
+template <>
+bool NormOp<float, CUDAContext>::RunOnDevice() {
+	auto& X = Input(0);
+	auto& scale = Input(1);
+	auto* Y = Output(0);
+
+	int batch_size = X.dim(0);
+	int channels = X.dim(1);
+	int height = X.dim(2);
+	int width = X.dim(3);
+
+	Y->ResizeLike(X);
+	buffer_.Resize(1, channels, height, width);
+	buffer_channel_.Resize(1, channels, 1, 1);
+	buffer_spatial_.Resize(1, 1, height, width);
+
+	if(across_spatial_) {
+		norm_.Resize(batch_size, 1, 1, 1);
+	} else {
+		norm_.Resize(batch_size, 1, height, width);
+	}
+	sum_channel_multiplier_.Resize(1, channels, 1, 1);
+	math::Set<float, CUDAContext>(channels,
+			float(1.0), sum_channel_multiplier_.mutable_data<float>(),
+			&context_);
+	int spatial_dim = height * width;
+	sum_spatial_multiplier_.Resize(1, 1, height, width);
+	math::Set<float, CUDAContext>(spatial_dim,
+			float(1.0), sum_spatial_multiplier_.mutable_data<float>(),
+			&context_);
+
+	const float* Xdata = X.data<float>();
+	const float* Sdata = scale.data<float>();
+	float* buffer_data = buffer_.mutable_data<float>();
+	float* norm_data = norm_.mutable_data<float>();
+	math::Set<float, CUDAContext>(norm_.size_from_dim(0),
+			eps_, norm_data, &context_);
+	const float* sum_channel_multiplier = sum_channel_multiplier_.data<float>();
+	const float* sum_spatial_multiplier = sum_spatial_multiplier_.data<float>();
+	float* Ydata = Y->mutable_data<float>();
+	int dim = channels * height * width;
+
+	for(int n = 0; n < batch_size; n++) {
+		math::Powx<float, CUDAContext>(dim, Xdata, float(2.0), buffer_data, &context_);
+		if(across_spatial_) {
+			float accu_sum;
+			math::Sum<float, CUDAContext>(dim, buffer_data, &accu_sum, &context_);
+			norm_data[n] = pow(accu_sum+eps_, float(0.5));
+			math::Scale<float, CUDAContext>(dim, float(1.0 / norm_data[n]), Xdata, Ydata,
+					&context_);
+		} else {
+			math::Gemv<float, CUDAContext>(CblasTrans, channels, spatial_dim,
+								float(1.0), buffer_data, sum_channel_multiplier, float(1.0),
+								norm_data, &context_);
+			math::Powx<float, CUDAContext>(spatial_dim, norm_data, float(0.5),
+								norm_data, &context_);
+			DivBsx<float> <<<CAFFE_GET_BLOCKS(dim), CAFFE_CUDA_NUM_THREADS, 0, 
+				context_.cuda_stream()>>> (
+					dim, Xdata, norm_data, channels, spatial_dim, CblasNoTrans, Ydata);
+			norm_data += spatial_dim;
+		}
+		if (channel_shared_) {
+			math::Scale<float, CUDAContext>(dim, Sdata[0], Ydata, Ydata, &context_);
+		} else {
+			MulBsx<float> <<<CAFFE_GET_BLOCKS(dim), CAFFE_CUDA_NUM_THREADS, 0, 
+				context_.cuda_stream()>>> (
+					dim, Ydata, Sdata, channels, spatial_dim, CblasTrans, Ydata);
+		}
+		Xdata += dim;
+		Ydata += dim;
+	}
+	return true;
+}
+
+} // namespace caffe2
diff --git a/caffe2/operators/norm_op.h b/caffe2/operators/norm_op.h
new file mode 100644
index 000000000..15e6f3c01
--- /dev/null
+++ b/caffe2/operators/norm_op.h
@@ -0,0 +1,41 @@
+#ifndef NORM_OP_H_
+#define NORM_OP_H
+
+#include "caffe2/core/context.h"
+#include "caffe2/core/logging.h"
+#include "caffe2/core/operator.h"
+#include "caffe2/utils/math.h"
+
+namespace caffe2 {
+
+template <typename T, class Context>
+class NormOp final : public Operator<Context> {
+	public:
+		NormOp(const OperatorDef& operator_def, Workspace* ws)
+			: Operator<Context>(operator_def, ws),
+				across_spatial_(OperatorBase::GetSingleArgument<bool>("across_spatial", false)),
+				order_(StringToStorageOrder(
+							OperatorBase::GetSingleArgument<string>("order", "NCHW"))),
+				eps_(OperatorBase::GetSingleArgument<float>("eps", 10e-10)),
+				channel_shared_(OperatorBase::GetSingleArgument<bool>("channel_shared", false)) {
+			CAFFE_ENFORCE_EQ(order_, StorageOrder::NCHW, "Only NCHW order is supported right now.");
+		}
+		USE_OPERATOR_CONTEXT_FUNCTIONS;
+		bool RunOnDevice() override;
+	
+	protected:
+		bool across_spatial_;
+		StorageOrder order_;
+		float eps_;
+		bool channel_shared_;
+		Tensor<Context> buffer_, buffer_channel_, buffer_spatial_;
+		Tensor<Context> norm_;
+		Tensor<Context> sum_channel_multiplier_, sum_spatial_multiplier_;
+};
+
+
+} // namepsace caffe2
+
+
+
+#endif // NORM_OP_H_
diff --git a/caffe2/operators/prior_box_op.cc b/caffe2/operators/prior_box_op.cc
new file mode 100644
index 000000000..24973f457
--- /dev/null
+++ b/caffe2/operators/prior_box_op.cc
@@ -0,0 +1,74 @@
+#include "caffe2/operators/prior_box_op.h"
+
+namespace caffe2 {
+
+namespace {
+REGISTER_CPU_OPERATOR(PriorBox, PriorBoxOp<float, CPUContext>);
+NO_GRADIENT(PriorBox);
+
+OPERATOR_SCHEMA(PriorBox)
+	.NumInputs(2)
+	.NumOutputs(1)
+	.TensorInferenceFunction(
+		[](const OperatorDef& def, const vector<TensorShape>& in) {
+			ArgumentHelper helper(def);
+			const StorageOrder order = StringToStorageOrder(
+					helper.GetSingleArgument<string>("order", "NCHW"));
+			const TensorShape &X = in[0];
+			int layer_height = X.dims(2); int layer_width = X.dims(3);
+			
+			vector<float> aspects = helper.GetRepeatedArgument<float>("aspect_ratios");
+			vector<float> min_sizes = helper.GetRepeatedArgument<float>("min_sizes");
+			vector<float> aspts;
+			aspts.push_back(1);
+			bool flip = helper.GetSingleArgument<bool>("flip", true);
+			for(int i = 0; i < aspects.size(); i++) {
+				float ar = aspects[i];
+				bool already_exist = false;
+				for(int j = 0; j < aspts.size(); j++) {
+					if (fabs(ar - aspts[j]) < 1e-6) {
+						already_exist = true;
+						break;
+					}
+				}
+				if(!already_exist) {
+					aspts.push_back(ar);
+					if(flip) {
+						aspts.push_back(1./ar);
+					}
+				}
+			}
+
+			int num_priors_ = aspts.size() * min_sizes.size();
+			vector<float> max_sizes = helper.GetRepeatedArgument<float>("max_sizes");
+			for(int i = 0; i < max_sizes.size(); i++)
+				num_priors_ += 1;
+
+			TensorShape Y = CreateTensorShape(
+					vector<int>({1, 2, layer_width * layer_height * num_priors_ * 4}),
+					X.data_type());
+			return vector<TensorShape>({Y});
+		})
+	.SetDoc(R"DOC(PriorBoxLayer in SSD)DOC")
+	.Arg("min_sizes", "repeated min_sizes")
+	.Arg("max_sizes", "optional max_sizes")
+	.Arg("aspect_ratios", "repeated aspect ratios")
+	.Arg("flip", "1 / ar")
+	.Arg("clip", "clip box")
+	.Arg("variance", "prior variance")
+	.Arg("img_size", "image size")
+	.Arg("img_w", "image width")
+	.Arg("img_h", "image height")
+	.Arg("step", "feature stride")
+	.Arg("step_h", "step height")
+	.Arg("step_w", "step width")
+	.Arg("offset", "offset")
+	.Arg("order", "NCHW")
+	.Input(0, "X", "NCHW tensor")
+	.Input(1, "data", "NCHW input tensor")
+	.Output(0, "Y", "prior boxes");
+
+} // namespace
+
+
+} // namespace caffe2
diff --git a/caffe2/operators/prior_box_op.h b/caffe2/operators/prior_box_op.h
new file mode 100644
index 000000000..332fc337d
--- /dev/null
+++ b/caffe2/operators/prior_box_op.h
@@ -0,0 +1,231 @@
+#ifndef PRIOR_BOX_OP_H_
+#define PRIOR_BOX_OP_H_
+
+#include "caffe2/core/context.h"
+#include "caffe2/core/logging.h"
+#include "caffe2/core/operator.h"
+#include "caffe2/utils/math.h"
+
+namespace caffe2 {
+
+template <typename T, class Context>
+class PriorBoxOp final : public Operator<Context> {
+	public:
+		PriorBoxOp(const OperatorDef& operator_def, Workspace* ws)
+			: Operator<Context>(operator_def, ws),
+				min_sizes_(OperatorBase::GetRepeatedArgument<float>("min_sizes")),
+				max_sizes_(OperatorBase::GetRepeatedArgument<float>("max_sizes")),
+				aspect_ratios_(OperatorBase::GetRepeatedArgument<float>("aspect_ratios")),
+				flip_(OperatorBase::GetSingleArgument<bool>("flip", true)),
+				clip_(OperatorBase::GetSingleArgument<bool>("clip", false)),
+				variance_(OperatorBase::GetRepeatedArgument<float>("variance")),
+				img_size_(OperatorBase::GetSingleArgument<int>("img_size", 0)),
+				img_w_(OperatorBase::GetSingleArgument<int>("img_w", 0)),
+				img_h_(OperatorBase::GetSingleArgument<int>("img_h", 0)),
+				step_(OperatorBase::GetSingleArgument<float>("step", 0.)),
+				step_h_(OperatorBase::GetSingleArgument<float>("step_h", 0.)),
+				step_w_(OperatorBase::GetSingleArgument<float>("step_w", 0.)),
+				offset_(OperatorBase::GetSingleArgument<float>("offset", 0.5)),
+				order_(StringToStorageOrder(
+					OperatorBase::GetSingleArgument<string>("order", "NCHW"))) {
+			
+			// check order
+			CAFFE_ENFORCE_EQ(order_, 
+						StorageOrder::NCHW, "Only NCHW order is supported right now.");
+			
+			// check min_sizes
+			CAFFE_ENFORCE_GT(min_sizes_.size(), 0);
+			for(int i = 0; i < min_sizes_.size(); i++) {
+				CAFFE_ENFORCE_GT(min_sizes_[i], 0);
+			}
+
+			// set aspts_
+			aspts_.clear();
+			aspts_.push_back(1.);
+			for(int i = 0; i < aspect_ratios_.size(); i++) {
+				float ar = aspect_ratios_[i];
+				bool already_exist = false;
+				for(int j = 0; j < aspts_.size(); j++) {
+					if (fabs(ar - aspts_[j]) < 1e-6) {
+						already_exist = true;
+						break;
+					}
+				}
+				if (!already_exist) {
+					aspts_.push_back(ar);
+					if (flip_) {
+						aspts_.push_back(1./ar);
+					}
+				}
+			}
+
+			// set num_priors and check max_sizes
+			num_priors_ = aspts_.size() * min_sizes_.size();
+			if(max_sizes_.size() > 0) {
+				CAFFE_ENFORCE_EQ(max_sizes_.size(), min_sizes_.size());
+				for(int i = 0; i < max_sizes_.size(); i++) {
+					CAFFE_ENFORCE_GT(max_sizes_[i], min_sizes_[i]);
+					num_priors_ += 1;
+				}
+			}
+
+			// check and set variance
+			if(variance_.size() > 1) {
+				CAFFE_ENFORCE_EQ(variance_.size(), 4);
+				for(int i = 0; i < variance_.size(); i++) {
+					CAFFE_ENFORCE_GT(variance_[i], 0);
+				}
+			} else if(variance_.size() == 1) {
+				CAFFE_ENFORCE_GT(variance_[0], 0);
+			} else {
+				variance_.push_back(0.1);
+			}
+
+			// check img_size and set img_h_,img_w_
+			if(img_h_ != 0 || img_w_ != 0) {
+				CAFFE_ENFORCE_EQ(img_size_, 0);
+				CAFFE_ENFORCE_GT(img_h_, 0);
+				CAFFE_ENFORCE_GT(img_w_, 0);
+			} else if(img_size_ != 0) {
+				CAFFE_ENFORCE_GT(img_size_, 0);
+				img_h_ = img_size_;
+				img_w_ = img_size_;
+			} else {
+				img_h_ = 0;
+				img_w_ = 0;
+			}
+
+			// check step and set step_h_, step_w_
+			if(step_h_ != 0. || step_w_ != 0.) {
+				CAFFE_ENFORCE_EQ(step_, 0.);
+				CAFFE_ENFORCE_GT(step_h_, 0.);
+				CAFFE_ENFORCE_GT(step_w_, 0.);
+			} else if(step_ != 0.) {
+				CAFFE_ENFORCE_GT(step_, 0.);
+				step_h_ = step_;
+				step_w_ = step_;
+			} else {
+				step_h_ = 0.;
+				step_w_ = 0.;
+			}
+
+		}
+		USE_OPERATOR_CONTEXT_FUNCTIONS;
+		bool RunOnDevice() override;
+
+	protected:
+		vector<float> min_sizes_;
+		vector<float> max_sizes_;
+		vector<float> aspect_ratios_;
+		vector<float> aspts_;
+
+		bool flip_;
+		int num_priors_;
+		bool clip_;
+		vector<float> variance_;
+
+		int img_size_;
+		int img_w_;
+		int img_h_;
+		float step_;
+		float step_w_;
+		float step_h_;
+		float offset_;
+		StorageOrder order_;
+};
+
+template <typename T, class Context>
+bool PriorBoxOp<T, Context>::RunOnDevice() {
+	const auto& X = Input(0);
+	const auto& data = Input(1);
+	auto* Y = OperatorBase::Output<TensorCPU>(0);
+	
+	const int layer_height = X.dim(2);
+	const int layer_width = X.dim(3);
+	int img_height, img_width;
+	if (img_h_ == 0 || img_w_ == 0) {
+		img_height = data.dim(2);
+		img_width = data.dim(3);
+	} else {
+		img_height = img_h_;
+		img_width = img_w_;
+	}
+	float step_w, step_h;
+	if (step_w_ == 0 || step_h_ == 0) {
+		step_h = static_cast<float>(img_height) / layer_height;
+		step_w = static_cast<float>(img_width) / layer_width;
+	} else {
+		step_h = step_h_;
+		step_w = step_w_;
+	}
+	int dim = layer_height * layer_width * num_priors_ * 4;
+	Y->Resize(1, 2, dim);
+
+	int idx = 0;
+	T* top_data = Y->template mutable_data<T>();
+	for(int h = 0; h < layer_height; ++h) {
+		for(int w = 0; w < layer_width; ++w) {
+			float center_x = (w + offset_) * step_w;
+			float center_y = (h + offset_) * step_h;
+			float box_width, box_height;
+			for(int s = 0; s < min_sizes_.size(); ++s) {
+				int min_size_ = min_sizes_[s];
+				box_width = box_height = min_size_;
+				top_data[idx++] = (center_x - box_width / 2.) / img_width;
+				top_data[idx++] = (center_y - box_height / 2.) / img_height;
+				top_data[idx++] = (center_x + box_width / 2.) / img_width;
+				top_data[idx++] = (center_y + box_height / 2.) / img_height;
+
+				if (max_sizes_.size() > 0) {
+					CAFFE_ENFORCE_EQ(min_sizes_.size(), max_sizes_.size());
+					int max_size_ = max_sizes_[s];
+					box_width = box_height = sqrt(min_size_ * max_size_);
+					top_data[idx++] = (center_x - box_width / 2.) / img_width;
+					top_data[idx++] = (center_y - box_height / 2.) / img_height;
+					top_data[idx++] = (center_x + box_width / 2.) / img_width;
+					top_data[idx++] = (center_y + box_height / 2.) / img_height;
+				}
+				for (int r = 0; r < aspts_.size(); ++r) {
+					float ar = aspts_[r];
+					if (fabs(ar - 1.) < 1e-6) {
+						continue;
+					}
+					box_width = min_size_ * sqrt(ar);
+					box_height = min_size_ / sqrt(ar);
+					top_data[idx++] = (center_x - box_width / 2.) / img_width;
+					top_data[idx++] = (center_y - box_height / 2.) / img_height;
+					top_data[idx++] = (center_x + box_width / 2.) / img_width;
+					top_data[idx++] = (center_y + box_height / 2.) / img_height;
+				}
+			}
+		}
+	}
+	if (clip_) {
+		for (int d = 0; d < dim; ++d) {
+			top_data[d] = std::min<T>(std::max<T>(top_data[d], 0.), 1.);
+		}
+	}
+
+	top_data += dim;
+	if (variance_.size() == 1) {
+		math::Set<T, Context>(dim, float(variance_[0]), top_data, &context_);
+	} else {
+		int count = 0;
+		for (int h = 0; h < layer_height; ++h) {
+			for (int w = 0; w < layer_width; ++w) {
+				for (int i = 0; i < num_priors_; ++i) {
+					for (int j = 0; j < 4; ++j) {
+						top_data[count] = variance_[j];
+						++count;
+					}
+				}
+			}
+		}
+	}
+	return true;
+}
+
+
+} // namespace caffe2
+
+#endif // PRIOR_BOX_OP_H_
diff --git a/caffe2/operators/prior_box_op_gpu.cc b/caffe2/operators/prior_box_op_gpu.cc
new file mode 100644
index 000000000..33411eb5b
--- /dev/null
+++ b/caffe2/operators/prior_box_op_gpu.cc
@@ -0,0 +1,20 @@
+#include "caffe2/operators/prior_box_op.h"
+
+#include "caffe2/core/context_gpu.h"
+
+namespace caffe2 {
+
+/*
+template <>
+bool PriorBoxOp<float, CUDAContext>::RunOnDevice() {
+	return true;
+}*/
+
+
+namespace {
+
+REGISTER_CUDA_OPERATOR(PriorBox, PriorBoxOp<float, CUDAContext>);
+
+}
+}
+
diff --git a/caffe2/python/benchmark_res50.py b/caffe2/python/benchmark_res50.py
new file mode 100644
index 000000000..40410ded4
--- /dev/null
+++ b/caffe2/python/benchmark_res50.py
@@ -0,0 +1,43 @@
+import caffe2.python.models.resnet as resnet
+from caffe2.python import cnn
+from caffe2.python import workspace
+import caffe2.python._import_c_extension as C
+import numpy as np
+from caffe2.proto import caffe2_pb2
+import time
+
+test_model = cnn.CNNModelHelper(
+            order="NCHW",
+            name="resnet50_test",
+            use_cudnn=True,
+            cudnn_exhaustive_search=True,
+            ws_nbytes_limit = 512*1024*1024
+        )
+[softmax, loss] = resnet.create_resnet50(test_model, "data",
+		num_input_channels=3, num_labels=1000, label="label", no_bias=True)
+
+device_opts = caffe2_pb2.DeviceOption()
+device_opts.device_type = caffe2_pb2.CUDA
+device_opts.cuda_gpu_id = 0
+
+net_def = test_model.net.Proto()
+net_def.device_option.CopyFrom(device_opts)
+test_model.param_init_net.RunAllOnGPU(gpu_id=0, use_cudnn=True)
+
+workspace.CreateBlob("data")
+workspace.CreateBlob("label")
+
+workspace.RunNetOnce(test_model.param_init_net)
+workspace.CreateNet(net_def)
+
+workspace.FeedBlob('data', np.random.rand(100, 3, 224, 224).astype(np.float32),
+        device_opts)
+workspace.FeedBlob('label', np.ones([100, ], dtype=np.int32), device_opts)
+
+#start = time.time()
+#for i in range(1000):
+#    workspace.RunNet(net_def.name, 1)
+#end = time.time()
+#print('epoch time: {}'.format((end- start) / 1000))
+
+C.benchmark_net(net_def.name, 0, 1000, True)
diff --git a/caffe2/python/caffe_translator.py b/caffe2/python/caffe_translator.py
index 6d6f4d6ef..92eca0e10 100644
--- a/caffe2/python/caffe_translator.py
+++ b/caffe2/python/caffe_translator.py
@@ -22,6 +22,7 @@ import copy
 import logging
 import re
 import numpy as np  # noqa
+import sys
 
 from caffe2.proto import caffe2_pb2, caffe2_legacy_pb2
 from caffe.proto import caffe_pb2
@@ -646,6 +647,8 @@ def TranslateDropout(layer, pretrained_blobs, is_test, **kwargs):
 @TranslatorRegistry.Register("Softmax")
 def TranslateSoftmax(layer, pretrained_blobs, is_test, **kwargs):
     caffe_op = BaseTranslate(layer, "Softmax")
+    param = layer.softmax_param
+    AddArgument(caffe_op, "axis", param.axis)
     return caffe_op, []
 
 
@@ -676,8 +679,10 @@ def TranslateAccuracy(layer, pretrained_blobs, is_test, **kwargs):
 @TranslatorRegistry.Register("Concat")
 def TranslateConcat(layer, pretrained_blobs, is_test, **kwargs):
     caffe_op = BaseTranslate(layer, "Concat")
+    param = layer.concat_param
     caffe_op.output.extend(['_' + caffe_op.output[0] + '_dims'])
-    AddArgument(caffe_op, "order", "NCHW")
+    #AddArgument(caffe_op, "order", "NCHW")
+    AddArgument(caffe_op, "axis", param.axis)
     return caffe_op, []
 
 
@@ -890,6 +895,96 @@ def TranslateReduction(layer, pretrained_blobs, is_test, **kwargs):
 
     return caffe_op, []
 
+@TranslatorRegistry.Register("BatchNorm")
+def TranslateBatchNorm(layer, pretrained_blobs, is_test):
+    caffe_op = BaseTranslate(layer, "SpatialBN")
+    output = caffe_op.output[0]
+    param = layer.batch_norm_param
+    AddArgument(caffe_op, "is_test", is_test)
+    AddArgument(caffe_op, "epsilon", param.eps)
+    AddArgument(caffe_op, "order", "NCHW")
+
+    caffe_op.input.extend([output + "_scale", output + "_bias", output + "_mean", output + "_var"])
+    if not is_test:
+        caffe_op.output.extend([output + "_mean", output + "_var", output + "_saved_mean", output + "_saved_var"])
+
+    n_channels = pretrained_blobs[0].shape[0]
+    mean = utils.NumpyArrayToCaffe2Tensor(pretrained_blobs[0], output + '_mean')
+    var = utils.NumpyArrayToCaffe2Tensor(pretrained_blobs[1], output + '_var')
+    pretrained_blobs[2] = np.tile(pretrained_blobs[2], (n_channels, ))
+    scale = utils.NumpyArrayToCaffe2Tensor(pretrained_blobs[2], output + '_scale')
+    
+    # Create a zero bias array the same size as the scale, we'll let the following
+    # Scale (Mul + Add operators in Caffe2) layer handle any bias, just like Caffe
+    bias = utils.NumpyArrayToCaffe2Tensor(np.zeros_like(pretrained_blobs[2]), output + '_bias')
+
+    return caffe_op, [scale, bias, mean, var]
+
+@TranslatorRegistry.Register("Normalize")
+def TranslateNormalize(layer, pretrained_blobs, is_test):
+    caffe_op = BaseTranslate(layer, "Norm")
+    output = caffe_op.output[0]
+    param = layer.norm_param
+    AddArgument(caffe_op, "across_spatial", param.across_spatial)
+    AddArgument(caffe_op, "eps", param.eps)
+    AddArgument(caffe_op, "channel_shared", param.channel_shared)
+    AddArgument(caffe_op, "order", "NCHW")
+
+    caffe_op.input.extend([output + "_scale"])
+    scale = utils.NumpyArrayToCaffe2Tensor(pretrained_blobs[0], output + '_scale')
+    
+
+    return caffe_op, [scale]
+
+@TranslatorRegistry.Register("PriorBox")
+def TranslatePriorBox(layer, pretrained_blobs, is_test):
+    caffe_op = BaseTranslate(layer, "PriorBox")
+    output = caffe_op.output[0]
+    param = layer.prior_box_param
+    AddArgument(caffe_op, "min_sizes", [param.min_size[i] for i in range(len(param.min_size))])
+    AddArgument(caffe_op, "max_sizes", [param.max_size[i] for i in range(len(param.max_size))])
+    AddArgument(caffe_op, "aspect_ratios", [param.aspect_ratio[i] for i in range(len(param.aspect_ratio))])
+    AddArgument(caffe_op, "flip", param.flip)
+    AddArgument(caffe_op, "clip", param.clip)
+    AddArgument(caffe_op, "variance", [param.variance[i] for i in range(len(param.variance))])
+    AddArgument(caffe_op, "img_size", param.img_size)
+    AddArgument(caffe_op, "img_w", param.img_w)
+    AddArgument(caffe_op, "img_h", param.img_h)
+    AddArgument(caffe_op, "step", param.step)
+    AddArgument(caffe_op, "step_h", param.step_h)
+    AddArgument(caffe_op, "step_w", param.step_w)
+    AddArgument(caffe_op, "offset", param.offset)
+    AddArgument(caffe_op, "order", "NCHW")
+
+    return caffe_op, []
+
+@TranslatorRegistry.Register("Permute")
+def TranslatePermute(layer, pretrained_blobs, is_test):
+    caffe_op = BaseTranslate(layer, "Transpose")
+    param = layer.permute_param
+    num_orders = len(param.order)
+    assert num_orders == 4
+    AddArgument(caffe_op, "axes", [param.order[i] for i in range(num_orders)])
+
+    return caffe_op, []
+
+@TranslatorRegistry.Register("DetectionOutput")
+def TranslateDetectionOutput(layer, pretrained_blobs, is_test):
+    caffe_op = BaseTranslate(layer, "DetectionOutput")
+    param = layer.detection_output_param
+    AddArgument(caffe_op, "num_classes", param.num_classes)
+    AddArgument(caffe_op, "share_location", param.share_location)
+    AddArgument(caffe_op, "background_label_id", param.background_label_id)
+    AddArgument(caffe_op, "nms_threshold", param.nms_param.nms_threshold)
+    AddArgument(caffe_op, "top_k", param.nms_param.top_k)
+    AddArgument(caffe_op, "eta", param.nms_param.eta)
+    AddArgument(caffe_op, "code_type", param.code_type)
+    AddArgument(caffe_op, "variance_encoded_in_target", param.variance_encoded_in_target)
+    AddArgument(caffe_op, "keep_top_k", param.keep_top_k)
+    AddArgument(caffe_op, "confidence_threshold", param.confidence_threshold)
+
+    return caffe_op, []
+
 
 if __name__ == '__main__':
     parser = argparse.ArgumentParser(
@@ -914,7 +1009,7 @@ if __name__ == '__main__':
     input_caffemodel = args.caffemodel
     output_init_net = args.init_net
     output_predict_net = args.predict_net
-
+    
     text_format.Merge(
         open(input_proto, 'r').read(), caffenet
     )
diff --git a/caffe2/python/examples/ssd/.gitignore b/caffe2/python/examples/ssd/.gitignore
new file mode 100644
index 000000000..3aa34c6d3
--- /dev/null
+++ b/caffe2/python/examples/ssd/.gitignore
@@ -0,0 +1,3 @@
+*.pb
+models/
+*.tar.gz
diff --git a/caffe2/python/examples/ssd/README.md b/caffe2/python/examples/ssd/README.md
new file mode 100644
index 000000000..4357c926f
--- /dev/null
+++ b/caffe2/python/examples/ssd/README.md
@@ -0,0 +1,48 @@
+# SSD: Single Shot MultiBox Object Detector
+
+SSD is an unified framework for object detection with a single network.
+
+### Disclaimer
+This is a re-implementation (only testing) of original SSD which is based on caffe. The official
+repository is available [here](https://github.com/weiliu89/caffe/tree/ssd).
+The arXiv paper is available [here](http://arxiv.org/abs/1512.02325).
+
+This example is intended for SSD detection in caffe2. Converting the caffe trained model to caffe2. 
+However, due to different implementation details, the results might differ slightly.
+
+### Timeline
+- [x] VGGNet_VOC0712_SSD_300x300_ft
+- [x] VGG_VOC0712Plus_SSD_300x300_ft
+
+### Getting started
+* Clone my caffe2 & Build Caffe2: Follow the official instructions.
+
+### Models
+- [VGGNet_VOC0712_SSD_300x300_ft](https://pan.baidu.com/s/1gfceC6Z)
+- [VGG_VOC0712Plus_SSD_300x300_ft](https://pan.baidu.com/s/1i5iMl17)
+
+### Example
+After download the original SSD model, put it to `{CAFFE2_HOME}/caffe2/python/examples/ssd` and extract it:
+1. Run
+```
+# change folder
+cd {CAFFE2_HOME}/caffe2/python/examples/ssd
+# copy model
+cp {Download}/models_VGGNet_VOC0712_SSD_300x300_ft.tar.gz .
+# get the prototxt and caffemodel
+tar -xvf models_VGGNet_VOC0712_SSD_300x300_ft.tar.gz
+```
+2. Convert deploy.prototxt and VGG_VOC0712_SSD_300x300_ft_iter_120000.caffemodel
+to caffe2.
+```
+# change to {CAFFE2_HOME}/caffe2/python
+cd ../../
+# converting to caffe2 deploy.pb and model.pb
+python caffe_translator.py 
+	examples/ssd/models/VGGNet/VOC0712/SSD_300x300_ft/deploy.prototxt 
+	examples/ssd/models/VGGNet/VOC0712/SSD_300x300_ft/VGG_VOC0712_SSD_300x300_ft_iter_120000.caffemodel 
+	--init_net examples/ssd/VGG_VOC0712_SSD_300x300_ft_iter_120000_model.pb 
+	--predict_net examples/ssd/VGG_VOC0712_SSD_300x300_ft_iter_120000_deploy.pb
+```
+3. Check out `examples/ssd/visualize_caffe2_implementation_det.ipynb` on how to detect objects using a caffe2 SSD model.
+Check out `examples/ssd/visualize_caffe_implementation_det.ipynb` to compare the result of caffe with caffe2.
diff --git a/caffe2/python/examples/ssd/cat.jpg b/caffe2/python/examples/ssd/cat.jpg
new file mode 100644
index 0000000000000000000000000000000000000000..b4efc6c98b7e7bed698b10f4b7f06031267d52dd
GIT binary patch
literal 140391
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

literal 0
HcmV?d00001

diff --git a/caffe2/python/examples/ssd/data/VOC0712/labelmap_voc.prototxt b/caffe2/python/examples/ssd/data/VOC0712/labelmap_voc.prototxt
new file mode 100644
index 000000000..b5c177b72
--- /dev/null
+++ b/caffe2/python/examples/ssd/data/VOC0712/labelmap_voc.prototxt
@@ -0,0 +1,105 @@
+item {
+  name: "none_of_the_above"
+  label: 0
+  display_name: "background"
+}
+item {
+  name: "aeroplane"
+  label: 1
+  display_name: "aeroplane"
+}
+item {
+  name: "bicycle"
+  label: 2
+  display_name: "bicycle"
+}
+item {
+  name: "bird"
+  label: 3
+  display_name: "bird"
+}
+item {
+  name: "boat"
+  label: 4
+  display_name: "boat"
+}
+item {
+  name: "bottle"
+  label: 5
+  display_name: "bottle"
+}
+item {
+  name: "bus"
+  label: 6
+  display_name: "bus"
+}
+item {
+  name: "car"
+  label: 7
+  display_name: "car"
+}
+item {
+  name: "cat"
+  label: 8
+  display_name: "cat"
+}
+item {
+  name: "chair"
+  label: 9
+  display_name: "chair"
+}
+item {
+  name: "cow"
+  label: 10
+  display_name: "cow"
+}
+item {
+  name: "diningtable"
+  label: 11
+  display_name: "diningtable"
+}
+item {
+  name: "dog"
+  label: 12
+  display_name: "dog"
+}
+item {
+  name: "horse"
+  label: 13
+  display_name: "horse"
+}
+item {
+  name: "motorbike"
+  label: 14
+  display_name: "motorbike"
+}
+item {
+  name: "person"
+  label: 15
+  display_name: "person"
+}
+item {
+  name: "pottedplant"
+  label: 16
+  display_name: "pottedplant"
+}
+item {
+  name: "sheep"
+  label: 17
+  display_name: "sheep"
+}
+item {
+  name: "sofa"
+  label: 18
+  display_name: "sofa"
+}
+item {
+  name: "train"
+  label: 19
+  display_name: "train"
+}
+item {
+  name: "tvmonitor"
+  label: 20
+  display_name: "tvmonitor"
+}
diff --git a/caffe2/python/examples/ssd/data/VOC0712Plus/labelmap_voc.prototxt b/caffe2/python/examples/ssd/data/VOC0712Plus/labelmap_voc.prototxt
new file mode 100644
index 000000000..b5c177b72
--- /dev/null
+++ b/caffe2/python/examples/ssd/data/VOC0712Plus/labelmap_voc.prototxt
@@ -0,0 +1,105 @@
+item {
+  name: "none_of_the_above"
+  label: 0
+  display_name: "background"
+}
+item {
+  name: "aeroplane"
+  label: 1
+  display_name: "aeroplane"
+}
+item {
+  name: "bicycle"
+  label: 2
+  display_name: "bicycle"
+}
+item {
+  name: "bird"
+  label: 3
+  display_name: "bird"
+}
+item {
+  name: "boat"
+  label: 4
+  display_name: "boat"
+}
+item {
+  name: "bottle"
+  label: 5
+  display_name: "bottle"
+}
+item {
+  name: "bus"
+  label: 6
+  display_name: "bus"
+}
+item {
+  name: "car"
+  label: 7
+  display_name: "car"
+}
+item {
+  name: "cat"
+  label: 8
+  display_name: "cat"
+}
+item {
+  name: "chair"
+  label: 9
+  display_name: "chair"
+}
+item {
+  name: "cow"
+  label: 10
+  display_name: "cow"
+}
+item {
+  name: "diningtable"
+  label: 11
+  display_name: "diningtable"
+}
+item {
+  name: "dog"
+  label: 12
+  display_name: "dog"
+}
+item {
+  name: "horse"
+  label: 13
+  display_name: "horse"
+}
+item {
+  name: "motorbike"
+  label: 14
+  display_name: "motorbike"
+}
+item {
+  name: "person"
+  label: 15
+  display_name: "person"
+}
+item {
+  name: "pottedplant"
+  label: 16
+  display_name: "pottedplant"
+}
+item {
+  name: "sheep"
+  label: 17
+  display_name: "sheep"
+}
+item {
+  name: "sofa"
+  label: 18
+  display_name: "sofa"
+}
+item {
+  name: "train"
+  label: 19
+  display_name: "train"
+}
+item {
+  name: "tvmonitor"
+  label: 20
+  display_name: "tvmonitor"
+}
diff --git a/caffe2/python/examples/ssd/fish-bike.jpg b/caffe2/python/examples/ssd/fish-bike.jpg
new file mode 100644
index 0000000000000000000000000000000000000000..39d9bd432e202c3b34d2585c946aa1192cee226d
GIT binary patch
literal 47638
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

literal 0
HcmV?d00001

diff --git a/caffe2/python/examples/ssd/visualize_caffe2_implementation_det.ipynb b/caffe2/python/examples/ssd/visualize_caffe2_implementation_det.ipynb
new file mode 100644
index 000000000..5d68fe86e
--- /dev/null
+++ b/caffe2/python/examples/ssd/visualize_caffe2_implementation_det.ipynb
@@ -0,0 +1,646 @@
+{
+ "cells": [
+  {
+   "cell_type": "code",
+   "execution_count": 12,
+   "metadata": {
+    "collapsed": true
+   },
+   "outputs": [],
+   "source": [
+    "import numpy as np\n",
+    "import skimage.io\n",
+    "from scipy.ndimage import zoom\n",
+    "from skimage.transform import resize\n",
+    "import matplotlib.pyplot as plt\n",
+    "%matplotlib inline\n",
+    "plt.rcParams['figure.figsize'] = (10, 10)\n",
+    "plt.rcParams['image.interpolation'] = 'nearest'\n",
+    "plt.rcParams['image.cmap'] = 'gray'"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 2,
+   "metadata": {
+    "collapsed": true
+   },
+   "outputs": [],
+   "source": [
+    "## Pre-processing, copy from caffe.io\n",
+    "\n",
+    "class Transformer:\n",
+    "    \"\"\"\n",
+    "    Transform input for feeding into a Net.\n",
+    "\n",
+    "    Note: this is mostly for illustrative purposes and it is likely better\n",
+    "    to define your own input preprocessing routine for your needs.\n",
+    "\n",
+    "    Parameters\n",
+    "    ----------\n",
+    "    net : a Net for which the input should be prepared\n",
+    "    \"\"\"\n",
+    "    def __init__(self, inputs):\n",
+    "        self.inputs = inputs\n",
+    "        self.transpose = {}\n",
+    "        self.channel_swap = {}\n",
+    "        self.raw_scale = {}\n",
+    "        self.mean = {}\n",
+    "        self.input_scale = {}\n",
+    "\n",
+    "    def __check_input(self, in_):\n",
+    "        if in_ not in self.inputs:\n",
+    "            raise Exception('{} is not one of the net inputs: {}'.format(\n",
+    "                in_, self.inputs))\n",
+    "\n",
+    "    def preprocess(self, in_, data):\n",
+    "        \"\"\"\n",
+    "        Format input for Caffe:\n",
+    "        - convert to single\n",
+    "        - resize to input dimensions (preserving number of channels)\n",
+    "        - transpose dimensions to K x H x W\n",
+    "        - reorder channels (for instance color to BGR)\n",
+    "        - scale raw input (e.g. from [0, 1] to [0, 255] for ImageNet models)\n",
+    "        - subtract mean\n",
+    "        - scale feature\n",
+    "\n",
+    "        Parameters\n",
+    "        ----------\n",
+    "        in_ : name of input blob to preprocess for\n",
+    "        data : (H' x W' x K) ndarray\n",
+    "\n",
+    "        Returns\n",
+    "        -------\n",
+    "        caffe_in : (K x H x W) ndarray for input to a Net\n",
+    "        \"\"\"\n",
+    "        self.__check_input(in_)\n",
+    "        caffe_in = data.astype(np.float32, copy=False)\n",
+    "        transpose = self.transpose.get(in_)\n",
+    "        channel_swap = self.channel_swap.get(in_)\n",
+    "        raw_scale = self.raw_scale.get(in_)\n",
+    "        mean = self.mean.get(in_)\n",
+    "        input_scale = self.input_scale.get(in_)\n",
+    "        in_dims = self.inputs[in_][2:]\n",
+    "        if caffe_in.shape[:2] != in_dims:\n",
+    "            caffe_in = resize_image(caffe_in, in_dims)\n",
+    "        if transpose is not None:\n",
+    "            caffe_in = caffe_in.transpose(transpose)\n",
+    "        if channel_swap is not None:\n",
+    "            caffe_in = caffe_in[channel_swap, :, :]\n",
+    "        if raw_scale is not None:\n",
+    "            caffe_in *= raw_scale\n",
+    "        if mean is not None:\n",
+    "            caffe_in -= mean\n",
+    "        if input_scale is not None:\n",
+    "            caffe_in *= input_scale\n",
+    "        return caffe_in\n",
+    "\n",
+    "    def deprocess(self, in_, data):\n",
+    "        \"\"\"\n",
+    "        Invert Caffe formatting; see preprocess().\n",
+    "        \"\"\"\n",
+    "        self.__check_input(in_)\n",
+    "        decaf_in = data.copy().squeeze()\n",
+    "        transpose = self.transpose.get(in_)\n",
+    "        channel_swap = self.channel_swap.get(in_)\n",
+    "        raw_scale = self.raw_scale.get(in_)\n",
+    "        mean = self.mean.get(in_)\n",
+    "        input_scale = self.input_scale.get(in_)\n",
+    "        if input_scale is not None:\n",
+    "            decaf_in /= input_scale\n",
+    "        if mean is not None:\n",
+    "            decaf_in += mean\n",
+    "        if raw_scale is not None:\n",
+    "            decaf_in /= raw_scale\n",
+    "        if channel_swap is not None:\n",
+    "            decaf_in = decaf_in[np.argsort(channel_swap), :, :]\n",
+    "        if transpose is not None:\n",
+    "            decaf_in = decaf_in.transpose(np.argsort(transpose))\n",
+    "        return decaf_in\n",
+    "\n",
+    "    def set_transpose(self, in_, order):\n",
+    "        \"\"\"\n",
+    "        Set the input channel order for e.g. RGB to BGR conversion\n",
+    "        as needed for the reference ImageNet model.\n",
+    "\n",
+    "        Parameters\n",
+    "        ----------\n",
+    "        in_ : which input to assign this channel order\n",
+    "        order : the order to transpose the dimensions\n",
+    "        \"\"\"\n",
+    "        self.__check_input(in_)\n",
+    "        if len(order) != len(self.inputs[in_]) - 1:\n",
+    "            raise Exception('Transpose order needs to have the same number of '\n",
+    "                            'dimensions as the input.')\n",
+    "        self.transpose[in_] = order\n",
+    "\n",
+    "    def set_channel_swap(self, in_, order):\n",
+    "        \"\"\"\n",
+    "        Set the input channel order for e.g. RGB to BGR conversion\n",
+    "        as needed for the reference ImageNet model.\n",
+    "        N.B. this assumes the channels are the first dimension AFTER transpose.\n",
+    "\n",
+    "        Parameters\n",
+    "        ----------\n",
+    "        in_ : which input to assign this channel order\n",
+    "        order : the order to take the channels.\n",
+    "            (2,1,0) maps RGB to BGR for example.\n",
+    "        \"\"\"\n",
+    "        self.__check_input(in_)\n",
+    "        if len(order) != self.inputs[in_][1]:\n",
+    "            raise Exception('Channel swap needs to have the same number of '\n",
+    "                            'dimensions as the input channels.')\n",
+    "        self.channel_swap[in_] = order\n",
+    "\n",
+    "    def set_raw_scale(self, in_, scale):\n",
+    "        \"\"\"\n",
+    "        Set the scale of raw features s.t. the input blob = input * scale.\n",
+    "        While Python represents images in [0, 1], certain Caffe models\n",
+    "        like CaffeNet and AlexNet represent images in [0, 255] so the raw_scale\n",
+    "        of these models must be 255.\n",
+    "\n",
+    "        Parameters\n",
+    "        ----------\n",
+    "        in_ : which input to assign this scale factor\n",
+    "        scale : scale coefficient\n",
+    "        \"\"\"\n",
+    "        self.__check_input(in_)\n",
+    "        self.raw_scale[in_] = scale\n",
+    "\n",
+    "    def set_mean(self, in_, mean):\n",
+    "        \"\"\"\n",
+    "        Set the mean to subtract for centering the data.\n",
+    "\n",
+    "        Parameters\n",
+    "        ----------\n",
+    "        in_ : which input to assign this mean.\n",
+    "        mean : mean ndarray (input dimensional or broadcastable)\n",
+    "        \"\"\"\n",
+    "        self.__check_input(in_)\n",
+    "        ms = mean.shape\n",
+    "        if mean.ndim == 1:\n",
+    "            # broadcast channels\n",
+    "            if ms[0] != self.inputs[in_][1]:\n",
+    "                raise ValueError('Mean channels incompatible with input.')\n",
+    "            mean = mean[:, np.newaxis, np.newaxis]\n",
+    "        else:\n",
+    "            # elementwise mean\n",
+    "            if len(ms) == 2:\n",
+    "                ms = (1,) + ms\n",
+    "            if len(ms) != 3:\n",
+    "                raise ValueError('Mean shape invalid')\n",
+    "            if ms != self.inputs[in_][1:]:\n",
+    "                raise ValueError('Mean shape incompatible with input shape.')\n",
+    "        self.mean[in_] = mean\n",
+    "\n",
+    "    def set_input_scale(self, in_, scale):\n",
+    "        \"\"\"\n",
+    "        Set the scale of preprocessed inputs s.t. the blob = blob * scale.\n",
+    "        N.B. input_scale is done AFTER mean subtraction and other preprocessing\n",
+    "        while raw_scale is done BEFORE.\n",
+    "\n",
+    "        Parameters\n",
+    "        ----------\n",
+    "        in_ : which input to assign this scale factor\n",
+    "        scale : scale coefficient\n",
+    "        \"\"\"\n",
+    "        self.__check_input(in_)\n",
+    "        self.input_scale[in_] = scale\n",
+    "\n",
+    "def resize_image(im, new_dims, interp_order=1):\n",
+    "    \"\"\"\n",
+    "    Resize an image array with interpolation.\n",
+    "\n",
+    "    Parameters\n",
+    "    ----------\n",
+    "    im : (H x W x K) ndarray\n",
+    "    new_dims : (height, width) tuple of new dimensions.\n",
+    "    interp_order : interpolation order, default is linear.\n",
+    "\n",
+    "    Returns\n",
+    "    -------\n",
+    "    im : resized ndarray with shape (new_dims[0], new_dims[1], K)\n",
+    "    \"\"\"\n",
+    "    if im.shape[-1] == 1 or im.shape[-1] == 3:\n",
+    "        im_min, im_max = im.min(), im.max()\n",
+    "        if im_max > im_min:\n",
+    "            # skimage is fast but only understands {1,3} channel images\n",
+    "            # in [0, 1].\n",
+    "            im_std = (im - im_min) / (im_max - im_min)\n",
+    "            resized_std = resize(im_std, new_dims, order=interp_order)\n",
+    "            resized_im = resized_std * (im_max - im_min) + im_min\n",
+    "        else:\n",
+    "            # the image is a constant -- avoid divide by 0\n",
+    "            ret = np.empty((new_dims[0], new_dims[1], im.shape[-1]),\n",
+    "                           dtype=np.float32)\n",
+    "            ret.fill(im_min)\n",
+    "            return ret\n",
+    "    else:\n",
+    "        # ndimage interpolates anything but more slowly.\n",
+    "        scale = tuple(np.array(new_dims, dtype=float) / np.array(im.shape[:2]))\n",
+    "        resized_im = zoom(im, scale + (1,), order=interp_order)\n",
+    "    return resized_im.astype(np.float32)\n",
+    "\n",
+    "## Image IO\n",
+    "\n",
+    "def load_image(filename, color=True):\n",
+    "    \"\"\"\n",
+    "    Load an image converting from grayscale or alpha as needed.\n",
+    "\n",
+    "    Parameters\n",
+    "    ----------\n",
+    "    filename : string\n",
+    "    color : boolean\n",
+    "        flag for color format. True (default) loads as RGB while False\n",
+    "        loads as intensity (if image is already grayscale).\n",
+    "\n",
+    "    Returns\n",
+    "    -------\n",
+    "    image : an image with type np.float32 in range [0, 1]\n",
+    "        of size (H x W x 3) in RGB or\n",
+    "        of size (H x W x 1) in grayscale.\n",
+    "    \"\"\"\n",
+    "    img = skimage.img_as_float(skimage.io.imread(filename, as_grey=not color)).astype(np.float32)\n",
+    "    if img.ndim == 2:\n",
+    "        img = img[:, :, np.newaxis]\n",
+    "        if color:\n",
+    "            img = np.tile(img, (1, 1, 3))\n",
+    "    elif img.shape[2] == 4:\n",
+    "        img = img[:, :, :3]\n",
+    "    return img"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 3,
+   "metadata": {
+    "collapsed": true
+   },
+   "outputs": [],
+   "source": [
+    "transformer = Transformer({'data': (1, 3, 300, 300)})\n",
+    "transformer.set_transpose('data', (2, 0, 1))\n",
+    "transformer.set_mean('data', np.array([104,117,123])) # mean pixel\n",
+    "transformer.set_raw_scale('data', 255)\n",
+    "transformer.set_channel_swap('data', (2,1,0))\n",
+    "image_resize = 300\n",
+    "\n",
+    "#image = load_image('./cat.jpg')\n",
+    "image = load_image('./fish-bike.jpg')\n",
+    "\n",
+    "transformed_image = transformer.preprocess('data', image)\n"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 6,
+   "metadata": {
+    "collapsed": true
+   },
+   "outputs": [],
+   "source": [
+    "from caffe2.proto import caffe2_pb2\n",
+    "from caffe2.python import workspace, core\n",
+    "\n",
+    "def deviceOpts(cpu_or_cuda):\n",
+    "    device_opts = caffe2_pb2.DeviceOption()\n",
+    "    if cpu_or_cuda == 'cpu':\n",
+    "        device_opts.device_type = caffe2_pb2.CPU\n",
+    "    elif cpu_or_cuda == 'cuda':\n",
+    "        device_opts.device_type = caffe2_pb2.CUDA\n",
+    "        device_opts.cuda_gpu_id = 0\n",
+    "    return device_opts\n",
+    "\n",
+    "_devs = {'CUDA': deviceOpts('cuda'), 'CPU': deviceOpts('cpu')}\n",
+    "\n",
+    "def initNet(init_net_path):\n",
+    "    init_def = caffe2_pb2.NetDef()\n",
+    "    with open(init_net_path, 'r') as f:\n",
+    "        init_def.ParseFromString(f.read())\n",
+    "        init_def.device_option.CopyFrom(_devs['CUDA'])\n",
+    "        workspace.RunNetOnce(init_def)\n",
+    "    return init_def\n",
+    "        \n",
+    "def createNet(predict_net_path):\n",
+    "    net_def = caffe2_pb2.NetDef()\n",
+    "    with open(predict_net_path, 'r') as f:\n",
+    "        net_def.ParseFromString(f.read())\n",
+    "        for op in net_def.op:\n",
+    "            if op.type == 'PriorBox':\n",
+    "                op.device_option.CopyFrom(_devs['CUDA'])\n",
+    "            elif op.type == 'Concat' and op.output[0] == 'mbox_priorbox':\n",
+    "                op.device_option.CopyFrom(_devs['CPU'])\n",
+    "            elif op.type == 'Norm':\n",
+    "                op.device_option.CopyFrom(_devs['CUDA'])\n",
+    "            elif op.type == 'DetectionOutput':\n",
+    "                op.device_option.CopyFrom(_devs['CUDA'])\n",
+    "            else:\n",
+    "                op.device_option.CopyFrom(_devs['CUDA'])\n",
+    "                op.engine = 'CUDNN'\n",
+    "    workspace.CreateNet(net_def, overwrite=True)\n",
+    "    return net_def            "
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 7,
+   "metadata": {
+    "collapsed": true
+   },
+   "outputs": [],
+   "source": [
+    "init_net = './VGG_VOC0712_SSD_300x300_ft_iter_120000_model.pb'\n",
+    "pred_net = './VGG_VOC0712_SSD_300x300_ft_iter_120000_deploy.pb'\n",
+    "\n",
+    "#init_net = './VGG_VOC0712Plus_SSD_300x300_ft_iter_160000_model.pb'\n",
+    "#pred_net = './VGG_VOC0712Plus_SSD_300x300_ft_iter_160000_deploy.pb'\n",
+    "\n",
+    "init_def = initNet(init_net)\n",
+    "net_def = createNet(pred_net)"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 8,
+   "metadata": {},
+   "outputs": [
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      "[[[[  0.00000000e+00   1.00000000e+00   5.83125502e-02 ...,\n",
+      "      2.63728738e-01   9.59399700e-01   9.66735005e-01]\n",
+      "   [  0.00000000e+00   1.00000000e+00   4.31296453e-02 ...,\n",
+      "      1.38993531e-01   9.99477386e-01   1.83442503e-01]\n",
+      "   [  0.00000000e+00   1.00000000e+00   3.02297063e-02 ...,\n",
+      "      1.15415044e-01   1.00104904e+00   1.91035390e-01]\n",
+      "   ..., \n",
+      "   [  0.00000000e+00   1.50000000e+01   1.82130318e-02 ...,\n",
+      "      1.28509402e-01   8.12089682e-01   1.61306441e-01]\n",
+      "   [  0.00000000e+00   1.50000000e+01   1.80804189e-02 ...,\n",
+      "      2.04778425e-02   6.31491899e-01   1.25986278e-01]\n",
+      "   [  0.00000000e+00   1.90000000e+01   2.30362620e-02 ...,\n",
+      "      2.63728738e-01   9.59399700e-01   9.66735005e-01]]]]\n"
+     ]
+    }
+   ],
+   "source": [
+    "workspace.FeedBlob('data', transformed_image[np.newaxis, :, :, :], _devs['CUDA'])\n",
+    "workspace.RunNet(net_def.name, 1)\n",
+    "\n",
+    "detections = workspace.FetchBlob('detection_out')\n",
+    "print detections"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 9,
+   "metadata": {
+    "collapsed": true
+   },
+   "outputs": [],
+   "source": [
+    "# Parse the outputs.\n",
+    "det_label = detections[0,0,:,1]\n",
+    "det_conf = detections[0,0,:,2]\n",
+    "det_xmin = detections[0,0,:,3]\n",
+    "det_ymin = detections[0,0,:,4]\n",
+    "det_xmax = detections[0,0,:,5]\n",
+    "det_ymax = detections[0,0,:,6]\n",
+    "\n",
+    "# Get detections with confidence higher than 0.6.\n",
+    "top_indices = [i for i, conf in enumerate(det_conf) if conf >= 0.6]\n",
+    "\n",
+    "top_conf = det_conf[top_indices]\n",
+    "top_label_indices = det_label[top_indices].tolist()\n",
+    "top_xmin = det_xmin[top_indices]\n",
+    "top_ymin = det_ymin[top_indices]\n",
+    "top_xmax = det_xmax[top_indices]\n",
+    "top_ymax = det_ymax[top_indices]"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 13,
+   "metadata": {},
+   "outputs": [
+    {
+     "data": {
+      "image/png": "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\n",
+      "text/plain": [
+       "<matplotlib.figure.Figure at 0x7fade24a4490>"
+      ]
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    }
+   ],
+   "source": [
+    "CLASSES = ('__background__', \n",
+    "           'aeroplane', 'bicycle', 'bird', 'boat',\n",
+    "           'bottle', 'bus', 'car', 'cat', 'chair',\n",
+    "           'cow', 'diningtable', 'dog', 'horse',\n",
+    "           'motorbike', 'person', 'pottedplant',\n",
+    "           'sheep', 'sofa', 'train', 'tvmonitor')\n",
+    "\n",
+    "plt.imshow(image)\n",
+    "currentAxis = plt.gca()\n",
+    "colors = plt.cm.hsv(np.linspace(0, 1, len(CLASSES))).tolist()\n",
+    "\n",
+    "for i in xrange(top_conf.shape[0]):\n",
+    "    xmin = int(round(top_xmin[i] * image.shape[1]))\n",
+    "    ymin = int(round(top_ymin[i] * image.shape[0]))\n",
+    "    xmax = int(round(top_xmax[i] * image.shape[1]))\n",
+    "    ymax = int(round(top_ymax[i] * image.shape[0]))\n",
+    "    score = top_conf[i]\n",
+    "    label = int(top_label_indices[i])\n",
+    "    display_txt = '%s: %.2f'%(CLASSES[label], score)\n",
+    "    coords = (xmin, ymin), xmax-xmin+1, ymax-ymin+1\n",
+    "    color = colors[label]\n",
+    "    currentAxis.add_patch(plt.Rectangle(*coords, fill=False, edgecolor=color, linewidth=2))\n",
+    "    currentAxis.text(xmin, ymin, display_txt, bbox={'facecolor':color, 'alpha':0.5})"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 14,
+   "metadata": {},
+   "outputs": [
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      "runing time is 0.011\n"
+     ]
+    }
+   ],
+   "source": [
+    "import time\n",
+    "start = time.time()\n",
+    "for i in range(1000):\n",
+    "    workspace.RunNet(net_def.name, 1)\n",
+    "end = time.time()\n",
+    "print \"runing time is {:.3f}\".format((end - start) / 1000.)"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 15,
+   "metadata": {},
+   "outputs": [
+    {
+     "data": {
+      "text/plain": [
+       "[10.97538948059082,\n",
+       " 0.27111512422561646,\n",
+       " 0.1423695683479309,\n",
+       " 0.6968256235122681,\n",
+       " 0.14158080518245697,\n",
+       " 0.10612311959266663,\n",
+       " 0.36024731397628784,\n",
+       " 0.0767509937286377,\n",
+       " 0.488681435585022,\n",
+       " 0.07785005867481232,\n",
+       " 0.060129888355731964,\n",
+       " 0.2725091874599457,\n",
+       " 0.040560636669397354,\n",
+       " 0.439386248588562,\n",
+       " 0.04082459956407547,\n",
+       " 0.4401678740978241,\n",
+       " 0.04086838662624359,\n",
+       " 0.07246701419353485,\n",
+       " 0.31838804483413696,\n",
+       " 0.016638562083244324,\n",
+       " 0.5634734034538269,\n",
+       " 0.016388660296797752,\n",
+       " 0.5646839737892151,\n",
+       " 0.016355719417333603,\n",
+       " 0.018961895257234573,\n",
+       " 0.30640703439712524,\n",
+       " 0.012087388895452023,\n",
+       " 0.30465570092201233,\n",
+       " 0.012390497140586376,\n",
+       " 0.3042011559009552,\n",
+       " 0.011858567595481873,\n",
+       " 0.020401647314429283,\n",
+       " 0.43112364411354065,\n",
+       " 0.012888296507298946,\n",
+       " 0.14113055169582367,\n",
+       " 0.012165140360593796,\n",
+       " 0.126914381980896,\n",
+       " 0.009967812336981297,\n",
+       " 0.17172345519065857,\n",
+       " 0.010277282446622849,\n",
+       " 0.08372443169355392,\n",
+       " 0.009542128071188927,\n",
+       " 0.11652639508247375,\n",
+       " 0.00959863793104887,\n",
+       " 0.058197565376758575,\n",
+       " 0.009335575625300407,\n",
+       " 0.11435139924287796,\n",
+       " 0.0094523960724473,\n",
+       " 0.05330540984869003,\n",
+       " 0.009213384240865707,\n",
+       " 0.10176604241132736,\n",
+       " 0.00926057156175375,\n",
+       " 0.10588341951370239,\n",
+       " 0.0963764488697052,\n",
+       " 0.01923970691859722,\n",
+       " 0.011851472780108452,\n",
+       " 0.1342499703168869,\n",
+       " 0.01686328835785389,\n",
+       " 0.010740896686911583,\n",
+       " 0.08764398097991943,\n",
+       " 0.15785683691501617,\n",
+       " 0.016991395503282547,\n",
+       " 0.009904480539262295,\n",
+       " 0.19058255851268768,\n",
+       " 0.016483992338180542,\n",
+       " 0.010079653933644295,\n",
+       " 0.03406504541635513,\n",
+       " 0.08494783937931061,\n",
+       " 0.013347874395549297,\n",
+       " 0.009321363642811775,\n",
+       " 0.1036040335893631,\n",
+       " 0.016400927677750587,\n",
+       " 0.00949533749371767,\n",
+       " 0.010122272185981274,\n",
+       " 0.05852612107992172,\n",
+       " 0.012097054161131382,\n",
+       " 0.009458709508180618,\n",
+       " 0.06456752121448517,\n",
+       " 0.013817237690091133,\n",
+       " 0.009351741522550583,\n",
+       " 0.0034033784177154303,\n",
+       " 0.05315818265080452,\n",
+       " 0.01224645134061575,\n",
+       " 0.009357311762869358,\n",
+       " 0.05431829020380974,\n",
+       " 0.01225512009114027,\n",
+       " 0.009417884983122349,\n",
+       " 0.0018239859491586685,\n",
+       " 0.052461814135313034,\n",
+       " 0.012605312280356884,\n",
+       " 0.009516912512481213,\n",
+       " 0.05384477972984314,\n",
+       " 0.011797932907938957,\n",
+       " 0.00936792977154255,\n",
+       " 0.0012665282702073455,\n",
+       " 0.03222067654132843,\n",
+       " 0.09147340804338455,\n",
+       " 0.021317634731531143,\n",
+       " 0.08517687767744064,\n",
+       " 0.12127738445997238,\n",
+       " 0.010423989966511726,\n",
+       " 1.1985809803009033]"
+      ]
+     },
+     "execution_count": 15,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "import caffe2.python._import_c_extension as C\n",
+    "# total time is 17.65166 ms/iter.\n",
+    "# detection_op cost 7.8284 ms/iter. need to reduce the time spend on detection.\n",
+    "# ConvOp cost 7.7306 ms/iter.\n",
+    "\n",
+    "# After i implement gpu DetectionOutput\n",
+    "# the runing time is 10.975ms/iter\n",
+    "# the runing time of gpu DetectionOutput is 1.19858ms/iter!!\n",
+    "C.benchmark_net(net_def.name, 0, 1000, True)"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": null,
+   "metadata": {
+    "collapsed": true
+   },
+   "outputs": [],
+   "source": []
+  }
+ ],
+ "metadata": {
+  "kernelspec": {
+   "display_name": "Python 2",
+   "language": "python",
+   "name": "python2"
+  },
+  "language_info": {
+   "codemirror_mode": {
+    "name": "ipython",
+    "version": 2
+   },
+   "file_extension": ".py",
+   "mimetype": "text/x-python",
+   "name": "python",
+   "nbconvert_exporter": "python",
+   "pygments_lexer": "ipython2",
+   "version": "2.7.12"
+  }
+ },
+ "nbformat": 4,
+ "nbformat_minor": 2
+}
diff --git a/caffe2/python/examples/ssd/visualize_caffe_implementation_det.ipynb b/caffe2/python/examples/ssd/visualize_caffe_implementation_det.ipynb
new file mode 100644
index 000000000..2d51beebb
--- /dev/null
+++ b/caffe2/python/examples/ssd/visualize_caffe_implementation_det.ipynb
@@ -0,0 +1,181 @@
+{
+ "cells": [
+  {
+   "cell_type": "code",
+   "execution_count": 8,
+   "metadata": {
+    "collapsed": true
+   },
+   "outputs": [],
+   "source": [
+    "import numpy as np\n",
+    "import sys\n",
+    "sys.path.insert(0, '/data2/obj_detect/ssd/caffe/python')\n",
+    "import caffe\n",
+    "import matplotlib.pyplot as plt\n",
+    "%matplotlib inline\n",
+    "plt.rcParams['figure.figsize'] = (10, 10)\n",
+    "plt.rcParams['image.interpolation'] = 'nearest'\n",
+    "plt.rcParams['image.cmap'] = 'gray'"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 2,
+   "metadata": {
+    "collapsed": true
+   },
+   "outputs": [],
+   "source": [
+    "#ssd_pt = './models/VGGNet/VOC0712Plus/SSD_300x300_ft/deploy.prototxt'\n",
+    "#ssd_md = './models/VGGNet/VOC0712Plus/SSD_300x300_ft/VGG_VOC0712Plus_SSD_300x300_ft_iter_160000.caffemodel'\n",
+    "ssd_pt = './models/VGGNet/VOC0712/SSD_300x300_ft/deploy.prototxt'\n",
+    "ssd_md = './models/VGGNet/VOC0712/SSD_300x300_ft/VGG_VOC0712_SSD_300x300_ft_iter_120000.caffemodel'\n",
+    "ssd_img = './fish-bike.jpg'"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 3,
+   "metadata": {
+    "collapsed": true
+   },
+   "outputs": [],
+   "source": [
+    "net = caffe.Net(ssd_pt, ssd_md, caffe.TEST)"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 4,
+   "metadata": {
+    "collapsed": true
+   },
+   "outputs": [],
+   "source": [
+    "image = caffe.io.load_image(ssd_img)\n",
+    "\n",
+    "transformer = caffe.io.Transformer({'data': net.blobs['data'].data.shape})\n",
+    "transformer.set_transpose('data', (2, 0, 1))\n",
+    "transformer.set_mean('data', np.array([104,117,123])) # mean pixel\n",
+    "transformer.set_raw_scale('data', 255)\n",
+    "transformer.set_channel_swap('data', (2,1,0))\n",
+    "image_resize = 300\n",
+    "net.blobs['data'].reshape(1,3,image_resize,image_resize)\n",
+    "image = caffe.io.load_image(ssd_img)\n",
+    "transformed_image = transformer.preprocess('data', image)\n",
+    "net.blobs['data'].data[...] = transformed_image"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 5,
+   "metadata": {
+    "collapsed": true
+   },
+   "outputs": [],
+   "source": [
+    "detections = net.forward()['detection_out']"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 6,
+   "metadata": {
+    "collapsed": true
+   },
+   "outputs": [],
+   "source": [
+    "# Parse the outputs.\n",
+    "det_label = detections[0,0,:,1]\n",
+    "det_conf = detections[0,0,:,2]\n",
+    "det_xmin = detections[0,0,:,3]\n",
+    "det_ymin = detections[0,0,:,4]\n",
+    "det_xmax = detections[0,0,:,5]\n",
+    "det_ymax = detections[0,0,:,6]\n",
+    "\n",
+    "# Get detections with confidence higher than 0.6.\n",
+    "top_indices = [i for i, conf in enumerate(det_conf) if conf >= 0.6]\n",
+    "\n",
+    "top_conf = det_conf[top_indices]\n",
+    "top_label_indices = det_label[top_indices].tolist()\n",
+    "top_xmin = det_xmin[top_indices]\n",
+    "top_ymin = det_ymin[top_indices]\n",
+    "top_xmax = det_xmax[top_indices]\n",
+    "top_ymax = det_ymax[top_indices]"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 9,
+   "metadata": {},
+   "outputs": [
+    {
+     "data": {
+      "image/png": "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\n",
+      "text/plain": [
+       "<matplotlib.figure.Figure at 0x7f3923ff9650>"
+      ]
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    }
+   ],
+   "source": [
+    "CLASSES = ('__background__', \n",
+    "           'aeroplane', 'bicycle', 'bird', 'boat',\n",
+    "           'bottle', 'bus', 'car', 'cat', 'chair',\n",
+    "           'cow', 'diningtable', 'dog', 'horse',\n",
+    "           'motorbike', 'person', 'pottedplant',\n",
+    "           'sheep', 'sofa', 'train', 'tvmonitor')\n",
+    "\n",
+    "plt.imshow(image)\n",
+    "currentAxis = plt.gca()\n",
+    "colors = plt.cm.hsv(np.linspace(0, 1, len(CLASSES))).tolist()\n",
+    "\n",
+    "for i in xrange(top_conf.shape[0]):\n",
+    "    xmin = int(round(top_xmin[i] * image.shape[1]))\n",
+    "    ymin = int(round(top_ymin[i] * image.shape[0]))\n",
+    "    xmax = int(round(top_xmax[i] * image.shape[1]))\n",
+    "    ymax = int(round(top_ymax[i] * image.shape[0]))\n",
+    "    score = top_conf[i]\n",
+    "    label = int(top_label_indices[i])\n",
+    "    display_txt = '%s: %.2f'%(CLASSES[label], score)\n",
+    "    coords = (xmin, ymin), xmax-xmin+1, ymax-ymin+1\n",
+    "    color = colors[label]\n",
+    "    currentAxis.add_patch(plt.Rectangle(*coords, fill=False, edgecolor=color, linewidth=2))\n",
+    "    currentAxis.text(xmin, ymin, display_txt, bbox={'facecolor':color, 'alpha':0.5})"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": null,
+   "metadata": {
+    "collapsed": true
+   },
+   "outputs": [],
+   "source": []
+  }
+ ],
+ "metadata": {
+  "kernelspec": {
+   "display_name": "Python 2",
+   "language": "python",
+   "name": "python2"
+  },
+  "language_info": {
+   "codemirror_mode": {
+    "name": "ipython",
+    "version": 2
+   },
+   "file_extension": ".py",
+   "mimetype": "text/x-python",
+   "name": "python",
+   "nbconvert_exporter": "python",
+   "pygments_lexer": "ipython2",
+   "version": "2.7.12"
+  }
+ },
+ "nbformat": 4,
+ "nbformat_minor": 2
+}
diff --git a/caffe2/python/ssd_test/caffe_ssd_models/deploy.prototxt b/caffe2/python/ssd_test/caffe_ssd_models/deploy.prototxt
new file mode 100644
index 000000000..08b71b560
--- /dev/null
+++ b/caffe2/python/ssd_test/caffe_ssd_models/deploy.prototxt
@@ -0,0 +1,1621 @@
+name: "VGG_VOC0712_SSD_300x300_deploy"
+input: "data"
+input_shape {
+  dim: 1
+  dim: 3
+  dim: 300
+  dim: 300
+}
+layer {
+  name: "conv1_1"
+  type: "Convolution"
+  bottom: "data"
+  top: "conv1_1"
+  param {
+    lr_mult: 1.0
+    decay_mult: 1.0
+  }
+  param {
+    lr_mult: 2.0
+    decay_mult: 0.0
+  }
+  convolution_param {
+    num_output: 64
+    pad: 1
+    kernel_size: 3
+    weight_filler {
+      type: "xavier"
+    }
+    bias_filler {
+      type: "constant"
+      value: 0.0
+    }
+  }
+}
+layer {
+  name: "relu1_1"
+  type: "ReLU"
+  bottom: "conv1_1"
+  top: "conv1_1"
+}
+layer {
+  name: "conv1_2"
+  type: "Convolution"
+  bottom: "conv1_1"
+  top: "conv1_2"
+  param {
+    lr_mult: 1.0
+    decay_mult: 1.0
+  }
+  param {
+    lr_mult: 2.0
+    decay_mult: 0.0
+  }
+  convolution_param {
+    num_output: 64
+    pad: 1
+    kernel_size: 3
+    weight_filler {
+      type: "xavier"
+    }
+    bias_filler {
+      type: "constant"
+      value: 0.0
+    }
+  }
+}
+layer {
+  name: "relu1_2"
+  type: "ReLU"
+  bottom: "conv1_2"
+  top: "conv1_2"
+}
+layer {
+  name: "pool1"
+  type: "Pooling"
+  bottom: "conv1_2"
+  top: "pool1"
+  pooling_param {
+    pool: MAX
+    kernel_size: 2
+    stride: 2
+  }
+}
+layer {
+  name: "conv2_1"
+  type: "Convolution"
+  bottom: "pool1"
+  top: "conv2_1"
+  param {
+    lr_mult: 1.0
+    decay_mult: 1.0
+  }
+  param {
+    lr_mult: 2.0
+    decay_mult: 0.0
+  }
+  convolution_param {
+    num_output: 128
+    pad: 1
+    kernel_size: 3
+    weight_filler {
+      type: "xavier"
+    }
+    bias_filler {
+      type: "constant"
+      value: 0.0
+    }
+  }
+}
+layer {
+  name: "relu2_1"
+  type: "ReLU"
+  bottom: "conv2_1"
+  top: "conv2_1"
+}
+layer {
+  name: "conv2_2"
+  type: "Convolution"
+  bottom: "conv2_1"
+  top: "conv2_2"
+  param {
+    lr_mult: 1.0
+    decay_mult: 1.0
+  }
+  param {
+    lr_mult: 2.0
+    decay_mult: 0.0
+  }
+  convolution_param {
+    num_output: 128
+    pad: 1
+    kernel_size: 3
+    weight_filler {
+      type: "xavier"
+    }
+    bias_filler {
+      type: "constant"
+      value: 0.0
+    }
+  }
+}
+layer {
+  name: "relu2_2"
+  type: "ReLU"
+  bottom: "conv2_2"
+  top: "conv2_2"
+}
+layer {
+  name: "pool2"
+  type: "Pooling"
+  bottom: "conv2_2"
+  top: "pool2"
+  pooling_param {
+    pool: MAX
+    kernel_size: 2
+    stride: 2
+  }
+}
+layer {
+  name: "conv3_1"
+  type: "Convolution"
+  bottom: "pool2"
+  top: "conv3_1"
+  param {
+    lr_mult: 1.0
+    decay_mult: 1.0
+  }
+  param {
+    lr_mult: 2.0
+    decay_mult: 0.0
+  }
+  convolution_param {
+    num_output: 256
+    pad: 1
+    kernel_size: 3
+    weight_filler {
+      type: "xavier"
+    }
+    bias_filler {
+      type: "constant"
+      value: 0.0
+    }
+  }
+}
+layer {
+  name: "relu3_1"
+  type: "ReLU"
+  bottom: "conv3_1"
+  top: "conv3_1"
+}
+layer {
+  name: "conv3_2"
+  type: "Convolution"
+  bottom: "conv3_1"
+  top: "conv3_2"
+  param {
+    lr_mult: 1.0
+    decay_mult: 1.0
+  }
+  param {
+    lr_mult: 2.0
+    decay_mult: 0.0
+  }
+  convolution_param {
+    num_output: 256
+    pad: 1
+    kernel_size: 3
+    weight_filler {
+      type: "xavier"
+    }
+    bias_filler {
+      type: "constant"
+      value: 0.0
+    }
+  }
+}
+layer {
+  name: "relu3_2"
+  type: "ReLU"
+  bottom: "conv3_2"
+  top: "conv3_2"
+}
+layer {
+  name: "conv3_3"
+  type: "Convolution"
+  bottom: "conv3_2"
+  top: "conv3_3"
+  param {
+    lr_mult: 1.0
+    decay_mult: 1.0
+  }
+  param {
+    lr_mult: 2.0
+    decay_mult: 0.0
+  }
+  convolution_param {
+    num_output: 256
+    pad: 1
+    kernel_size: 3
+    weight_filler {
+      type: "xavier"
+    }
+    bias_filler {
+      type: "constant"
+      value: 0.0
+    }
+  }
+}
+layer {
+  name: "relu3_3"
+  type: "ReLU"
+  bottom: "conv3_3"
+  top: "conv3_3"
+}
+layer {
+  name: "pool3"
+  type: "Pooling"
+  bottom: "conv3_3"
+  top: "pool3"
+  pooling_param {
+    pool: MAX
+    kernel_size: 2
+    stride: 2
+  }
+}
+layer {
+  name: "conv4_1"
+  type: "Convolution"
+  bottom: "pool3"
+  top: "conv4_1"
+  param {
+    lr_mult: 1.0
+    decay_mult: 1.0
+  }
+  param {
+    lr_mult: 2.0
+    decay_mult: 0.0
+  }
+  convolution_param {
+    num_output: 512
+    pad: 1
+    kernel_size: 3
+    weight_filler {
+      type: "xavier"
+    }
+    bias_filler {
+      type: "constant"
+      value: 0.0
+    }
+  }
+}
+layer {
+  name: "relu4_1"
+  type: "ReLU"
+  bottom: "conv4_1"
+  top: "conv4_1"
+}
+layer {
+  name: "conv4_2"
+  type: "Convolution"
+  bottom: "conv4_1"
+  top: "conv4_2"
+  param {
+    lr_mult: 1.0
+    decay_mult: 1.0
+  }
+  param {
+    lr_mult: 2.0
+    decay_mult: 0.0
+  }
+  convolution_param {
+    num_output: 512
+    pad: 1
+    kernel_size: 3
+    weight_filler {
+      type: "xavier"
+    }
+    bias_filler {
+      type: "constant"
+      value: 0.0
+    }
+  }
+}
+layer {
+  name: "relu4_2"
+  type: "ReLU"
+  bottom: "conv4_2"
+  top: "conv4_2"
+}
+layer {
+  name: "conv4_3"
+  type: "Convolution"
+  bottom: "conv4_2"
+  top: "conv4_3"
+  param {
+    lr_mult: 1.0
+    decay_mult: 1.0
+  }
+  param {
+    lr_mult: 2.0
+    decay_mult: 0.0
+  }
+  convolution_param {
+    num_output: 512
+    pad: 1
+    kernel_size: 3
+    weight_filler {
+      type: "xavier"
+    }
+    bias_filler {
+      type: "constant"
+      value: 0.0
+    }
+  }
+}
+layer {
+  name: "relu4_3"
+  type: "ReLU"
+  bottom: "conv4_3"
+  top: "conv4_3"
+}
+layer {
+  name: "pool4"
+  type: "Pooling"
+  bottom: "conv4_3"
+  top: "pool4"
+  pooling_param {
+    pool: MAX
+    kernel_size: 2
+    stride: 2
+  }
+}
+layer {
+  name: "conv5_1"
+  type: "Convolution"
+  bottom: "pool4"
+  top: "conv5_1"
+  param {
+    lr_mult: 1.0
+    decay_mult: 1.0
+  }
+  param {
+    lr_mult: 2.0
+    decay_mult: 0.0
+  }
+  convolution_param {
+    num_output: 512
+    pad: 1
+    kernel_size: 3
+    weight_filler {
+      type: "xavier"
+    }
+    bias_filler {
+      type: "constant"
+      value: 0.0
+    }
+    dilation: 1
+  }
+}
+layer {
+  name: "relu5_1"
+  type: "ReLU"
+  bottom: "conv5_1"
+  top: "conv5_1"
+}
+layer {
+  name: "conv5_2"
+  type: "Convolution"
+  bottom: "conv5_1"
+  top: "conv5_2"
+  param {
+    lr_mult: 1.0
+    decay_mult: 1.0
+  }
+  param {
+    lr_mult: 2.0
+    decay_mult: 0.0
+  }
+  convolution_param {
+    num_output: 512
+    pad: 1
+    kernel_size: 3
+    weight_filler {
+      type: "xavier"
+    }
+    bias_filler {
+      type: "constant"
+      value: 0.0
+    }
+    dilation: 1
+  }
+}
+layer {
+  name: "relu5_2"
+  type: "ReLU"
+  bottom: "conv5_2"
+  top: "conv5_2"
+}
+layer {
+  name: "conv5_3"
+  type: "Convolution"
+  bottom: "conv5_2"
+  top: "conv5_3"
+  param {
+    lr_mult: 1.0
+    decay_mult: 1.0
+  }
+  param {
+    lr_mult: 2.0
+    decay_mult: 0.0
+  }
+  convolution_param {
+    num_output: 512
+    pad: 1
+    kernel_size: 3
+    weight_filler {
+      type: "xavier"
+    }
+    bias_filler {
+      type: "constant"
+      value: 0.0
+    }
+    dilation: 1
+  }
+}
+layer {
+  name: "relu5_3"
+  type: "ReLU"
+  bottom: "conv5_3"
+  top: "conv5_3"
+}
+layer {
+  name: "pool5"
+  type: "Pooling"
+  bottom: "conv5_3"
+  top: "pool5"
+  pooling_param {
+    pool: MAX
+    kernel_size: 3
+    stride: 1
+    pad: 1
+  }
+}
+layer {
+  name: "fc6"
+  type: "Convolution"
+  bottom: "pool5"
+  top: "fc6"
+  param {
+    lr_mult: 1.0
+    decay_mult: 1.0
+  }
+  param {
+    lr_mult: 2.0
+    decay_mult: 0.0
+  }
+  convolution_param {
+    num_output: 1024
+    pad: 6
+    kernel_size: 3
+    weight_filler {
+      type: "xavier"
+    }
+    bias_filler {
+      type: "constant"
+      value: 0.0
+    }
+    dilation: 6
+  }
+}
+layer {
+  name: "relu6"
+  type: "ReLU"
+  bottom: "fc6"
+  top: "fc6"
+}
+layer {
+  name: "fc7"
+  type: "Convolution"
+  bottom: "fc6"
+  top: "fc7"
+  param {
+    lr_mult: 1.0
+    decay_mult: 1.0
+  }
+  param {
+    lr_mult: 2.0
+    decay_mult: 0.0
+  }
+  convolution_param {
+    num_output: 1024
+    kernel_size: 1
+    weight_filler {
+      type: "xavier"
+    }
+    bias_filler {
+      type: "constant"
+      value: 0.0
+    }
+  }
+}
+layer {
+  name: "relu7"
+  type: "ReLU"
+  bottom: "fc7"
+  top: "fc7"
+}
+layer {
+  name: "conv6_1"
+  type: "Convolution"
+  bottom: "fc7"
+  top: "conv6_1"
+  param {
+    lr_mult: 1.0
+    decay_mult: 1.0
+  }
+  param {
+    lr_mult: 2.0
+    decay_mult: 0.0
+  }
+  convolution_param {
+    num_output: 256
+    pad: 0
+    kernel_size: 1
+    stride: 1
+    weight_filler {
+      type: "xavier"
+    }
+    bias_filler {
+      type: "constant"
+      value: 0.0
+    }
+  }
+}
+layer {
+  name: "conv6_1_relu"
+  type: "ReLU"
+  bottom: "conv6_1"
+  top: "conv6_1"
+}
+layer {
+  name: "conv6_2"
+  type: "Convolution"
+  bottom: "conv6_1"
+  top: "conv6_2"
+  param {
+    lr_mult: 1.0
+    decay_mult: 1.0
+  }
+  param {
+    lr_mult: 2.0
+    decay_mult: 0.0
+  }
+  convolution_param {
+    num_output: 512
+    pad: 1
+    kernel_size: 3
+    stride: 2
+    weight_filler {
+      type: "xavier"
+    }
+    bias_filler {
+      type: "constant"
+      value: 0.0
+    }
+  }
+}
+layer {
+  name: "conv6_2_relu"
+  type: "ReLU"
+  bottom: "conv6_2"
+  top: "conv6_2"
+}
+layer {
+  name: "conv7_1"
+  type: "Convolution"
+  bottom: "conv6_2"
+  top: "conv7_1"
+  param {
+    lr_mult: 1.0
+    decay_mult: 1.0
+  }
+  param {
+    lr_mult: 2.0
+    decay_mult: 0.0
+  }
+  convolution_param {
+    num_output: 128
+    pad: 0
+    kernel_size: 1
+    stride: 1
+    weight_filler {
+      type: "xavier"
+    }
+    bias_filler {
+      type: "constant"
+      value: 0.0
+    }
+  }
+}
+layer {
+  name: "conv7_1_relu"
+  type: "ReLU"
+  bottom: "conv7_1"
+  top: "conv7_1"
+}
+layer {
+  name: "conv7_2"
+  type: "Convolution"
+  bottom: "conv7_1"
+  top: "conv7_2"
+  param {
+    lr_mult: 1.0
+    decay_mult: 1.0
+  }
+  param {
+    lr_mult: 2.0
+    decay_mult: 0.0
+  }
+  convolution_param {
+    num_output: 256
+    pad: 1
+    kernel_size: 3
+    stride: 2
+    weight_filler {
+      type: "xavier"
+    }
+    bias_filler {
+      type: "constant"
+      value: 0.0
+    }
+  }
+}
+layer {
+  name: "conv7_2_relu"
+  type: "ReLU"
+  bottom: "conv7_2"
+  top: "conv7_2"
+}
+layer {
+  name: "conv8_1"
+  type: "Convolution"
+  bottom: "conv7_2"
+  top: "conv8_1"
+  param {
+    lr_mult: 1.0
+    decay_mult: 1.0
+  }
+  param {
+    lr_mult: 2.0
+    decay_mult: 0.0
+  }
+  convolution_param {
+    num_output: 128
+    pad: 0
+    kernel_size: 1
+    stride: 1
+    weight_filler {
+      type: "xavier"
+    }
+    bias_filler {
+      type: "constant"
+      value: 0.0
+    }
+  }
+}
+layer {
+  name: "conv8_1_relu"
+  type: "ReLU"
+  bottom: "conv8_1"
+  top: "conv8_1"
+}
+layer {
+  name: "conv8_2"
+  type: "Convolution"
+  bottom: "conv8_1"
+  top: "conv8_2"
+  param {
+    lr_mult: 1.0
+    decay_mult: 1.0
+  }
+  param {
+    lr_mult: 2.0
+    decay_mult: 0.0
+  }
+  convolution_param {
+    num_output: 256
+    pad: 0
+    kernel_size: 3
+    stride: 1
+    weight_filler {
+      type: "xavier"
+    }
+    bias_filler {
+      type: "constant"
+      value: 0.0
+    }
+  }
+}
+layer {
+  name: "conv8_2_relu"
+  type: "ReLU"
+  bottom: "conv8_2"
+  top: "conv8_2"
+}
+layer {
+  name: "conv9_1"
+  type: "Convolution"
+  bottom: "conv8_2"
+  top: "conv9_1"
+  param {
+    lr_mult: 1.0
+    decay_mult: 1.0
+  }
+  param {
+    lr_mult: 2.0
+    decay_mult: 0.0
+  }
+  convolution_param {
+    num_output: 128
+    pad: 0
+    kernel_size: 1
+    stride: 1
+    weight_filler {
+      type: "xavier"
+    }
+    bias_filler {
+      type: "constant"
+      value: 0.0
+    }
+  }
+}
+layer {
+  name: "conv9_1_relu"
+  type: "ReLU"
+  bottom: "conv9_1"
+  top: "conv9_1"
+}
+layer {
+  name: "conv9_2"
+  type: "Convolution"
+  bottom: "conv9_1"
+  top: "conv9_2"
+  param {
+    lr_mult: 1.0
+    decay_mult: 1.0
+  }
+  param {
+    lr_mult: 2.0
+    decay_mult: 0.0
+  }
+  convolution_param {
+    num_output: 256
+    pad: 0
+    kernel_size: 3
+    stride: 1
+    weight_filler {
+      type: "xavier"
+    }
+    bias_filler {
+      type: "constant"
+      value: 0.0
+    }
+  }
+}
+layer {
+  name: "conv9_2_relu"
+  type: "ReLU"
+  bottom: "conv9_2"
+  top: "conv9_2"
+}
+layer {
+  name: "conv4_3_norm"
+  type: "Normalize"
+  bottom: "conv4_3"
+  top: "conv4_3_norm"
+  norm_param {
+    across_spatial: false
+    scale_filler {
+      type: "constant"
+      value: 20.0
+    }
+    channel_shared: false
+  }
+}
+layer {
+  name: "conv4_3_norm_mbox_loc"
+  type: "Convolution"
+  bottom: "conv4_3_norm"
+  top: "conv4_3_norm_mbox_loc"
+  param {
+    lr_mult: 1.0
+    decay_mult: 1.0
+  }
+  param {
+    lr_mult: 2.0
+    decay_mult: 0.0
+  }
+  convolution_param {
+    num_output: 16
+    pad: 1
+    kernel_size: 3
+    stride: 1
+    weight_filler {
+      type: "xavier"
+    }
+    bias_filler {
+      type: "constant"
+      value: 0.0
+    }
+  }
+}
+layer {
+  name: "conv4_3_norm_mbox_loc_perm"
+  type: "Permute"
+  bottom: "conv4_3_norm_mbox_loc"
+  top: "conv4_3_norm_mbox_loc_perm"
+  permute_param {
+    order: 0
+    order: 2
+    order: 3
+    order: 1
+  }
+}
+layer {
+  name: "conv4_3_norm_mbox_loc_flat"
+  type: "Flatten"
+  bottom: "conv4_3_norm_mbox_loc_perm"
+  top: "conv4_3_norm_mbox_loc_flat"
+  flatten_param {
+    axis: 1
+  }
+}
+layer {
+  name: "conv4_3_norm_mbox_conf"
+  type: "Convolution"
+  bottom: "conv4_3_norm"
+  top: "conv4_3_norm_mbox_conf"
+  param {
+    lr_mult: 1.0
+    decay_mult: 1.0
+  }
+  param {
+    lr_mult: 2.0
+    decay_mult: 0.0
+  }
+  convolution_param {
+    num_output: 84
+    pad: 1
+    kernel_size: 3
+    stride: 1
+    weight_filler {
+      type: "xavier"
+    }
+    bias_filler {
+      type: "constant"
+      value: 0.0
+    }
+  }
+}
+layer {
+  name: "conv4_3_norm_mbox_conf_perm"
+  type: "Permute"
+  bottom: "conv4_3_norm_mbox_conf"
+  top: "conv4_3_norm_mbox_conf_perm"
+  permute_param {
+    order: 0
+    order: 2
+    order: 3
+    order: 1
+  }
+}
+layer {
+  name: "conv4_3_norm_mbox_conf_flat"
+  type: "Flatten"
+  bottom: "conv4_3_norm_mbox_conf_perm"
+  top: "conv4_3_norm_mbox_conf_flat"
+  flatten_param {
+    axis: 1
+  }
+}
+layer {
+  name: "conv4_3_norm_mbox_priorbox"
+  type: "PriorBox"
+  bottom: "conv4_3_norm"
+  bottom: "data"
+  top: "conv4_3_norm_mbox_priorbox"
+  prior_box_param {
+    min_size: 30.0
+    max_size: 60.0
+    aspect_ratio: 2.0
+    flip: true
+    clip: false
+    variance: 0.10000000149
+    variance: 0.10000000149
+    variance: 0.20000000298
+    variance: 0.20000000298
+    step: 8.0
+    offset: 0.5
+  }
+}
+layer {
+  name: "fc7_mbox_loc"
+  type: "Convolution"
+  bottom: "fc7"
+  top: "fc7_mbox_loc"
+  param {
+    lr_mult: 1.0
+    decay_mult: 1.0
+  }
+  param {
+    lr_mult: 2.0
+    decay_mult: 0.0
+  }
+  convolution_param {
+    num_output: 24
+    pad: 1
+    kernel_size: 3
+    stride: 1
+    weight_filler {
+      type: "xavier"
+    }
+    bias_filler {
+      type: "constant"
+      value: 0.0
+    }
+  }
+}
+layer {
+  name: "fc7_mbox_loc_perm"
+  type: "Permute"
+  bottom: "fc7_mbox_loc"
+  top: "fc7_mbox_loc_perm"
+  permute_param {
+    order: 0
+    order: 2
+    order: 3
+    order: 1
+  }
+}
+layer {
+  name: "fc7_mbox_loc_flat"
+  type: "Flatten"
+  bottom: "fc7_mbox_loc_perm"
+  top: "fc7_mbox_loc_flat"
+  flatten_param {
+    axis: 1
+  }
+}
+layer {
+  name: "fc7_mbox_conf"
+  type: "Convolution"
+  bottom: "fc7"
+  top: "fc7_mbox_conf"
+  param {
+    lr_mult: 1.0
+    decay_mult: 1.0
+  }
+  param {
+    lr_mult: 2.0
+    decay_mult: 0.0
+  }
+  convolution_param {
+    num_output: 126
+    pad: 1
+    kernel_size: 3
+    stride: 1
+    weight_filler {
+      type: "xavier"
+    }
+    bias_filler {
+      type: "constant"
+      value: 0.0
+    }
+  }
+}
+layer {
+  name: "fc7_mbox_conf_perm"
+  type: "Permute"
+  bottom: "fc7_mbox_conf"
+  top: "fc7_mbox_conf_perm"
+  permute_param {
+    order: 0
+    order: 2
+    order: 3
+    order: 1
+  }
+}
+layer {
+  name: "fc7_mbox_conf_flat"
+  type: "Flatten"
+  bottom: "fc7_mbox_conf_perm"
+  top: "fc7_mbox_conf_flat"
+  flatten_param {
+    axis: 1
+  }
+}
+layer {
+  name: "fc7_mbox_priorbox"
+  type: "PriorBox"
+  bottom: "fc7"
+  bottom: "data"
+  top: "fc7_mbox_priorbox"
+  prior_box_param {
+    min_size: 60.0
+    max_size: 111.0
+    aspect_ratio: 2.0
+    aspect_ratio: 3.0
+    flip: true
+    clip: false
+    variance: 0.10000000149
+    variance: 0.10000000149
+    variance: 0.20000000298
+    variance: 0.20000000298
+    step: 16.0
+    offset: 0.5
+  }
+}
+layer {
+  name: "conv6_2_mbox_loc"
+  type: "Convolution"
+  bottom: "conv6_2"
+  top: "conv6_2_mbox_loc"
+  param {
+    lr_mult: 1.0
+    decay_mult: 1.0
+  }
+  param {
+    lr_mult: 2.0
+    decay_mult: 0.0
+  }
+  convolution_param {
+    num_output: 24
+    pad: 1
+    kernel_size: 3
+    stride: 1
+    weight_filler {
+      type: "xavier"
+    }
+    bias_filler {
+      type: "constant"
+      value: 0.0
+    }
+  }
+}
+layer {
+  name: "conv6_2_mbox_loc_perm"
+  type: "Permute"
+  bottom: "conv6_2_mbox_loc"
+  top: "conv6_2_mbox_loc_perm"
+  permute_param {
+    order: 0
+    order: 2
+    order: 3
+    order: 1
+  }
+}
+layer {
+  name: "conv6_2_mbox_loc_flat"
+  type: "Flatten"
+  bottom: "conv6_2_mbox_loc_perm"
+  top: "conv6_2_mbox_loc_flat"
+  flatten_param {
+    axis: 1
+  }
+}
+layer {
+  name: "conv6_2_mbox_conf"
+  type: "Convolution"
+  bottom: "conv6_2"
+  top: "conv6_2_mbox_conf"
+  param {
+    lr_mult: 1.0
+    decay_mult: 1.0
+  }
+  param {
+    lr_mult: 2.0
+    decay_mult: 0.0
+  }
+  convolution_param {
+    num_output: 126
+    pad: 1
+    kernel_size: 3
+    stride: 1
+    weight_filler {
+      type: "xavier"
+    }
+    bias_filler {
+      type: "constant"
+      value: 0.0
+    }
+  }
+}
+layer {
+  name: "conv6_2_mbox_conf_perm"
+  type: "Permute"
+  bottom: "conv6_2_mbox_conf"
+  top: "conv6_2_mbox_conf_perm"
+  permute_param {
+    order: 0
+    order: 2
+    order: 3
+    order: 1
+  }
+}
+layer {
+  name: "conv6_2_mbox_conf_flat"
+  type: "Flatten"
+  bottom: "conv6_2_mbox_conf_perm"
+  top: "conv6_2_mbox_conf_flat"
+  flatten_param {
+    axis: 1
+  }
+}
+layer {
+  name: "conv6_2_mbox_priorbox"
+  type: "PriorBox"
+  bottom: "conv6_2"
+  bottom: "data"
+  top: "conv6_2_mbox_priorbox"
+  prior_box_param {
+    min_size: 111.0
+    max_size: 162.0
+    aspect_ratio: 2.0
+    aspect_ratio: 3.0
+    flip: true
+    clip: false
+    variance: 0.10000000149
+    variance: 0.10000000149
+    variance: 0.20000000298
+    variance: 0.20000000298
+    step: 32.0
+    offset: 0.5
+  }
+}
+layer {
+  name: "conv7_2_mbox_loc"
+  type: "Convolution"
+  bottom: "conv7_2"
+  top: "conv7_2_mbox_loc"
+  param {
+    lr_mult: 1.0
+    decay_mult: 1.0
+  }
+  param {
+    lr_mult: 2.0
+    decay_mult: 0.0
+  }
+  convolution_param {
+    num_output: 24
+    pad: 1
+    kernel_size: 3
+    stride: 1
+    weight_filler {
+      type: "xavier"
+    }
+    bias_filler {
+      type: "constant"
+      value: 0.0
+    }
+  }
+}
+layer {
+  name: "conv7_2_mbox_loc_perm"
+  type: "Permute"
+  bottom: "conv7_2_mbox_loc"
+  top: "conv7_2_mbox_loc_perm"
+  permute_param {
+    order: 0
+    order: 2
+    order: 3
+    order: 1
+  }
+}
+layer {
+  name: "conv7_2_mbox_loc_flat"
+  type: "Flatten"
+  bottom: "conv7_2_mbox_loc_perm"
+  top: "conv7_2_mbox_loc_flat"
+  flatten_param {
+    axis: 1
+  }
+}
+layer {
+  name: "conv7_2_mbox_conf"
+  type: "Convolution"
+  bottom: "conv7_2"
+  top: "conv7_2_mbox_conf"
+  param {
+    lr_mult: 1.0
+    decay_mult: 1.0
+  }
+  param {
+    lr_mult: 2.0
+    decay_mult: 0.0
+  }
+  convolution_param {
+    num_output: 126
+    pad: 1
+    kernel_size: 3
+    stride: 1
+    weight_filler {
+      type: "xavier"
+    }
+    bias_filler {
+      type: "constant"
+      value: 0.0
+    }
+  }
+}
+layer {
+  name: "conv7_2_mbox_conf_perm"
+  type: "Permute"
+  bottom: "conv7_2_mbox_conf"
+  top: "conv7_2_mbox_conf_perm"
+  permute_param {
+    order: 0
+    order: 2
+    order: 3
+    order: 1
+  }
+}
+layer {
+  name: "conv7_2_mbox_conf_flat"
+  type: "Flatten"
+  bottom: "conv7_2_mbox_conf_perm"
+  top: "conv7_2_mbox_conf_flat"
+  flatten_param {
+    axis: 1
+  }
+}
+layer {
+  name: "conv7_2_mbox_priorbox"
+  type: "PriorBox"
+  bottom: "conv7_2"
+  bottom: "data"
+  top: "conv7_2_mbox_priorbox"
+  prior_box_param {
+    min_size: 162.0
+    max_size: 213.0
+    aspect_ratio: 2.0
+    aspect_ratio: 3.0
+    flip: true
+    clip: false
+    variance: 0.10000000149
+    variance: 0.10000000149
+    variance: 0.20000000298
+    variance: 0.20000000298
+    step: 64.0
+    offset: 0.5
+  }
+}
+layer {
+  name: "conv8_2_mbox_loc"
+  type: "Convolution"
+  bottom: "conv8_2"
+  top: "conv8_2_mbox_loc"
+  param {
+    lr_mult: 1.0
+    decay_mult: 1.0
+  }
+  param {
+    lr_mult: 2.0
+    decay_mult: 0.0
+  }
+  convolution_param {
+    num_output: 16
+    pad: 1
+    kernel_size: 3
+    stride: 1
+    weight_filler {
+      type: "xavier"
+    }
+    bias_filler {
+      type: "constant"
+      value: 0.0
+    }
+  }
+}
+layer {
+  name: "conv8_2_mbox_loc_perm"
+  type: "Permute"
+  bottom: "conv8_2_mbox_loc"
+  top: "conv8_2_mbox_loc_perm"
+  permute_param {
+    order: 0
+    order: 2
+    order: 3
+    order: 1
+  }
+}
+layer {
+  name: "conv8_2_mbox_loc_flat"
+  type: "Flatten"
+  bottom: "conv8_2_mbox_loc_perm"
+  top: "conv8_2_mbox_loc_flat"
+  flatten_param {
+    axis: 1
+  }
+}
+layer {
+  name: "conv8_2_mbox_conf"
+  type: "Convolution"
+  bottom: "conv8_2"
+  top: "conv8_2_mbox_conf"
+  param {
+    lr_mult: 1.0
+    decay_mult: 1.0
+  }
+  param {
+    lr_mult: 2.0
+    decay_mult: 0.0
+  }
+  convolution_param {
+    num_output: 84
+    pad: 1
+    kernel_size: 3
+    stride: 1
+    weight_filler {
+      type: "xavier"
+    }
+    bias_filler {
+      type: "constant"
+      value: 0.0
+    }
+  }
+}
+layer {
+  name: "conv8_2_mbox_conf_perm"
+  type: "Permute"
+  bottom: "conv8_2_mbox_conf"
+  top: "conv8_2_mbox_conf_perm"
+  permute_param {
+    order: 0
+    order: 2
+    order: 3
+    order: 1
+  }
+}
+layer {
+  name: "conv8_2_mbox_conf_flat"
+  type: "Flatten"
+  bottom: "conv8_2_mbox_conf_perm"
+  top: "conv8_2_mbox_conf_flat"
+  flatten_param {
+    axis: 1
+  }
+}
+layer {
+  name: "conv8_2_mbox_priorbox"
+  type: "PriorBox"
+  bottom: "conv8_2"
+  bottom: "data"
+  top: "conv8_2_mbox_priorbox"
+  prior_box_param {
+    min_size: 213.0
+    max_size: 264.0
+    aspect_ratio: 2.0
+    flip: true
+    clip: false
+    variance: 0.10000000149
+    variance: 0.10000000149
+    variance: 0.20000000298
+    variance: 0.20000000298
+    step: 100.0
+    offset: 0.5
+  }
+}
+layer {
+  name: "conv9_2_mbox_loc"
+  type: "Convolution"
+  bottom: "conv9_2"
+  top: "conv9_2_mbox_loc"
+  param {
+    lr_mult: 1.0
+    decay_mult: 1.0
+  }
+  param {
+    lr_mult: 2.0
+    decay_mult: 0.0
+  }
+  convolution_param {
+    num_output: 16
+    pad: 1
+    kernel_size: 3
+    stride: 1
+    weight_filler {
+      type: "xavier"
+    }
+    bias_filler {
+      type: "constant"
+      value: 0.0
+    }
+  }
+}
+layer {
+  name: "conv9_2_mbox_loc_perm"
+  type: "Permute"
+  bottom: "conv9_2_mbox_loc"
+  top: "conv9_2_mbox_loc_perm"
+  permute_param {
+    order: 0
+    order: 2
+    order: 3
+    order: 1
+  }
+}
+layer {
+  name: "conv9_2_mbox_loc_flat"
+  type: "Flatten"
+  bottom: "conv9_2_mbox_loc_perm"
+  top: "conv9_2_mbox_loc_flat"
+  flatten_param {
+    axis: 1
+  }
+}
+layer {
+  name: "conv9_2_mbox_conf"
+  type: "Convolution"
+  bottom: "conv9_2"
+  top: "conv9_2_mbox_conf"
+  param {
+    lr_mult: 1.0
+    decay_mult: 1.0
+  }
+  param {
+    lr_mult: 2.0
+    decay_mult: 0.0
+  }
+  convolution_param {
+    num_output: 84
+    pad: 1
+    kernel_size: 3
+    stride: 1
+    weight_filler {
+      type: "xavier"
+    }
+    bias_filler {
+      type: "constant"
+      value: 0.0
+    }
+  }
+}
+layer {
+  name: "conv9_2_mbox_conf_perm"
+  type: "Permute"
+  bottom: "conv9_2_mbox_conf"
+  top: "conv9_2_mbox_conf_perm"
+  permute_param {
+    order: 0
+    order: 2
+    order: 3
+    order: 1
+  }
+}
+layer {
+  name: "conv9_2_mbox_conf_flat"
+  type: "Flatten"
+  bottom: "conv9_2_mbox_conf_perm"
+  top: "conv9_2_mbox_conf_flat"
+  flatten_param {
+    axis: 1
+  }
+}
+layer {
+  name: "conv9_2_mbox_priorbox"
+  type: "PriorBox"
+  bottom: "conv9_2"
+  bottom: "data"
+  top: "conv9_2_mbox_priorbox"
+  prior_box_param {
+    min_size: 264.0
+    max_size: 315.0
+    aspect_ratio: 2.0
+    flip: true
+    clip: false
+    variance: 0.10000000149
+    variance: 0.10000000149
+    variance: 0.20000000298
+    variance: 0.20000000298
+    step: 300.0
+    offset: 0.5
+  }
+}
+layer {
+  name: "mbox_loc"
+  type: "Concat"
+  bottom: "conv4_3_norm_mbox_loc_flat"
+  bottom: "fc7_mbox_loc_flat"
+  bottom: "conv6_2_mbox_loc_flat"
+  bottom: "conv7_2_mbox_loc_flat"
+  bottom: "conv8_2_mbox_loc_flat"
+  bottom: "conv9_2_mbox_loc_flat"
+  top: "mbox_loc"
+  concat_param {
+    axis: 1
+  }
+}
+layer {
+  name: "mbox_conf"
+  type: "Concat"
+  bottom: "conv4_3_norm_mbox_conf_flat"
+  bottom: "fc7_mbox_conf_flat"
+  bottom: "conv6_2_mbox_conf_flat"
+  bottom: "conv7_2_mbox_conf_flat"
+  bottom: "conv8_2_mbox_conf_flat"
+  bottom: "conv9_2_mbox_conf_flat"
+  top: "mbox_conf"
+  concat_param {
+    axis: 1
+  }
+}
+layer {
+  name: "mbox_priorbox"
+  type: "Concat"
+  bottom: "conv4_3_norm_mbox_priorbox"
+  bottom: "fc7_mbox_priorbox"
+  bottom: "conv6_2_mbox_priorbox"
+  bottom: "conv7_2_mbox_priorbox"
+  bottom: "conv8_2_mbox_priorbox"
+  bottom: "conv9_2_mbox_priorbox"
+  top: "mbox_priorbox"
+  concat_param {
+    axis: 2
+  }
+}
+layer {
+  name: "mbox_conf_reshape"
+  type: "Reshape"
+  bottom: "mbox_conf"
+  top: "mbox_conf_reshape"
+  reshape_param {
+    shape {
+      dim: 0
+      dim: -1
+      dim: 21
+    }
+  }
+}
+layer {
+  name: "mbox_conf_softmax"
+  type: "Softmax"
+  bottom: "mbox_conf_reshape"
+  top: "mbox_conf_softmax"
+  softmax_param {
+    axis: 2
+  }
+}
+layer {
+  name: "mbox_conf_flatten"
+  type: "Flatten"
+  bottom: "mbox_conf_softmax"
+  top: "mbox_conf_flatten"
+  flatten_param {
+    axis: 1
+  }
+}
+layer {
+  name: "detection_out"
+  type: "DetectionOutput"
+  bottom: "mbox_loc"
+  bottom: "mbox_conf_flatten"
+  bottom: "mbox_priorbox"
+  top: "detection_out"
+  include {
+    phase: TEST
+  }
+  detection_output_param {
+    num_classes: 21
+    share_location: true
+    background_label_id: 0
+    nms_param {
+      nms_threshold: 0.449999988079
+      top_k: 400
+    }
+    code_type: CENTER_SIZE
+    keep_top_k: 200
+    confidence_threshold: 0.00999999977648
+  }
+}
+
diff --git a/caffe2/python/ssd_test/caffe_translator_norm_test.py b/caffe2/python/ssd_test/caffe_translator_norm_test.py
new file mode 100644
index 000000000..da2b7d98f
--- /dev/null
+++ b/caffe2/python/ssd_test/caffe_translator_norm_test.py
@@ -0,0 +1,57 @@
+import numpy as np
+import os, time, argparse, sys
+
+from caffe2.proto import caffe2_pb2
+from caffe2.python import workspace, core
+import caffe2.python._import_c_extension as C
+
+def parse_args():
+    parser = argparse.ArgumentParser(description='benchmark net in caffe2')
+    parser.add_argument('--init_net', help='init net', type=str, required=True)
+    parser.add_argument('--pred_net', help='pred net', type=str, required=True)
+    parser.add_argument('--cudnn', help='use cudnn', action='store_true', default=False)
+
+    if len(sys.argv) == 1:
+        parser.print_help()
+        sys.exit(1)
+
+    args = parser.parse_args()
+    return args
+
+def deviceOpts():
+    device_opts = caffe2_pb2.DeviceOption()
+    device_opts.device_type = caffe2_pb2.CPU
+    #device_opts.cuda_gpu_id = 0
+    return device_opts
+
+def initNet(init_net_path, device_opts):
+    init_def = caffe2_pb2.NetDef()
+    with open(init_net_path, 'r') as f:
+        init_def.ParseFromString(f.read())
+        init_def.device_option.CopyFrom(device_opts)
+        workspace.RunNetOnce(init_def)
+    return init_def
+
+def createNet(predict_net_path, device_opts, use_cudnn=False):
+    net_def = caffe2_pb2.NetDef()
+    with open(predict_net_path, 'r') as f:
+        net_def.ParseFromString(f.read())
+        net_def.device_option.CopyFrom(device_opts)
+        if use_cudnn:
+            for op in net_def.op:
+                op.engine = "CUDNN"
+        workspace.CreateNet(net_def)
+    return net_def
+
+def main(args):
+    device_opts = deviceOpts()
+
+    init_def = initNet(args.init_net, device_opts)
+    net_def = createNet(args.pred_net, device_opts, use_cudnn=args.cudnn)
+    
+    print net_def 
+    print workspace.FetchBlob('conv4_3_norm_scale')
+
+if __name__ == '__main__':
+    args = parse_args()
+    main(args)
diff --git a/caffe2/python/ssd_test/caffe_translator_permute_test.py b/caffe2/python/ssd_test/caffe_translator_permute_test.py
new file mode 100644
index 000000000..1a7f4f427
--- /dev/null
+++ b/caffe2/python/ssd_test/caffe_translator_permute_test.py
@@ -0,0 +1,75 @@
+import numpy as np
+import os, time, argparse, sys
+
+from caffe2.proto import caffe2_pb2
+from caffe2.python import workspace, core
+import caffe2.python._import_c_extension as C
+
+def parse_args():
+    parser = argparse.ArgumentParser(description='benchmark net in caffe2')
+    parser.add_argument('--init_net', help='init net', type=str, required=True)
+    parser.add_argument('--pred_net', help='pred net', type=str, required=True)
+    parser.add_argument('--cudnn', help='use cudnn', action='store_true', default=False)
+
+    if len(sys.argv) == 1:
+        parser.print_help()
+        sys.exit(1)
+
+    args = parser.parse_args()
+    return args
+
+def deviceOpts():
+    device_opts = caffe2_pb2.DeviceOption()
+    device_opts.device_type = caffe2_pb2.CUDA
+    device_opts.cuda_gpu_id = 3
+    return device_opts
+
+def initNet(init_net_path, device_opts):
+    init_def = caffe2_pb2.NetDef()
+    with open(init_net_path, 'r') as f:
+        init_def.ParseFromString(f.read())
+        init_def.device_option.CopyFrom(device_opts)
+        workspace.RunNetOnce(init_def)
+    return init_def
+
+def createNet(predict_net_path, device_opts, use_cudnn=False):
+    net_def = caffe2_pb2.NetDef()
+    dev = caffe2_pb2.DeviceOption()
+    dev.device_type = caffe2_pb2.CPU
+
+    global final_dev 
+    final_dev = device_opts
+    with open(predict_net_path, 'r') as f:
+        net_def.ParseFromString(f.read())
+        if use_cudnn:
+            for op in net_def.op:
+                if op.type == 'PriorBox':
+                    op.device_option.CopyFrom(final_dev)
+                elif op.type == 'Concat' and op.output[0] == 'mbox_priorbox':
+                    op.device_option.CopyFrom(dev)
+                elif op.type == 'Norm':
+                    op.device_option.CopyFrom(final_dev)
+                else:
+                    op.device_option.CopyFrom(final_dev)
+                    op.engine = 'CUDNN'
+        print net_def
+        workspace.CreateNet(net_def)
+    return net_def
+
+def main(args):
+    device_opts = deviceOpts()
+    init_def = initNet(args.init_net, device_opts)
+    net_def = createNet(args.pred_net, device_opts, use_cudnn=args.cudnn)
+     
+    print net_def 
+    workspace.FeedBlob('data', np.zeros([1, 3, 300, 300]).astype(np.float32), final_dev)
+    start = time.time()
+    for i in range(1000):
+        workspace.RunNet(net_def.name, 1)
+    end = time.time()
+    print (end-start) / 1000
+    
+
+if __name__ == '__main__':
+    args = parse_args()
+    main(args)
diff --git a/caffe2/python/ssd_test/caffe_translator_prior_test.py b/caffe2/python/ssd_test/caffe_translator_prior_test.py
new file mode 100644
index 000000000..79c99d7f5
--- /dev/null
+++ b/caffe2/python/ssd_test/caffe_translator_prior_test.py
@@ -0,0 +1,58 @@
+import numpy as np
+import os, time, argparse, sys
+
+from caffe2.proto import caffe2_pb2
+from caffe2.python import workspace, core
+import caffe2.python._import_c_extension as C
+
+def parse_args():
+    parser = argparse.ArgumentParser(description='benchmark net in caffe2')
+    parser.add_argument('--init_net', help='init net', type=str, required=True)
+    parser.add_argument('--pred_net', help='pred net', type=str, required=True)
+    parser.add_argument('--cudnn', help='use cudnn', action='store_true', default=False)
+
+    if len(sys.argv) == 1:
+        parser.print_help()
+        sys.exit(1)
+
+    args = parser.parse_args()
+    return args
+
+def deviceOpts():
+    device_opts = caffe2_pb2.DeviceOption()
+    device_opts.device_type = caffe2_pb2.CPU
+    #device_opts.cuda_gpu_id = 0
+    return device_opts
+
+def initNet(init_net_path, device_opts):
+    init_def = caffe2_pb2.NetDef()
+    with open(init_net_path, 'r') as f:
+        init_def.ParseFromString(f.read())
+        init_def.device_option.CopyFrom(device_opts)
+        workspace.RunNetOnce(init_def)
+    return init_def
+
+def createNet(predict_net_path, device_opts, use_cudnn=False):
+    net_def = caffe2_pb2.NetDef()
+    with open(predict_net_path, 'r') as f:
+        net_def.ParseFromString(f.read())
+        net_def.device_option.CopyFrom(device_opts)
+        net_def.external_input.extend(['data'])
+        if use_cudnn:
+            for op in net_def.op:
+                op.engine = "CUDNN"
+        workspace.CreateNet(net_def)
+    return net_def
+
+def main(args):
+    device_opts = deviceOpts()
+    workspace.CreateBlob('conv4_norm')
+    workspace.CreateBlob('data')
+    init_def = initNet(args.init_net, device_opts)
+    net_def = createNet(args.pred_net, device_opts, use_cudnn=args.cudnn)
+    
+    print net_def 
+
+if __name__ == '__main__':
+    args = parse_args()
+    main(args)
diff --git a/caffe2/python/ssd_test/conv_test.py b/caffe2/python/ssd_test/conv_test.py
new file mode 100644
index 000000000..959badacf
--- /dev/null
+++ b/caffe2/python/ssd_test/conv_test.py
@@ -0,0 +1,81 @@
+import numpy as np
+import os, time, argparse, sys
+
+from caffe2.proto import caffe2_pb2
+from caffe2.python import workspace, core
+import caffe2.python._import_c_extension as C
+
+def parse_args():
+    parser = argparse.ArgumentParser(description='benchmark net in caffe2')
+    parser.add_argument('--init_net', help='init net', type=str, required=True)
+    parser.add_argument('--pred_net', help='pred net', type=str, required=True)
+    parser.add_argument('--blob', type=str, required=True)
+    parser.add_argument('--cudnn', help='use cudnn', action='store_true', default=False)
+
+    if len(sys.argv) == 1:
+        parser.print_help()
+        sys.exit(1)
+
+    args = parser.parse_args()
+    return args
+
+def deviceOpts():
+    device_opts = caffe2_pb2.DeviceOption()
+    device_opts.device_type = caffe2_pb2.CUDA
+    device_opts.cuda_gpu_id = 3
+    return device_opts
+
+def initNet(init_net_path, device_opts):
+    init_def = caffe2_pb2.NetDef()
+    with open(init_net_path, 'r') as f:
+        init_def.ParseFromString(f.read())
+        init_def.device_option.CopyFrom(device_opts)
+        workspace.RunNetOnce(init_def)
+    return init_def
+
+def createNet(predict_net_path, device_opts, use_cudnn=False):
+    net_def = caffe2_pb2.NetDef()
+    dev = caffe2_pb2.DeviceOption()
+    dev.device_type = caffe2_pb2.CPU
+
+    global final_dev 
+    final_dev = device_opts
+    with open(predict_net_path, 'r') as f:
+        net_def.ParseFromString(f.read())
+        if use_cudnn:
+            for op in net_def.op:
+                if op.type == 'PriorBox':
+                    op.device_option.CopyFrom(final_dev)
+                elif op.type == 'Concat' and op.output[0] == 'mbox_priorbox':
+                    op.device_option.CopyFrom(dev)
+                elif op.type == 'Norm':
+                    op.device_option.CopyFrom(final_dev)
+                else:
+                    op.device_option.CopyFrom(final_dev)
+                    op.engine = 'CUDNN'
+        workspace.CreateNet(net_def)
+    return net_def
+
+def main(args):
+    device_opts = deviceOpts()
+    init_def = initNet(args.init_net, device_opts)
+    net_def = createNet(args.pred_net, device_opts, use_cudnn=args.cudnn)
+    with open('./net.prototxt', 'w') as f:
+        f.write(str(net_def))
+    
+    caffe_data = np.load('./data.npy')
+    caffe1_out = np.load('./{}.npy'.format(args.blob))
+    workspace.FeedBlob('data', caffe_data, final_dev)
+
+    workspace.RunNet(net_def.name, 1)
+
+    caffe2_out = workspace.FetchBlob(args.blob)
+    print net_def
+    print caffe1_out.shape, caffe2_out.shape
+    print np.sum(np.abs(caffe1_out - caffe2_out))
+    print np.allclose(caffe1_out, caffe2_out)
+    
+
+if __name__ == '__main__':
+    args = parse_args()
+    main(args)
diff --git a/caffe2/python/ssd_test/debug_det_layer/deploy.prototxt b/caffe2/python/ssd_test/debug_det_layer/deploy.prototxt
new file mode 100644
index 000000000..08b71b560
--- /dev/null
+++ b/caffe2/python/ssd_test/debug_det_layer/deploy.prototxt
@@ -0,0 +1,1621 @@
+name: "VGG_VOC0712_SSD_300x300_deploy"
+input: "data"
+input_shape {
+  dim: 1
+  dim: 3
+  dim: 300
+  dim: 300
+}
+layer {
+  name: "conv1_1"
+  type: "Convolution"
+  bottom: "data"
+  top: "conv1_1"
+  param {
+    lr_mult: 1.0
+    decay_mult: 1.0
+  }
+  param {
+    lr_mult: 2.0
+    decay_mult: 0.0
+  }
+  convolution_param {
+    num_output: 64
+    pad: 1
+    kernel_size: 3
+    weight_filler {
+      type: "xavier"
+    }
+    bias_filler {
+      type: "constant"
+      value: 0.0
+    }
+  }
+}
+layer {
+  name: "relu1_1"
+  type: "ReLU"
+  bottom: "conv1_1"
+  top: "conv1_1"
+}
+layer {
+  name: "conv1_2"
+  type: "Convolution"
+  bottom: "conv1_1"
+  top: "conv1_2"
+  param {
+    lr_mult: 1.0
+    decay_mult: 1.0
+  }
+  param {
+    lr_mult: 2.0
+    decay_mult: 0.0
+  }
+  convolution_param {
+    num_output: 64
+    pad: 1
+    kernel_size: 3
+    weight_filler {
+      type: "xavier"
+    }
+    bias_filler {
+      type: "constant"
+      value: 0.0
+    }
+  }
+}
+layer {
+  name: "relu1_2"
+  type: "ReLU"
+  bottom: "conv1_2"
+  top: "conv1_2"
+}
+layer {
+  name: "pool1"
+  type: "Pooling"
+  bottom: "conv1_2"
+  top: "pool1"
+  pooling_param {
+    pool: MAX
+    kernel_size: 2
+    stride: 2
+  }
+}
+layer {
+  name: "conv2_1"
+  type: "Convolution"
+  bottom: "pool1"
+  top: "conv2_1"
+  param {
+    lr_mult: 1.0
+    decay_mult: 1.0
+  }
+  param {
+    lr_mult: 2.0
+    decay_mult: 0.0
+  }
+  convolution_param {
+    num_output: 128
+    pad: 1
+    kernel_size: 3
+    weight_filler {
+      type: "xavier"
+    }
+    bias_filler {
+      type: "constant"
+      value: 0.0
+    }
+  }
+}
+layer {
+  name: "relu2_1"
+  type: "ReLU"
+  bottom: "conv2_1"
+  top: "conv2_1"
+}
+layer {
+  name: "conv2_2"
+  type: "Convolution"
+  bottom: "conv2_1"
+  top: "conv2_2"
+  param {
+    lr_mult: 1.0
+    decay_mult: 1.0
+  }
+  param {
+    lr_mult: 2.0
+    decay_mult: 0.0
+  }
+  convolution_param {
+    num_output: 128
+    pad: 1
+    kernel_size: 3
+    weight_filler {
+      type: "xavier"
+    }
+    bias_filler {
+      type: "constant"
+      value: 0.0
+    }
+  }
+}
+layer {
+  name: "relu2_2"
+  type: "ReLU"
+  bottom: "conv2_2"
+  top: "conv2_2"
+}
+layer {
+  name: "pool2"
+  type: "Pooling"
+  bottom: "conv2_2"
+  top: "pool2"
+  pooling_param {
+    pool: MAX
+    kernel_size: 2
+    stride: 2
+  }
+}
+layer {
+  name: "conv3_1"
+  type: "Convolution"
+  bottom: "pool2"
+  top: "conv3_1"
+  param {
+    lr_mult: 1.0
+    decay_mult: 1.0
+  }
+  param {
+    lr_mult: 2.0
+    decay_mult: 0.0
+  }
+  convolution_param {
+    num_output: 256
+    pad: 1
+    kernel_size: 3
+    weight_filler {
+      type: "xavier"
+    }
+    bias_filler {
+      type: "constant"
+      value: 0.0
+    }
+  }
+}
+layer {
+  name: "relu3_1"
+  type: "ReLU"
+  bottom: "conv3_1"
+  top: "conv3_1"
+}
+layer {
+  name: "conv3_2"
+  type: "Convolution"
+  bottom: "conv3_1"
+  top: "conv3_2"
+  param {
+    lr_mult: 1.0
+    decay_mult: 1.0
+  }
+  param {
+    lr_mult: 2.0
+    decay_mult: 0.0
+  }
+  convolution_param {
+    num_output: 256
+    pad: 1
+    kernel_size: 3
+    weight_filler {
+      type: "xavier"
+    }
+    bias_filler {
+      type: "constant"
+      value: 0.0
+    }
+  }
+}
+layer {
+  name: "relu3_2"
+  type: "ReLU"
+  bottom: "conv3_2"
+  top: "conv3_2"
+}
+layer {
+  name: "conv3_3"
+  type: "Convolution"
+  bottom: "conv3_2"
+  top: "conv3_3"
+  param {
+    lr_mult: 1.0
+    decay_mult: 1.0
+  }
+  param {
+    lr_mult: 2.0
+    decay_mult: 0.0
+  }
+  convolution_param {
+    num_output: 256
+    pad: 1
+    kernel_size: 3
+    weight_filler {
+      type: "xavier"
+    }
+    bias_filler {
+      type: "constant"
+      value: 0.0
+    }
+  }
+}
+layer {
+  name: "relu3_3"
+  type: "ReLU"
+  bottom: "conv3_3"
+  top: "conv3_3"
+}
+layer {
+  name: "pool3"
+  type: "Pooling"
+  bottom: "conv3_3"
+  top: "pool3"
+  pooling_param {
+    pool: MAX
+    kernel_size: 2
+    stride: 2
+  }
+}
+layer {
+  name: "conv4_1"
+  type: "Convolution"
+  bottom: "pool3"
+  top: "conv4_1"
+  param {
+    lr_mult: 1.0
+    decay_mult: 1.0
+  }
+  param {
+    lr_mult: 2.0
+    decay_mult: 0.0
+  }
+  convolution_param {
+    num_output: 512
+    pad: 1
+    kernel_size: 3
+    weight_filler {
+      type: "xavier"
+    }
+    bias_filler {
+      type: "constant"
+      value: 0.0
+    }
+  }
+}
+layer {
+  name: "relu4_1"
+  type: "ReLU"
+  bottom: "conv4_1"
+  top: "conv4_1"
+}
+layer {
+  name: "conv4_2"
+  type: "Convolution"
+  bottom: "conv4_1"
+  top: "conv4_2"
+  param {
+    lr_mult: 1.0
+    decay_mult: 1.0
+  }
+  param {
+    lr_mult: 2.0
+    decay_mult: 0.0
+  }
+  convolution_param {
+    num_output: 512
+    pad: 1
+    kernel_size: 3
+    weight_filler {
+      type: "xavier"
+    }
+    bias_filler {
+      type: "constant"
+      value: 0.0
+    }
+  }
+}
+layer {
+  name: "relu4_2"
+  type: "ReLU"
+  bottom: "conv4_2"
+  top: "conv4_2"
+}
+layer {
+  name: "conv4_3"
+  type: "Convolution"
+  bottom: "conv4_2"
+  top: "conv4_3"
+  param {
+    lr_mult: 1.0
+    decay_mult: 1.0
+  }
+  param {
+    lr_mult: 2.0
+    decay_mult: 0.0
+  }
+  convolution_param {
+    num_output: 512
+    pad: 1
+    kernel_size: 3
+    weight_filler {
+      type: "xavier"
+    }
+    bias_filler {
+      type: "constant"
+      value: 0.0
+    }
+  }
+}
+layer {
+  name: "relu4_3"
+  type: "ReLU"
+  bottom: "conv4_3"
+  top: "conv4_3"
+}
+layer {
+  name: "pool4"
+  type: "Pooling"
+  bottom: "conv4_3"
+  top: "pool4"
+  pooling_param {
+    pool: MAX
+    kernel_size: 2
+    stride: 2
+  }
+}
+layer {
+  name: "conv5_1"
+  type: "Convolution"
+  bottom: "pool4"
+  top: "conv5_1"
+  param {
+    lr_mult: 1.0
+    decay_mult: 1.0
+  }
+  param {
+    lr_mult: 2.0
+    decay_mult: 0.0
+  }
+  convolution_param {
+    num_output: 512
+    pad: 1
+    kernel_size: 3
+    weight_filler {
+      type: "xavier"
+    }
+    bias_filler {
+      type: "constant"
+      value: 0.0
+    }
+    dilation: 1
+  }
+}
+layer {
+  name: "relu5_1"
+  type: "ReLU"
+  bottom: "conv5_1"
+  top: "conv5_1"
+}
+layer {
+  name: "conv5_2"
+  type: "Convolution"
+  bottom: "conv5_1"
+  top: "conv5_2"
+  param {
+    lr_mult: 1.0
+    decay_mult: 1.0
+  }
+  param {
+    lr_mult: 2.0
+    decay_mult: 0.0
+  }
+  convolution_param {
+    num_output: 512
+    pad: 1
+    kernel_size: 3
+    weight_filler {
+      type: "xavier"
+    }
+    bias_filler {
+      type: "constant"
+      value: 0.0
+    }
+    dilation: 1
+  }
+}
+layer {
+  name: "relu5_2"
+  type: "ReLU"
+  bottom: "conv5_2"
+  top: "conv5_2"
+}
+layer {
+  name: "conv5_3"
+  type: "Convolution"
+  bottom: "conv5_2"
+  top: "conv5_3"
+  param {
+    lr_mult: 1.0
+    decay_mult: 1.0
+  }
+  param {
+    lr_mult: 2.0
+    decay_mult: 0.0
+  }
+  convolution_param {
+    num_output: 512
+    pad: 1
+    kernel_size: 3
+    weight_filler {
+      type: "xavier"
+    }
+    bias_filler {
+      type: "constant"
+      value: 0.0
+    }
+    dilation: 1
+  }
+}
+layer {
+  name: "relu5_3"
+  type: "ReLU"
+  bottom: "conv5_3"
+  top: "conv5_3"
+}
+layer {
+  name: "pool5"
+  type: "Pooling"
+  bottom: "conv5_3"
+  top: "pool5"
+  pooling_param {
+    pool: MAX
+    kernel_size: 3
+    stride: 1
+    pad: 1
+  }
+}
+layer {
+  name: "fc6"
+  type: "Convolution"
+  bottom: "pool5"
+  top: "fc6"
+  param {
+    lr_mult: 1.0
+    decay_mult: 1.0
+  }
+  param {
+    lr_mult: 2.0
+    decay_mult: 0.0
+  }
+  convolution_param {
+    num_output: 1024
+    pad: 6
+    kernel_size: 3
+    weight_filler {
+      type: "xavier"
+    }
+    bias_filler {
+      type: "constant"
+      value: 0.0
+    }
+    dilation: 6
+  }
+}
+layer {
+  name: "relu6"
+  type: "ReLU"
+  bottom: "fc6"
+  top: "fc6"
+}
+layer {
+  name: "fc7"
+  type: "Convolution"
+  bottom: "fc6"
+  top: "fc7"
+  param {
+    lr_mult: 1.0
+    decay_mult: 1.0
+  }
+  param {
+    lr_mult: 2.0
+    decay_mult: 0.0
+  }
+  convolution_param {
+    num_output: 1024
+    kernel_size: 1
+    weight_filler {
+      type: "xavier"
+    }
+    bias_filler {
+      type: "constant"
+      value: 0.0
+    }
+  }
+}
+layer {
+  name: "relu7"
+  type: "ReLU"
+  bottom: "fc7"
+  top: "fc7"
+}
+layer {
+  name: "conv6_1"
+  type: "Convolution"
+  bottom: "fc7"
+  top: "conv6_1"
+  param {
+    lr_mult: 1.0
+    decay_mult: 1.0
+  }
+  param {
+    lr_mult: 2.0
+    decay_mult: 0.0
+  }
+  convolution_param {
+    num_output: 256
+    pad: 0
+    kernel_size: 1
+    stride: 1
+    weight_filler {
+      type: "xavier"
+    }
+    bias_filler {
+      type: "constant"
+      value: 0.0
+    }
+  }
+}
+layer {
+  name: "conv6_1_relu"
+  type: "ReLU"
+  bottom: "conv6_1"
+  top: "conv6_1"
+}
+layer {
+  name: "conv6_2"
+  type: "Convolution"
+  bottom: "conv6_1"
+  top: "conv6_2"
+  param {
+    lr_mult: 1.0
+    decay_mult: 1.0
+  }
+  param {
+    lr_mult: 2.0
+    decay_mult: 0.0
+  }
+  convolution_param {
+    num_output: 512
+    pad: 1
+    kernel_size: 3
+    stride: 2
+    weight_filler {
+      type: "xavier"
+    }
+    bias_filler {
+      type: "constant"
+      value: 0.0
+    }
+  }
+}
+layer {
+  name: "conv6_2_relu"
+  type: "ReLU"
+  bottom: "conv6_2"
+  top: "conv6_2"
+}
+layer {
+  name: "conv7_1"
+  type: "Convolution"
+  bottom: "conv6_2"
+  top: "conv7_1"
+  param {
+    lr_mult: 1.0
+    decay_mult: 1.0
+  }
+  param {
+    lr_mult: 2.0
+    decay_mult: 0.0
+  }
+  convolution_param {
+    num_output: 128
+    pad: 0
+    kernel_size: 1
+    stride: 1
+    weight_filler {
+      type: "xavier"
+    }
+    bias_filler {
+      type: "constant"
+      value: 0.0
+    }
+  }
+}
+layer {
+  name: "conv7_1_relu"
+  type: "ReLU"
+  bottom: "conv7_1"
+  top: "conv7_1"
+}
+layer {
+  name: "conv7_2"
+  type: "Convolution"
+  bottom: "conv7_1"
+  top: "conv7_2"
+  param {
+    lr_mult: 1.0
+    decay_mult: 1.0
+  }
+  param {
+    lr_mult: 2.0
+    decay_mult: 0.0
+  }
+  convolution_param {
+    num_output: 256
+    pad: 1
+    kernel_size: 3
+    stride: 2
+    weight_filler {
+      type: "xavier"
+    }
+    bias_filler {
+      type: "constant"
+      value: 0.0
+    }
+  }
+}
+layer {
+  name: "conv7_2_relu"
+  type: "ReLU"
+  bottom: "conv7_2"
+  top: "conv7_2"
+}
+layer {
+  name: "conv8_1"
+  type: "Convolution"
+  bottom: "conv7_2"
+  top: "conv8_1"
+  param {
+    lr_mult: 1.0
+    decay_mult: 1.0
+  }
+  param {
+    lr_mult: 2.0
+    decay_mult: 0.0
+  }
+  convolution_param {
+    num_output: 128
+    pad: 0
+    kernel_size: 1
+    stride: 1
+    weight_filler {
+      type: "xavier"
+    }
+    bias_filler {
+      type: "constant"
+      value: 0.0
+    }
+  }
+}
+layer {
+  name: "conv8_1_relu"
+  type: "ReLU"
+  bottom: "conv8_1"
+  top: "conv8_1"
+}
+layer {
+  name: "conv8_2"
+  type: "Convolution"
+  bottom: "conv8_1"
+  top: "conv8_2"
+  param {
+    lr_mult: 1.0
+    decay_mult: 1.0
+  }
+  param {
+    lr_mult: 2.0
+    decay_mult: 0.0
+  }
+  convolution_param {
+    num_output: 256
+    pad: 0
+    kernel_size: 3
+    stride: 1
+    weight_filler {
+      type: "xavier"
+    }
+    bias_filler {
+      type: "constant"
+      value: 0.0
+    }
+  }
+}
+layer {
+  name: "conv8_2_relu"
+  type: "ReLU"
+  bottom: "conv8_2"
+  top: "conv8_2"
+}
+layer {
+  name: "conv9_1"
+  type: "Convolution"
+  bottom: "conv8_2"
+  top: "conv9_1"
+  param {
+    lr_mult: 1.0
+    decay_mult: 1.0
+  }
+  param {
+    lr_mult: 2.0
+    decay_mult: 0.0
+  }
+  convolution_param {
+    num_output: 128
+    pad: 0
+    kernel_size: 1
+    stride: 1
+    weight_filler {
+      type: "xavier"
+    }
+    bias_filler {
+      type: "constant"
+      value: 0.0
+    }
+  }
+}
+layer {
+  name: "conv9_1_relu"
+  type: "ReLU"
+  bottom: "conv9_1"
+  top: "conv9_1"
+}
+layer {
+  name: "conv9_2"
+  type: "Convolution"
+  bottom: "conv9_1"
+  top: "conv9_2"
+  param {
+    lr_mult: 1.0
+    decay_mult: 1.0
+  }
+  param {
+    lr_mult: 2.0
+    decay_mult: 0.0
+  }
+  convolution_param {
+    num_output: 256
+    pad: 0
+    kernel_size: 3
+    stride: 1
+    weight_filler {
+      type: "xavier"
+    }
+    bias_filler {
+      type: "constant"
+      value: 0.0
+    }
+  }
+}
+layer {
+  name: "conv9_2_relu"
+  type: "ReLU"
+  bottom: "conv9_2"
+  top: "conv9_2"
+}
+layer {
+  name: "conv4_3_norm"
+  type: "Normalize"
+  bottom: "conv4_3"
+  top: "conv4_3_norm"
+  norm_param {
+    across_spatial: false
+    scale_filler {
+      type: "constant"
+      value: 20.0
+    }
+    channel_shared: false
+  }
+}
+layer {
+  name: "conv4_3_norm_mbox_loc"
+  type: "Convolution"
+  bottom: "conv4_3_norm"
+  top: "conv4_3_norm_mbox_loc"
+  param {
+    lr_mult: 1.0
+    decay_mult: 1.0
+  }
+  param {
+    lr_mult: 2.0
+    decay_mult: 0.0
+  }
+  convolution_param {
+    num_output: 16
+    pad: 1
+    kernel_size: 3
+    stride: 1
+    weight_filler {
+      type: "xavier"
+    }
+    bias_filler {
+      type: "constant"
+      value: 0.0
+    }
+  }
+}
+layer {
+  name: "conv4_3_norm_mbox_loc_perm"
+  type: "Permute"
+  bottom: "conv4_3_norm_mbox_loc"
+  top: "conv4_3_norm_mbox_loc_perm"
+  permute_param {
+    order: 0
+    order: 2
+    order: 3
+    order: 1
+  }
+}
+layer {
+  name: "conv4_3_norm_mbox_loc_flat"
+  type: "Flatten"
+  bottom: "conv4_3_norm_mbox_loc_perm"
+  top: "conv4_3_norm_mbox_loc_flat"
+  flatten_param {
+    axis: 1
+  }
+}
+layer {
+  name: "conv4_3_norm_mbox_conf"
+  type: "Convolution"
+  bottom: "conv4_3_norm"
+  top: "conv4_3_norm_mbox_conf"
+  param {
+    lr_mult: 1.0
+    decay_mult: 1.0
+  }
+  param {
+    lr_mult: 2.0
+    decay_mult: 0.0
+  }
+  convolution_param {
+    num_output: 84
+    pad: 1
+    kernel_size: 3
+    stride: 1
+    weight_filler {
+      type: "xavier"
+    }
+    bias_filler {
+      type: "constant"
+      value: 0.0
+    }
+  }
+}
+layer {
+  name: "conv4_3_norm_mbox_conf_perm"
+  type: "Permute"
+  bottom: "conv4_3_norm_mbox_conf"
+  top: "conv4_3_norm_mbox_conf_perm"
+  permute_param {
+    order: 0
+    order: 2
+    order: 3
+    order: 1
+  }
+}
+layer {
+  name: "conv4_3_norm_mbox_conf_flat"
+  type: "Flatten"
+  bottom: "conv4_3_norm_mbox_conf_perm"
+  top: "conv4_3_norm_mbox_conf_flat"
+  flatten_param {
+    axis: 1
+  }
+}
+layer {
+  name: "conv4_3_norm_mbox_priorbox"
+  type: "PriorBox"
+  bottom: "conv4_3_norm"
+  bottom: "data"
+  top: "conv4_3_norm_mbox_priorbox"
+  prior_box_param {
+    min_size: 30.0
+    max_size: 60.0
+    aspect_ratio: 2.0
+    flip: true
+    clip: false
+    variance: 0.10000000149
+    variance: 0.10000000149
+    variance: 0.20000000298
+    variance: 0.20000000298
+    step: 8.0
+    offset: 0.5
+  }
+}
+layer {
+  name: "fc7_mbox_loc"
+  type: "Convolution"
+  bottom: "fc7"
+  top: "fc7_mbox_loc"
+  param {
+    lr_mult: 1.0
+    decay_mult: 1.0
+  }
+  param {
+    lr_mult: 2.0
+    decay_mult: 0.0
+  }
+  convolution_param {
+    num_output: 24
+    pad: 1
+    kernel_size: 3
+    stride: 1
+    weight_filler {
+      type: "xavier"
+    }
+    bias_filler {
+      type: "constant"
+      value: 0.0
+    }
+  }
+}
+layer {
+  name: "fc7_mbox_loc_perm"
+  type: "Permute"
+  bottom: "fc7_mbox_loc"
+  top: "fc7_mbox_loc_perm"
+  permute_param {
+    order: 0
+    order: 2
+    order: 3
+    order: 1
+  }
+}
+layer {
+  name: "fc7_mbox_loc_flat"
+  type: "Flatten"
+  bottom: "fc7_mbox_loc_perm"
+  top: "fc7_mbox_loc_flat"
+  flatten_param {
+    axis: 1
+  }
+}
+layer {
+  name: "fc7_mbox_conf"
+  type: "Convolution"
+  bottom: "fc7"
+  top: "fc7_mbox_conf"
+  param {
+    lr_mult: 1.0
+    decay_mult: 1.0
+  }
+  param {
+    lr_mult: 2.0
+    decay_mult: 0.0
+  }
+  convolution_param {
+    num_output: 126
+    pad: 1
+    kernel_size: 3
+    stride: 1
+    weight_filler {
+      type: "xavier"
+    }
+    bias_filler {
+      type: "constant"
+      value: 0.0
+    }
+  }
+}
+layer {
+  name: "fc7_mbox_conf_perm"
+  type: "Permute"
+  bottom: "fc7_mbox_conf"
+  top: "fc7_mbox_conf_perm"
+  permute_param {
+    order: 0
+    order: 2
+    order: 3
+    order: 1
+  }
+}
+layer {
+  name: "fc7_mbox_conf_flat"
+  type: "Flatten"
+  bottom: "fc7_mbox_conf_perm"
+  top: "fc7_mbox_conf_flat"
+  flatten_param {
+    axis: 1
+  }
+}
+layer {
+  name: "fc7_mbox_priorbox"
+  type: "PriorBox"
+  bottom: "fc7"
+  bottom: "data"
+  top: "fc7_mbox_priorbox"
+  prior_box_param {
+    min_size: 60.0
+    max_size: 111.0
+    aspect_ratio: 2.0
+    aspect_ratio: 3.0
+    flip: true
+    clip: false
+    variance: 0.10000000149
+    variance: 0.10000000149
+    variance: 0.20000000298
+    variance: 0.20000000298
+    step: 16.0
+    offset: 0.5
+  }
+}
+layer {
+  name: "conv6_2_mbox_loc"
+  type: "Convolution"
+  bottom: "conv6_2"
+  top: "conv6_2_mbox_loc"
+  param {
+    lr_mult: 1.0
+    decay_mult: 1.0
+  }
+  param {
+    lr_mult: 2.0
+    decay_mult: 0.0
+  }
+  convolution_param {
+    num_output: 24
+    pad: 1
+    kernel_size: 3
+    stride: 1
+    weight_filler {
+      type: "xavier"
+    }
+    bias_filler {
+      type: "constant"
+      value: 0.0
+    }
+  }
+}
+layer {
+  name: "conv6_2_mbox_loc_perm"
+  type: "Permute"
+  bottom: "conv6_2_mbox_loc"
+  top: "conv6_2_mbox_loc_perm"
+  permute_param {
+    order: 0
+    order: 2
+    order: 3
+    order: 1
+  }
+}
+layer {
+  name: "conv6_2_mbox_loc_flat"
+  type: "Flatten"
+  bottom: "conv6_2_mbox_loc_perm"
+  top: "conv6_2_mbox_loc_flat"
+  flatten_param {
+    axis: 1
+  }
+}
+layer {
+  name: "conv6_2_mbox_conf"
+  type: "Convolution"
+  bottom: "conv6_2"
+  top: "conv6_2_mbox_conf"
+  param {
+    lr_mult: 1.0
+    decay_mult: 1.0
+  }
+  param {
+    lr_mult: 2.0
+    decay_mult: 0.0
+  }
+  convolution_param {
+    num_output: 126
+    pad: 1
+    kernel_size: 3
+    stride: 1
+    weight_filler {
+      type: "xavier"
+    }
+    bias_filler {
+      type: "constant"
+      value: 0.0
+    }
+  }
+}
+layer {
+  name: "conv6_2_mbox_conf_perm"
+  type: "Permute"
+  bottom: "conv6_2_mbox_conf"
+  top: "conv6_2_mbox_conf_perm"
+  permute_param {
+    order: 0
+    order: 2
+    order: 3
+    order: 1
+  }
+}
+layer {
+  name: "conv6_2_mbox_conf_flat"
+  type: "Flatten"
+  bottom: "conv6_2_mbox_conf_perm"
+  top: "conv6_2_mbox_conf_flat"
+  flatten_param {
+    axis: 1
+  }
+}
+layer {
+  name: "conv6_2_mbox_priorbox"
+  type: "PriorBox"
+  bottom: "conv6_2"
+  bottom: "data"
+  top: "conv6_2_mbox_priorbox"
+  prior_box_param {
+    min_size: 111.0
+    max_size: 162.0
+    aspect_ratio: 2.0
+    aspect_ratio: 3.0
+    flip: true
+    clip: false
+    variance: 0.10000000149
+    variance: 0.10000000149
+    variance: 0.20000000298
+    variance: 0.20000000298
+    step: 32.0
+    offset: 0.5
+  }
+}
+layer {
+  name: "conv7_2_mbox_loc"
+  type: "Convolution"
+  bottom: "conv7_2"
+  top: "conv7_2_mbox_loc"
+  param {
+    lr_mult: 1.0
+    decay_mult: 1.0
+  }
+  param {
+    lr_mult: 2.0
+    decay_mult: 0.0
+  }
+  convolution_param {
+    num_output: 24
+    pad: 1
+    kernel_size: 3
+    stride: 1
+    weight_filler {
+      type: "xavier"
+    }
+    bias_filler {
+      type: "constant"
+      value: 0.0
+    }
+  }
+}
+layer {
+  name: "conv7_2_mbox_loc_perm"
+  type: "Permute"
+  bottom: "conv7_2_mbox_loc"
+  top: "conv7_2_mbox_loc_perm"
+  permute_param {
+    order: 0
+    order: 2
+    order: 3
+    order: 1
+  }
+}
+layer {
+  name: "conv7_2_mbox_loc_flat"
+  type: "Flatten"
+  bottom: "conv7_2_mbox_loc_perm"
+  top: "conv7_2_mbox_loc_flat"
+  flatten_param {
+    axis: 1
+  }
+}
+layer {
+  name: "conv7_2_mbox_conf"
+  type: "Convolution"
+  bottom: "conv7_2"
+  top: "conv7_2_mbox_conf"
+  param {
+    lr_mult: 1.0
+    decay_mult: 1.0
+  }
+  param {
+    lr_mult: 2.0
+    decay_mult: 0.0
+  }
+  convolution_param {
+    num_output: 126
+    pad: 1
+    kernel_size: 3
+    stride: 1
+    weight_filler {
+      type: "xavier"
+    }
+    bias_filler {
+      type: "constant"
+      value: 0.0
+    }
+  }
+}
+layer {
+  name: "conv7_2_mbox_conf_perm"
+  type: "Permute"
+  bottom: "conv7_2_mbox_conf"
+  top: "conv7_2_mbox_conf_perm"
+  permute_param {
+    order: 0
+    order: 2
+    order: 3
+    order: 1
+  }
+}
+layer {
+  name: "conv7_2_mbox_conf_flat"
+  type: "Flatten"
+  bottom: "conv7_2_mbox_conf_perm"
+  top: "conv7_2_mbox_conf_flat"
+  flatten_param {
+    axis: 1
+  }
+}
+layer {
+  name: "conv7_2_mbox_priorbox"
+  type: "PriorBox"
+  bottom: "conv7_2"
+  bottom: "data"
+  top: "conv7_2_mbox_priorbox"
+  prior_box_param {
+    min_size: 162.0
+    max_size: 213.0
+    aspect_ratio: 2.0
+    aspect_ratio: 3.0
+    flip: true
+    clip: false
+    variance: 0.10000000149
+    variance: 0.10000000149
+    variance: 0.20000000298
+    variance: 0.20000000298
+    step: 64.0
+    offset: 0.5
+  }
+}
+layer {
+  name: "conv8_2_mbox_loc"
+  type: "Convolution"
+  bottom: "conv8_2"
+  top: "conv8_2_mbox_loc"
+  param {
+    lr_mult: 1.0
+    decay_mult: 1.0
+  }
+  param {
+    lr_mult: 2.0
+    decay_mult: 0.0
+  }
+  convolution_param {
+    num_output: 16
+    pad: 1
+    kernel_size: 3
+    stride: 1
+    weight_filler {
+      type: "xavier"
+    }
+    bias_filler {
+      type: "constant"
+      value: 0.0
+    }
+  }
+}
+layer {
+  name: "conv8_2_mbox_loc_perm"
+  type: "Permute"
+  bottom: "conv8_2_mbox_loc"
+  top: "conv8_2_mbox_loc_perm"
+  permute_param {
+    order: 0
+    order: 2
+    order: 3
+    order: 1
+  }
+}
+layer {
+  name: "conv8_2_mbox_loc_flat"
+  type: "Flatten"
+  bottom: "conv8_2_mbox_loc_perm"
+  top: "conv8_2_mbox_loc_flat"
+  flatten_param {
+    axis: 1
+  }
+}
+layer {
+  name: "conv8_2_mbox_conf"
+  type: "Convolution"
+  bottom: "conv8_2"
+  top: "conv8_2_mbox_conf"
+  param {
+    lr_mult: 1.0
+    decay_mult: 1.0
+  }
+  param {
+    lr_mult: 2.0
+    decay_mult: 0.0
+  }
+  convolution_param {
+    num_output: 84
+    pad: 1
+    kernel_size: 3
+    stride: 1
+    weight_filler {
+      type: "xavier"
+    }
+    bias_filler {
+      type: "constant"
+      value: 0.0
+    }
+  }
+}
+layer {
+  name: "conv8_2_mbox_conf_perm"
+  type: "Permute"
+  bottom: "conv8_2_mbox_conf"
+  top: "conv8_2_mbox_conf_perm"
+  permute_param {
+    order: 0
+    order: 2
+    order: 3
+    order: 1
+  }
+}
+layer {
+  name: "conv8_2_mbox_conf_flat"
+  type: "Flatten"
+  bottom: "conv8_2_mbox_conf_perm"
+  top: "conv8_2_mbox_conf_flat"
+  flatten_param {
+    axis: 1
+  }
+}
+layer {
+  name: "conv8_2_mbox_priorbox"
+  type: "PriorBox"
+  bottom: "conv8_2"
+  bottom: "data"
+  top: "conv8_2_mbox_priorbox"
+  prior_box_param {
+    min_size: 213.0
+    max_size: 264.0
+    aspect_ratio: 2.0
+    flip: true
+    clip: false
+    variance: 0.10000000149
+    variance: 0.10000000149
+    variance: 0.20000000298
+    variance: 0.20000000298
+    step: 100.0
+    offset: 0.5
+  }
+}
+layer {
+  name: "conv9_2_mbox_loc"
+  type: "Convolution"
+  bottom: "conv9_2"
+  top: "conv9_2_mbox_loc"
+  param {
+    lr_mult: 1.0
+    decay_mult: 1.0
+  }
+  param {
+    lr_mult: 2.0
+    decay_mult: 0.0
+  }
+  convolution_param {
+    num_output: 16
+    pad: 1
+    kernel_size: 3
+    stride: 1
+    weight_filler {
+      type: "xavier"
+    }
+    bias_filler {
+      type: "constant"
+      value: 0.0
+    }
+  }
+}
+layer {
+  name: "conv9_2_mbox_loc_perm"
+  type: "Permute"
+  bottom: "conv9_2_mbox_loc"
+  top: "conv9_2_mbox_loc_perm"
+  permute_param {
+    order: 0
+    order: 2
+    order: 3
+    order: 1
+  }
+}
+layer {
+  name: "conv9_2_mbox_loc_flat"
+  type: "Flatten"
+  bottom: "conv9_2_mbox_loc_perm"
+  top: "conv9_2_mbox_loc_flat"
+  flatten_param {
+    axis: 1
+  }
+}
+layer {
+  name: "conv9_2_mbox_conf"
+  type: "Convolution"
+  bottom: "conv9_2"
+  top: "conv9_2_mbox_conf"
+  param {
+    lr_mult: 1.0
+    decay_mult: 1.0
+  }
+  param {
+    lr_mult: 2.0
+    decay_mult: 0.0
+  }
+  convolution_param {
+    num_output: 84
+    pad: 1
+    kernel_size: 3
+    stride: 1
+    weight_filler {
+      type: "xavier"
+    }
+    bias_filler {
+      type: "constant"
+      value: 0.0
+    }
+  }
+}
+layer {
+  name: "conv9_2_mbox_conf_perm"
+  type: "Permute"
+  bottom: "conv9_2_mbox_conf"
+  top: "conv9_2_mbox_conf_perm"
+  permute_param {
+    order: 0
+    order: 2
+    order: 3
+    order: 1
+  }
+}
+layer {
+  name: "conv9_2_mbox_conf_flat"
+  type: "Flatten"
+  bottom: "conv9_2_mbox_conf_perm"
+  top: "conv9_2_mbox_conf_flat"
+  flatten_param {
+    axis: 1
+  }
+}
+layer {
+  name: "conv9_2_mbox_priorbox"
+  type: "PriorBox"
+  bottom: "conv9_2"
+  bottom: "data"
+  top: "conv9_2_mbox_priorbox"
+  prior_box_param {
+    min_size: 264.0
+    max_size: 315.0
+    aspect_ratio: 2.0
+    flip: true
+    clip: false
+    variance: 0.10000000149
+    variance: 0.10000000149
+    variance: 0.20000000298
+    variance: 0.20000000298
+    step: 300.0
+    offset: 0.5
+  }
+}
+layer {
+  name: "mbox_loc"
+  type: "Concat"
+  bottom: "conv4_3_norm_mbox_loc_flat"
+  bottom: "fc7_mbox_loc_flat"
+  bottom: "conv6_2_mbox_loc_flat"
+  bottom: "conv7_2_mbox_loc_flat"
+  bottom: "conv8_2_mbox_loc_flat"
+  bottom: "conv9_2_mbox_loc_flat"
+  top: "mbox_loc"
+  concat_param {
+    axis: 1
+  }
+}
+layer {
+  name: "mbox_conf"
+  type: "Concat"
+  bottom: "conv4_3_norm_mbox_conf_flat"
+  bottom: "fc7_mbox_conf_flat"
+  bottom: "conv6_2_mbox_conf_flat"
+  bottom: "conv7_2_mbox_conf_flat"
+  bottom: "conv8_2_mbox_conf_flat"
+  bottom: "conv9_2_mbox_conf_flat"
+  top: "mbox_conf"
+  concat_param {
+    axis: 1
+  }
+}
+layer {
+  name: "mbox_priorbox"
+  type: "Concat"
+  bottom: "conv4_3_norm_mbox_priorbox"
+  bottom: "fc7_mbox_priorbox"
+  bottom: "conv6_2_mbox_priorbox"
+  bottom: "conv7_2_mbox_priorbox"
+  bottom: "conv8_2_mbox_priorbox"
+  bottom: "conv9_2_mbox_priorbox"
+  top: "mbox_priorbox"
+  concat_param {
+    axis: 2
+  }
+}
+layer {
+  name: "mbox_conf_reshape"
+  type: "Reshape"
+  bottom: "mbox_conf"
+  top: "mbox_conf_reshape"
+  reshape_param {
+    shape {
+      dim: 0
+      dim: -1
+      dim: 21
+    }
+  }
+}
+layer {
+  name: "mbox_conf_softmax"
+  type: "Softmax"
+  bottom: "mbox_conf_reshape"
+  top: "mbox_conf_softmax"
+  softmax_param {
+    axis: 2
+  }
+}
+layer {
+  name: "mbox_conf_flatten"
+  type: "Flatten"
+  bottom: "mbox_conf_softmax"
+  top: "mbox_conf_flatten"
+  flatten_param {
+    axis: 1
+  }
+}
+layer {
+  name: "detection_out"
+  type: "DetectionOutput"
+  bottom: "mbox_loc"
+  bottom: "mbox_conf_flatten"
+  bottom: "mbox_priorbox"
+  top: "detection_out"
+  include {
+    phase: TEST
+  }
+  detection_output_param {
+    num_classes: 21
+    share_location: true
+    background_label_id: 0
+    nms_param {
+      nms_threshold: 0.449999988079
+      top_k: 400
+    }
+    code_type: CENTER_SIZE
+    keep_top_k: 200
+    confidence_threshold: 0.00999999977648
+  }
+}
+
diff --git a/caffe2/python/ssd_test/debug_norm_layer/debug.prototxt b/caffe2/python/ssd_test/debug_norm_layer/debug.prototxt
new file mode 100644
index 000000000..b38d016f9
--- /dev/null
+++ b/caffe2/python/ssd_test/debug_norm_layer/debug.prototxt
@@ -0,0 +1,29 @@
+layer {
+	name: "data"
+	type: "Input"
+	top: "data"
+	input_param {
+	shape {
+			dim: 1
+			dim: 512
+			dim: 38
+			dim: 38
+	}
+	}
+}
+
+layer {
+	name: "conv4_3_norm"
+	type: "Normalize"
+	bottom: "data"
+	top: "conv4_3_norm"
+	norm_param {
+		across_spatial: false
+		scale_filler {
+			type: "constant"
+			value: 20
+		}
+		channel_shared: false
+	}
+}
+
diff --git a/caffe2/python/ssd_test/debug_pemute_layer/debug.prototxt b/caffe2/python/ssd_test/debug_pemute_layer/debug.prototxt
new file mode 100644
index 000000000..c9627ccd6
--- /dev/null
+++ b/caffe2/python/ssd_test/debug_pemute_layer/debug.prototxt
@@ -0,0 +1,1598 @@
+name: "VGG_VOC0712_SSD_300x300_deploy"
+input: "data"
+input_shape {
+  dim: 1
+  dim: 3
+  dim: 300
+  dim: 300
+}
+layer {
+  name: "conv1_1"
+  type: "Convolution"
+  bottom: "data"
+  top: "conv1_1"
+  param {
+    lr_mult: 1.0
+    decay_mult: 1.0
+  }
+  param {
+    lr_mult: 2.0
+    decay_mult: 0.0
+  }
+  convolution_param {
+    num_output: 64
+    pad: 1
+    kernel_size: 3
+    weight_filler {
+      type: "xavier"
+    }
+    bias_filler {
+      type: "constant"
+      value: 0.0
+    }
+  }
+}
+layer {
+  name: "relu1_1"
+  type: "ReLU"
+  bottom: "conv1_1"
+  top: "conv1_1"
+}
+layer {
+  name: "conv1_2"
+  type: "Convolution"
+  bottom: "conv1_1"
+  top: "conv1_2"
+  param {
+    lr_mult: 1.0
+    decay_mult: 1.0
+  }
+  param {
+    lr_mult: 2.0
+    decay_mult: 0.0
+  }
+  convolution_param {
+    num_output: 64
+    pad: 1
+    kernel_size: 3
+    weight_filler {
+      type: "xavier"
+    }
+    bias_filler {
+      type: "constant"
+      value: 0.0
+    }
+  }
+}
+layer {
+  name: "relu1_2"
+  type: "ReLU"
+  bottom: "conv1_2"
+  top: "conv1_2"
+}
+layer {
+  name: "pool1"
+  type: "Pooling"
+  bottom: "conv1_2"
+  top: "pool1"
+  pooling_param {
+    pool: MAX
+    kernel_size: 2
+    stride: 2
+  }
+}
+layer {
+  name: "conv2_1"
+  type: "Convolution"
+  bottom: "pool1"
+  top: "conv2_1"
+  param {
+    lr_mult: 1.0
+    decay_mult: 1.0
+  }
+  param {
+    lr_mult: 2.0
+    decay_mult: 0.0
+  }
+  convolution_param {
+    num_output: 128
+    pad: 1
+    kernel_size: 3
+    weight_filler {
+      type: "xavier"
+    }
+    bias_filler {
+      type: "constant"
+      value: 0.0
+    }
+  }
+}
+layer {
+  name: "relu2_1"
+  type: "ReLU"
+  bottom: "conv2_1"
+  top: "conv2_1"
+}
+layer {
+  name: "conv2_2"
+  type: "Convolution"
+  bottom: "conv2_1"
+  top: "conv2_2"
+  param {
+    lr_mult: 1.0
+    decay_mult: 1.0
+  }
+  param {
+    lr_mult: 2.0
+    decay_mult: 0.0
+  }
+  convolution_param {
+    num_output: 128
+    pad: 1
+    kernel_size: 3
+    weight_filler {
+      type: "xavier"
+    }
+    bias_filler {
+      type: "constant"
+      value: 0.0
+    }
+  }
+}
+layer {
+  name: "relu2_2"
+  type: "ReLU"
+  bottom: "conv2_2"
+  top: "conv2_2"
+}
+layer {
+  name: "pool2"
+  type: "Pooling"
+  bottom: "conv2_2"
+  top: "pool2"
+  pooling_param {
+    pool: MAX
+    kernel_size: 2
+    stride: 2
+  }
+}
+layer {
+  name: "conv3_1"
+  type: "Convolution"
+  bottom: "pool2"
+  top: "conv3_1"
+  param {
+    lr_mult: 1.0
+    decay_mult: 1.0
+  }
+  param {
+    lr_mult: 2.0
+    decay_mult: 0.0
+  }
+  convolution_param {
+    num_output: 256
+    pad: 1
+    kernel_size: 3
+    weight_filler {
+      type: "xavier"
+    }
+    bias_filler {
+      type: "constant"
+      value: 0.0
+    }
+  }
+}
+layer {
+  name: "relu3_1"
+  type: "ReLU"
+  bottom: "conv3_1"
+  top: "conv3_1"
+}
+layer {
+  name: "conv3_2"
+  type: "Convolution"
+  bottom: "conv3_1"
+  top: "conv3_2"
+  param {
+    lr_mult: 1.0
+    decay_mult: 1.0
+  }
+  param {
+    lr_mult: 2.0
+    decay_mult: 0.0
+  }
+  convolution_param {
+    num_output: 256
+    pad: 1
+    kernel_size: 3
+    weight_filler {
+      type: "xavier"
+    }
+    bias_filler {
+      type: "constant"
+      value: 0.0
+    }
+  }
+}
+layer {
+  name: "relu3_2"
+  type: "ReLU"
+  bottom: "conv3_2"
+  top: "conv3_2"
+}
+layer {
+  name: "conv3_3"
+  type: "Convolution"
+  bottom: "conv3_2"
+  top: "conv3_3"
+  param {
+    lr_mult: 1.0
+    decay_mult: 1.0
+  }
+  param {
+    lr_mult: 2.0
+    decay_mult: 0.0
+  }
+  convolution_param {
+    num_output: 256
+    pad: 1
+    kernel_size: 3
+    weight_filler {
+      type: "xavier"
+    }
+    bias_filler {
+      type: "constant"
+      value: 0.0
+    }
+  }
+}
+layer {
+  name: "relu3_3"
+  type: "ReLU"
+  bottom: "conv3_3"
+  top: "conv3_3"
+}
+layer {
+  name: "pool3"
+  type: "Pooling"
+  bottom: "conv3_3"
+  top: "pool3"
+  pooling_param {
+    pool: MAX
+    kernel_size: 2
+    stride: 2
+  }
+}
+layer {
+  name: "conv4_1"
+  type: "Convolution"
+  bottom: "pool3"
+  top: "conv4_1"
+  param {
+    lr_mult: 1.0
+    decay_mult: 1.0
+  }
+  param {
+    lr_mult: 2.0
+    decay_mult: 0.0
+  }
+  convolution_param {
+    num_output: 512
+    pad: 1
+    kernel_size: 3
+    weight_filler {
+      type: "xavier"
+    }
+    bias_filler {
+      type: "constant"
+      value: 0.0
+    }
+  }
+}
+layer {
+  name: "relu4_1"
+  type: "ReLU"
+  bottom: "conv4_1"
+  top: "conv4_1"
+}
+layer {
+  name: "conv4_2"
+  type: "Convolution"
+  bottom: "conv4_1"
+  top: "conv4_2"
+  param {
+    lr_mult: 1.0
+    decay_mult: 1.0
+  }
+  param {
+    lr_mult: 2.0
+    decay_mult: 0.0
+  }
+  convolution_param {
+    num_output: 512
+    pad: 1
+    kernel_size: 3
+    weight_filler {
+      type: "xavier"
+    }
+    bias_filler {
+      type: "constant"
+      value: 0.0
+    }
+  }
+}
+layer {
+  name: "relu4_2"
+  type: "ReLU"
+  bottom: "conv4_2"
+  top: "conv4_2"
+}
+layer {
+  name: "conv4_3"
+  type: "Convolution"
+  bottom: "conv4_2"
+  top: "conv4_3"
+  param {
+    lr_mult: 1.0
+    decay_mult: 1.0
+  }
+  param {
+    lr_mult: 2.0
+    decay_mult: 0.0
+  }
+  convolution_param {
+    num_output: 512
+    pad: 1
+    kernel_size: 3
+    weight_filler {
+      type: "xavier"
+    }
+    bias_filler {
+      type: "constant"
+      value: 0.0
+    }
+  }
+}
+layer {
+  name: "relu4_3"
+  type: "ReLU"
+  bottom: "conv4_3"
+  top: "conv4_3"
+}
+layer {
+  name: "pool4"
+  type: "Pooling"
+  bottom: "conv4_3"
+  top: "pool4"
+  pooling_param {
+    pool: MAX
+    kernel_size: 2
+    stride: 2
+  }
+}
+layer {
+  name: "conv5_1"
+  type: "Convolution"
+  bottom: "pool4"
+  top: "conv5_1"
+  param {
+    lr_mult: 1.0
+    decay_mult: 1.0
+  }
+  param {
+    lr_mult: 2.0
+    decay_mult: 0.0
+  }
+  convolution_param {
+    num_output: 512
+    pad: 1
+    kernel_size: 3
+    weight_filler {
+      type: "xavier"
+    }
+    bias_filler {
+      type: "constant"
+      value: 0.0
+    }
+    dilation: 1
+  }
+}
+layer {
+  name: "relu5_1"
+  type: "ReLU"
+  bottom: "conv5_1"
+  top: "conv5_1"
+}
+layer {
+  name: "conv5_2"
+  type: "Convolution"
+  bottom: "conv5_1"
+  top: "conv5_2"
+  param {
+    lr_mult: 1.0
+    decay_mult: 1.0
+  }
+  param {
+    lr_mult: 2.0
+    decay_mult: 0.0
+  }
+  convolution_param {
+    num_output: 512
+    pad: 1
+    kernel_size: 3
+    weight_filler {
+      type: "xavier"
+    }
+    bias_filler {
+      type: "constant"
+      value: 0.0
+    }
+    dilation: 1
+  }
+}
+layer {
+  name: "relu5_2"
+  type: "ReLU"
+  bottom: "conv5_2"
+  top: "conv5_2"
+}
+layer {
+  name: "conv5_3"
+  type: "Convolution"
+  bottom: "conv5_2"
+  top: "conv5_3"
+  param {
+    lr_mult: 1.0
+    decay_mult: 1.0
+  }
+  param {
+    lr_mult: 2.0
+    decay_mult: 0.0
+  }
+  convolution_param {
+    num_output: 512
+    pad: 1
+    kernel_size: 3
+    weight_filler {
+      type: "xavier"
+    }
+    bias_filler {
+      type: "constant"
+      value: 0.0
+    }
+    dilation: 1
+  }
+}
+layer {
+  name: "relu5_3"
+  type: "ReLU"
+  bottom: "conv5_3"
+  top: "conv5_3"
+}
+layer {
+  name: "pool5"
+  type: "Pooling"
+  bottom: "conv5_3"
+  top: "pool5"
+  pooling_param {
+    pool: MAX
+    kernel_size: 3
+    stride: 1
+    pad: 1
+  }
+}
+layer {
+  name: "fc6"
+  type: "Convolution"
+  bottom: "pool5"
+  top: "fc6"
+  param {
+    lr_mult: 1.0
+    decay_mult: 1.0
+  }
+  param {
+    lr_mult: 2.0
+    decay_mult: 0.0
+  }
+  convolution_param {
+    num_output: 1024
+    pad: 6
+    kernel_size: 3
+    weight_filler {
+      type: "xavier"
+    }
+    bias_filler {
+      type: "constant"
+      value: 0.0
+    }
+    dilation: 6
+  }
+}
+layer {
+  name: "relu6"
+  type: "ReLU"
+  bottom: "fc6"
+  top: "fc6"
+}
+layer {
+  name: "fc7"
+  type: "Convolution"
+  bottom: "fc6"
+  top: "fc7"
+  param {
+    lr_mult: 1.0
+    decay_mult: 1.0
+  }
+  param {
+    lr_mult: 2.0
+    decay_mult: 0.0
+  }
+  convolution_param {
+    num_output: 1024
+    kernel_size: 1
+    weight_filler {
+      type: "xavier"
+    }
+    bias_filler {
+      type: "constant"
+      value: 0.0
+    }
+  }
+}
+layer {
+  name: "relu7"
+  type: "ReLU"
+  bottom: "fc7"
+  top: "fc7"
+}
+layer {
+  name: "conv6_1"
+  type: "Convolution"
+  bottom: "fc7"
+  top: "conv6_1"
+  param {
+    lr_mult: 1.0
+    decay_mult: 1.0
+  }
+  param {
+    lr_mult: 2.0
+    decay_mult: 0.0
+  }
+  convolution_param {
+    num_output: 256
+    pad: 0
+    kernel_size: 1
+    stride: 1
+    weight_filler {
+      type: "xavier"
+    }
+    bias_filler {
+      type: "constant"
+      value: 0.0
+    }
+  }
+}
+layer {
+  name: "conv6_1_relu"
+  type: "ReLU"
+  bottom: "conv6_1"
+  top: "conv6_1"
+}
+layer {
+  name: "conv6_2"
+  type: "Convolution"
+  bottom: "conv6_1"
+  top: "conv6_2"
+  param {
+    lr_mult: 1.0
+    decay_mult: 1.0
+  }
+  param {
+    lr_mult: 2.0
+    decay_mult: 0.0
+  }
+  convolution_param {
+    num_output: 512
+    pad: 1
+    kernel_size: 3
+    stride: 2
+    weight_filler {
+      type: "xavier"
+    }
+    bias_filler {
+      type: "constant"
+      value: 0.0
+    }
+  }
+}
+layer {
+  name: "conv6_2_relu"
+  type: "ReLU"
+  bottom: "conv6_2"
+  top: "conv6_2"
+}
+layer {
+  name: "conv7_1"
+  type: "Convolution"
+  bottom: "conv6_2"
+  top: "conv7_1"
+  param {
+    lr_mult: 1.0
+    decay_mult: 1.0
+  }
+  param {
+    lr_mult: 2.0
+    decay_mult: 0.0
+  }
+  convolution_param {
+    num_output: 128
+    pad: 0
+    kernel_size: 1
+    stride: 1
+    weight_filler {
+      type: "xavier"
+    }
+    bias_filler {
+      type: "constant"
+      value: 0.0
+    }
+  }
+}
+layer {
+  name: "conv7_1_relu"
+  type: "ReLU"
+  bottom: "conv7_1"
+  top: "conv7_1"
+}
+layer {
+  name: "conv7_2"
+  type: "Convolution"
+  bottom: "conv7_1"
+  top: "conv7_2"
+  param {
+    lr_mult: 1.0
+    decay_mult: 1.0
+  }
+  param {
+    lr_mult: 2.0
+    decay_mult: 0.0
+  }
+  convolution_param {
+    num_output: 256
+    pad: 1
+    kernel_size: 3
+    stride: 2
+    weight_filler {
+      type: "xavier"
+    }
+    bias_filler {
+      type: "constant"
+      value: 0.0
+    }
+  }
+}
+layer {
+  name: "conv7_2_relu"
+  type: "ReLU"
+  bottom: "conv7_2"
+  top: "conv7_2"
+}
+layer {
+  name: "conv8_1"
+  type: "Convolution"
+  bottom: "conv7_2"
+  top: "conv8_1"
+  param {
+    lr_mult: 1.0
+    decay_mult: 1.0
+  }
+  param {
+    lr_mult: 2.0
+    decay_mult: 0.0
+  }
+  convolution_param {
+    num_output: 128
+    pad: 0
+    kernel_size: 1
+    stride: 1
+    weight_filler {
+      type: "xavier"
+    }
+    bias_filler {
+      type: "constant"
+      value: 0.0
+    }
+  }
+}
+layer {
+  name: "conv8_1_relu"
+  type: "ReLU"
+  bottom: "conv8_1"
+  top: "conv8_1"
+}
+layer {
+  name: "conv8_2"
+  type: "Convolution"
+  bottom: "conv8_1"
+  top: "conv8_2"
+  param {
+    lr_mult: 1.0
+    decay_mult: 1.0
+  }
+  param {
+    lr_mult: 2.0
+    decay_mult: 0.0
+  }
+  convolution_param {
+    num_output: 256
+    pad: 0
+    kernel_size: 3
+    stride: 1
+    weight_filler {
+      type: "xavier"
+    }
+    bias_filler {
+      type: "constant"
+      value: 0.0
+    }
+  }
+}
+layer {
+  name: "conv8_2_relu"
+  type: "ReLU"
+  bottom: "conv8_2"
+  top: "conv8_2"
+}
+layer {
+  name: "conv9_1"
+  type: "Convolution"
+  bottom: "conv8_2"
+  top: "conv9_1"
+  param {
+    lr_mult: 1.0
+    decay_mult: 1.0
+  }
+  param {
+    lr_mult: 2.0
+    decay_mult: 0.0
+  }
+  convolution_param {
+    num_output: 128
+    pad: 0
+    kernel_size: 1
+    stride: 1
+    weight_filler {
+      type: "xavier"
+    }
+    bias_filler {
+      type: "constant"
+      value: 0.0
+    }
+  }
+}
+layer {
+  name: "conv9_1_relu"
+  type: "ReLU"
+  bottom: "conv9_1"
+  top: "conv9_1"
+}
+layer {
+  name: "conv9_2"
+  type: "Convolution"
+  bottom: "conv9_1"
+  top: "conv9_2"
+  param {
+    lr_mult: 1.0
+    decay_mult: 1.0
+  }
+  param {
+    lr_mult: 2.0
+    decay_mult: 0.0
+  }
+  convolution_param {
+    num_output: 256
+    pad: 0
+    kernel_size: 3
+    stride: 1
+    weight_filler {
+      type: "xavier"
+    }
+    bias_filler {
+      type: "constant"
+      value: 0.0
+    }
+  }
+}
+layer {
+  name: "conv9_2_relu"
+  type: "ReLU"
+  bottom: "conv9_2"
+  top: "conv9_2"
+}
+layer {
+  name: "conv4_3_norm"
+  type: "Normalize"
+  bottom: "conv4_3"
+  top: "conv4_3_norm"
+  norm_param {
+    across_spatial: false
+    scale_filler {
+      type: "constant"
+      value: 20.0
+    }
+    channel_shared: false
+  }
+}
+layer {
+  name: "conv4_3_norm_mbox_loc"
+  type: "Convolution"
+  bottom: "conv4_3_norm"
+  top: "conv4_3_norm_mbox_loc"
+  param {
+    lr_mult: 1.0
+    decay_mult: 1.0
+  }
+  param {
+    lr_mult: 2.0
+    decay_mult: 0.0
+  }
+  convolution_param {
+    num_output: 16
+    pad: 1
+    kernel_size: 3
+    stride: 1
+    weight_filler {
+      type: "xavier"
+    }
+    bias_filler {
+      type: "constant"
+      value: 0.0
+    }
+  }
+}
+layer {
+  name: "conv4_3_norm_mbox_loc_perm"
+  type: "Permute"
+  bottom: "conv4_3_norm_mbox_loc"
+  top: "conv4_3_norm_mbox_loc_perm"
+  permute_param {
+    order: 0
+    order: 2
+    order: 3
+    order: 1
+  }
+}
+layer {
+  name: "conv4_3_norm_mbox_loc_flat"
+  type: "Flatten"
+  bottom: "conv4_3_norm_mbox_loc_perm"
+  top: "conv4_3_norm_mbox_loc_flat"
+  flatten_param {
+    axis: 1
+  }
+}
+layer {
+  name: "conv4_3_norm_mbox_conf"
+  type: "Convolution"
+  bottom: "conv4_3_norm"
+  top: "conv4_3_norm_mbox_conf"
+  param {
+    lr_mult: 1.0
+    decay_mult: 1.0
+  }
+  param {
+    lr_mult: 2.0
+    decay_mult: 0.0
+  }
+  convolution_param {
+    num_output: 84
+    pad: 1
+    kernel_size: 3
+    stride: 1
+    weight_filler {
+      type: "xavier"
+    }
+    bias_filler {
+      type: "constant"
+      value: 0.0
+    }
+  }
+}
+layer {
+  name: "conv4_3_norm_mbox_conf_perm"
+  type: "Permute"
+  bottom: "conv4_3_norm_mbox_conf"
+  top: "conv4_3_norm_mbox_conf_perm"
+  permute_param {
+    order: 0
+    order: 2
+    order: 3
+    order: 1
+  }
+}
+layer {
+  name: "conv4_3_norm_mbox_conf_flat"
+  type: "Flatten"
+  bottom: "conv4_3_norm_mbox_conf_perm"
+  top: "conv4_3_norm_mbox_conf_flat"
+  flatten_param {
+    axis: 1
+  }
+}
+layer {
+  name: "conv4_3_norm_mbox_priorbox"
+  type: "PriorBox"
+  bottom: "conv4_3_norm"
+  bottom: "data"
+  top: "conv4_3_norm_mbox_priorbox"
+  prior_box_param {
+    min_size: 30.0
+    max_size: 60.0
+    aspect_ratio: 2.0
+    flip: true
+    clip: false
+    variance: 0.10000000149
+    variance: 0.10000000149
+    variance: 0.20000000298
+    variance: 0.20000000298
+    step: 8.0
+    offset: 0.5
+  }
+}
+layer {
+  name: "fc7_mbox_loc"
+  type: "Convolution"
+  bottom: "fc7"
+  top: "fc7_mbox_loc"
+  param {
+    lr_mult: 1.0
+    decay_mult: 1.0
+  }
+  param {
+    lr_mult: 2.0
+    decay_mult: 0.0
+  }
+  convolution_param {
+    num_output: 24
+    pad: 1
+    kernel_size: 3
+    stride: 1
+    weight_filler {
+      type: "xavier"
+    }
+    bias_filler {
+      type: "constant"
+      value: 0.0
+    }
+  }
+}
+layer {
+  name: "fc7_mbox_loc_perm"
+  type: "Permute"
+  bottom: "fc7_mbox_loc"
+  top: "fc7_mbox_loc_perm"
+  permute_param {
+    order: 0
+    order: 2
+    order: 3
+    order: 1
+  }
+}
+layer {
+  name: "fc7_mbox_loc_flat"
+  type: "Flatten"
+  bottom: "fc7_mbox_loc_perm"
+  top: "fc7_mbox_loc_flat"
+  flatten_param {
+    axis: 1
+  }
+}
+layer {
+  name: "fc7_mbox_conf"
+  type: "Convolution"
+  bottom: "fc7"
+  top: "fc7_mbox_conf"
+  param {
+    lr_mult: 1.0
+    decay_mult: 1.0
+  }
+  param {
+    lr_mult: 2.0
+    decay_mult: 0.0
+  }
+  convolution_param {
+    num_output: 126
+    pad: 1
+    kernel_size: 3
+    stride: 1
+    weight_filler {
+      type: "xavier"
+    }
+    bias_filler {
+      type: "constant"
+      value: 0.0
+    }
+  }
+}
+layer {
+  name: "fc7_mbox_conf_perm"
+  type: "Permute"
+  bottom: "fc7_mbox_conf"
+  top: "fc7_mbox_conf_perm"
+  permute_param {
+    order: 0
+    order: 2
+    order: 3
+    order: 1
+  }
+}
+layer {
+  name: "fc7_mbox_conf_flat"
+  type: "Flatten"
+  bottom: "fc7_mbox_conf_perm"
+  top: "fc7_mbox_conf_flat"
+  flatten_param {
+    axis: 1
+  }
+}
+layer {
+  name: "fc7_mbox_priorbox"
+  type: "PriorBox"
+  bottom: "fc7"
+  bottom: "data"
+  top: "fc7_mbox_priorbox"
+  prior_box_param {
+    min_size: 60.0
+    max_size: 111.0
+    aspect_ratio: 2.0
+    aspect_ratio: 3.0
+    flip: true
+    clip: false
+    variance: 0.10000000149
+    variance: 0.10000000149
+    variance: 0.20000000298
+    variance: 0.20000000298
+    step: 16.0
+    offset: 0.5
+  }
+}
+layer {
+  name: "conv6_2_mbox_loc"
+  type: "Convolution"
+  bottom: "conv6_2"
+  top: "conv6_2_mbox_loc"
+  param {
+    lr_mult: 1.0
+    decay_mult: 1.0
+  }
+  param {
+    lr_mult: 2.0
+    decay_mult: 0.0
+  }
+  convolution_param {
+    num_output: 24
+    pad: 1
+    kernel_size: 3
+    stride: 1
+    weight_filler {
+      type: "xavier"
+    }
+    bias_filler {
+      type: "constant"
+      value: 0.0
+    }
+  }
+}
+layer {
+  name: "conv6_2_mbox_loc_perm"
+  type: "Permute"
+  bottom: "conv6_2_mbox_loc"
+  top: "conv6_2_mbox_loc_perm"
+  permute_param {
+    order: 0
+    order: 2
+    order: 3
+    order: 1
+  }
+}
+layer {
+  name: "conv6_2_mbox_loc_flat"
+  type: "Flatten"
+  bottom: "conv6_2_mbox_loc_perm"
+  top: "conv6_2_mbox_loc_flat"
+  flatten_param {
+    axis: 1
+  }
+}
+layer {
+  name: "conv6_2_mbox_conf"
+  type: "Convolution"
+  bottom: "conv6_2"
+  top: "conv6_2_mbox_conf"
+  param {
+    lr_mult: 1.0
+    decay_mult: 1.0
+  }
+  param {
+    lr_mult: 2.0
+    decay_mult: 0.0
+  }
+  convolution_param {
+    num_output: 126
+    pad: 1
+    kernel_size: 3
+    stride: 1
+    weight_filler {
+      type: "xavier"
+    }
+    bias_filler {
+      type: "constant"
+      value: 0.0
+    }
+  }
+}
+layer {
+  name: "conv6_2_mbox_conf_perm"
+  type: "Permute"
+  bottom: "conv6_2_mbox_conf"
+  top: "conv6_2_mbox_conf_perm"
+  permute_param {
+    order: 0
+    order: 2
+    order: 3
+    order: 1
+  }
+}
+layer {
+  name: "conv6_2_mbox_conf_flat"
+  type: "Flatten"
+  bottom: "conv6_2_mbox_conf_perm"
+  top: "conv6_2_mbox_conf_flat"
+  flatten_param {
+    axis: 1
+  }
+}
+layer {
+  name: "conv6_2_mbox_priorbox"
+  type: "PriorBox"
+  bottom: "conv6_2"
+  bottom: "data"
+  top: "conv6_2_mbox_priorbox"
+  prior_box_param {
+    min_size: 111.0
+    max_size: 162.0
+    aspect_ratio: 2.0
+    aspect_ratio: 3.0
+    flip: true
+    clip: false
+    variance: 0.10000000149
+    variance: 0.10000000149
+    variance: 0.20000000298
+    variance: 0.20000000298
+    step: 32.0
+    offset: 0.5
+  }
+}
+layer {
+  name: "conv7_2_mbox_loc"
+  type: "Convolution"
+  bottom: "conv7_2"
+  top: "conv7_2_mbox_loc"
+  param {
+    lr_mult: 1.0
+    decay_mult: 1.0
+  }
+  param {
+    lr_mult: 2.0
+    decay_mult: 0.0
+  }
+  convolution_param {
+    num_output: 24
+    pad: 1
+    kernel_size: 3
+    stride: 1
+    weight_filler {
+      type: "xavier"
+    }
+    bias_filler {
+      type: "constant"
+      value: 0.0
+    }
+  }
+}
+layer {
+  name: "conv7_2_mbox_loc_perm"
+  type: "Permute"
+  bottom: "conv7_2_mbox_loc"
+  top: "conv7_2_mbox_loc_perm"
+  permute_param {
+    order: 0
+    order: 2
+    order: 3
+    order: 1
+  }
+}
+layer {
+  name: "conv7_2_mbox_loc_flat"
+  type: "Flatten"
+  bottom: "conv7_2_mbox_loc_perm"
+  top: "conv7_2_mbox_loc_flat"
+  flatten_param {
+    axis: 1
+  }
+}
+layer {
+  name: "conv7_2_mbox_conf"
+  type: "Convolution"
+  bottom: "conv7_2"
+  top: "conv7_2_mbox_conf"
+  param {
+    lr_mult: 1.0
+    decay_mult: 1.0
+  }
+  param {
+    lr_mult: 2.0
+    decay_mult: 0.0
+  }
+  convolution_param {
+    num_output: 126
+    pad: 1
+    kernel_size: 3
+    stride: 1
+    weight_filler {
+      type: "xavier"
+    }
+    bias_filler {
+      type: "constant"
+      value: 0.0
+    }
+  }
+}
+layer {
+  name: "conv7_2_mbox_conf_perm"
+  type: "Permute"
+  bottom: "conv7_2_mbox_conf"
+  top: "conv7_2_mbox_conf_perm"
+  permute_param {
+    order: 0
+    order: 2
+    order: 3
+    order: 1
+  }
+}
+layer {
+  name: "conv7_2_mbox_conf_flat"
+  type: "Flatten"
+  bottom: "conv7_2_mbox_conf_perm"
+  top: "conv7_2_mbox_conf_flat"
+  flatten_param {
+    axis: 1
+  }
+}
+layer {
+  name: "conv7_2_mbox_priorbox"
+  type: "PriorBox"
+  bottom: "conv7_2"
+  bottom: "data"
+  top: "conv7_2_mbox_priorbox"
+  prior_box_param {
+    min_size: 162.0
+    max_size: 213.0
+    aspect_ratio: 2.0
+    aspect_ratio: 3.0
+    flip: true
+    clip: false
+    variance: 0.10000000149
+    variance: 0.10000000149
+    variance: 0.20000000298
+    variance: 0.20000000298
+    step: 64.0
+    offset: 0.5
+  }
+}
+layer {
+  name: "conv8_2_mbox_loc"
+  type: "Convolution"
+  bottom: "conv8_2"
+  top: "conv8_2_mbox_loc"
+  param {
+    lr_mult: 1.0
+    decay_mult: 1.0
+  }
+  param {
+    lr_mult: 2.0
+    decay_mult: 0.0
+  }
+  convolution_param {
+    num_output: 16
+    pad: 1
+    kernel_size: 3
+    stride: 1
+    weight_filler {
+      type: "xavier"
+    }
+    bias_filler {
+      type: "constant"
+      value: 0.0
+    }
+  }
+}
+layer {
+  name: "conv8_2_mbox_loc_perm"
+  type: "Permute"
+  bottom: "conv8_2_mbox_loc"
+  top: "conv8_2_mbox_loc_perm"
+  permute_param {
+    order: 0
+    order: 2
+    order: 3
+    order: 1
+  }
+}
+layer {
+  name: "conv8_2_mbox_loc_flat"
+  type: "Flatten"
+  bottom: "conv8_2_mbox_loc_perm"
+  top: "conv8_2_mbox_loc_flat"
+  flatten_param {
+    axis: 1
+  }
+}
+layer {
+  name: "conv8_2_mbox_conf"
+  type: "Convolution"
+  bottom: "conv8_2"
+  top: "conv8_2_mbox_conf"
+  param {
+    lr_mult: 1.0
+    decay_mult: 1.0
+  }
+  param {
+    lr_mult: 2.0
+    decay_mult: 0.0
+  }
+  convolution_param {
+    num_output: 84
+    pad: 1
+    kernel_size: 3
+    stride: 1
+    weight_filler {
+      type: "xavier"
+    }
+    bias_filler {
+      type: "constant"
+      value: 0.0
+    }
+  }
+}
+layer {
+  name: "conv8_2_mbox_conf_perm"
+  type: "Permute"
+  bottom: "conv8_2_mbox_conf"
+  top: "conv8_2_mbox_conf_perm"
+  permute_param {
+    order: 0
+    order: 2
+    order: 3
+    order: 1
+  }
+}
+layer {
+  name: "conv8_2_mbox_conf_flat"
+  type: "Flatten"
+  bottom: "conv8_2_mbox_conf_perm"
+  top: "conv8_2_mbox_conf_flat"
+  flatten_param {
+    axis: 1
+  }
+}
+layer {
+  name: "conv8_2_mbox_priorbox"
+  type: "PriorBox"
+  bottom: "conv8_2"
+  bottom: "data"
+  top: "conv8_2_mbox_priorbox"
+  prior_box_param {
+    min_size: 213.0
+    max_size: 264.0
+    aspect_ratio: 2.0
+    flip: true
+    clip: false
+    variance: 0.10000000149
+    variance: 0.10000000149
+    variance: 0.20000000298
+    variance: 0.20000000298
+    step: 100.0
+    offset: 0.5
+  }
+}
+layer {
+  name: "conv9_2_mbox_loc"
+  type: "Convolution"
+  bottom: "conv9_2"
+  top: "conv9_2_mbox_loc"
+  param {
+    lr_mult: 1.0
+    decay_mult: 1.0
+  }
+  param {
+    lr_mult: 2.0
+    decay_mult: 0.0
+  }
+  convolution_param {
+    num_output: 16
+    pad: 1
+    kernel_size: 3
+    stride: 1
+    weight_filler {
+      type: "xavier"
+    }
+    bias_filler {
+      type: "constant"
+      value: 0.0
+    }
+  }
+}
+layer {
+  name: "conv9_2_mbox_loc_perm"
+  type: "Permute"
+  bottom: "conv9_2_mbox_loc"
+  top: "conv9_2_mbox_loc_perm"
+  permute_param {
+    order: 0
+    order: 2
+    order: 3
+    order: 1
+  }
+}
+layer {
+  name: "conv9_2_mbox_loc_flat"
+  type: "Flatten"
+  bottom: "conv9_2_mbox_loc_perm"
+  top: "conv9_2_mbox_loc_flat"
+  flatten_param {
+    axis: 1
+  }
+}
+layer {
+  name: "conv9_2_mbox_conf"
+  type: "Convolution"
+  bottom: "conv9_2"
+  top: "conv9_2_mbox_conf"
+  param {
+    lr_mult: 1.0
+    decay_mult: 1.0
+  }
+  param {
+    lr_mult: 2.0
+    decay_mult: 0.0
+  }
+  convolution_param {
+    num_output: 84
+    pad: 1
+    kernel_size: 3
+    stride: 1
+    weight_filler {
+      type: "xavier"
+    }
+    bias_filler {
+      type: "constant"
+      value: 0.0
+    }
+  }
+}
+layer {
+  name: "conv9_2_mbox_conf_perm"
+  type: "Permute"
+  bottom: "conv9_2_mbox_conf"
+  top: "conv9_2_mbox_conf_perm"
+  permute_param {
+    order: 0
+    order: 2
+    order: 3
+    order: 1
+  }
+}
+layer {
+  name: "conv9_2_mbox_conf_flat"
+  type: "Flatten"
+  bottom: "conv9_2_mbox_conf_perm"
+  top: "conv9_2_mbox_conf_flat"
+  flatten_param {
+    axis: 1
+  }
+}
+layer {
+  name: "conv9_2_mbox_priorbox"
+  type: "PriorBox"
+  bottom: "conv9_2"
+  bottom: "data"
+  top: "conv9_2_mbox_priorbox"
+  prior_box_param {
+    min_size: 264.0
+    max_size: 315.0
+    aspect_ratio: 2.0
+    flip: true
+    clip: false
+    variance: 0.10000000149
+    variance: 0.10000000149
+    variance: 0.20000000298
+    variance: 0.20000000298
+    step: 300.0
+    offset: 0.5
+  }
+}
+layer {
+  name: "mbox_loc"
+  type: "Concat"
+  bottom: "conv4_3_norm_mbox_loc_flat"
+  bottom: "fc7_mbox_loc_flat"
+  bottom: "conv6_2_mbox_loc_flat"
+  bottom: "conv7_2_mbox_loc_flat"
+  bottom: "conv8_2_mbox_loc_flat"
+  bottom: "conv9_2_mbox_loc_flat"
+  top: "mbox_loc"
+  concat_param {
+    axis: 1
+  }
+}
+layer {
+  name: "mbox_conf"
+  type: "Concat"
+  bottom: "conv4_3_norm_mbox_conf_flat"
+  bottom: "fc7_mbox_conf_flat"
+  bottom: "conv6_2_mbox_conf_flat"
+  bottom: "conv7_2_mbox_conf_flat"
+  bottom: "conv8_2_mbox_conf_flat"
+  bottom: "conv9_2_mbox_conf_flat"
+  top: "mbox_conf"
+  concat_param {
+    axis: 1
+  }
+}
+layer {
+  name: "mbox_priorbox"
+  type: "Concat"
+  bottom: "conv4_3_norm_mbox_priorbox"
+  bottom: "fc7_mbox_priorbox"
+  bottom: "conv6_2_mbox_priorbox"
+  bottom: "conv7_2_mbox_priorbox"
+  bottom: "conv8_2_mbox_priorbox"
+  bottom: "conv9_2_mbox_priorbox"
+  top: "mbox_priorbox"
+  concat_param {
+    axis: 2
+  }
+}
+layer {
+  name: "mbox_conf_reshape"
+  type: "Reshape"
+  bottom: "mbox_conf"
+  top: "mbox_conf_reshape"
+  reshape_param {
+    shape {
+      dim: 0
+      dim: -1
+      dim: 21
+    }
+  }
+}
+layer {
+  name: "mbox_conf_softmax"
+  type: "Softmax"
+  bottom: "mbox_conf_reshape"
+  top: "mbox_conf_softmax"
+  softmax_param {
+    axis: 2
+  }
+}
+layer {
+  name: "mbox_conf_flatten"
+  type: "Flatten"
+  bottom: "mbox_conf_softmax"
+  top: "mbox_conf_flatten"
+  flatten_param {
+    axis: 1
+  }
+}
+
diff --git a/caffe2/python/ssd_test/debug_pemute_layer/debug2.prototxt b/caffe2/python/ssd_test/debug_pemute_layer/debug2.prototxt
new file mode 100644
index 000000000..e0b40f2eb
--- /dev/null
+++ b/caffe2/python/ssd_test/debug_pemute_layer/debug2.prototxt
@@ -0,0 +1,1482 @@
+name: "VGG_VOC0712_SSD_300x300_deploy"
+input: "data"
+input_shape {
+  dim: 1
+  dim: 3
+  dim: 300
+  dim: 300
+}
+layer {
+  name: "conv1_1"
+  type: "Convolution"
+  bottom: "data"
+  top: "conv1_1"
+  param {
+    lr_mult: 1.0
+    decay_mult: 1.0
+  }
+  param {
+    lr_mult: 2.0
+    decay_mult: 0.0
+  }
+  convolution_param {
+    num_output: 64
+    pad: 1
+    kernel_size: 3
+    weight_filler {
+      type: "xavier"
+    }
+    bias_filler {
+      type: "constant"
+      value: 0.0
+    }
+  }
+}
+layer {
+  name: "relu1_1"
+  type: "ReLU"
+  bottom: "conv1_1"
+  top: "conv1_1"
+}
+layer {
+  name: "conv1_2"
+  type: "Convolution"
+  bottom: "conv1_1"
+  top: "conv1_2"
+  param {
+    lr_mult: 1.0
+    decay_mult: 1.0
+  }
+  param {
+    lr_mult: 2.0
+    decay_mult: 0.0
+  }
+  convolution_param {
+    num_output: 64
+    pad: 1
+    kernel_size: 3
+    weight_filler {
+      type: "xavier"
+    }
+    bias_filler {
+      type: "constant"
+      value: 0.0
+    }
+  }
+}
+layer {
+  name: "relu1_2"
+  type: "ReLU"
+  bottom: "conv1_2"
+  top: "conv1_2"
+}
+layer {
+  name: "pool1"
+  type: "Pooling"
+  bottom: "conv1_2"
+  top: "pool1"
+  pooling_param {
+    pool: MAX
+    kernel_size: 2
+    stride: 2
+  }
+}
+layer {
+  name: "conv2_1"
+  type: "Convolution"
+  bottom: "pool1"
+  top: "conv2_1"
+  param {
+    lr_mult: 1.0
+    decay_mult: 1.0
+  }
+  param {
+    lr_mult: 2.0
+    decay_mult: 0.0
+  }
+  convolution_param {
+    num_output: 128
+    pad: 1
+    kernel_size: 3
+    weight_filler {
+      type: "xavier"
+    }
+    bias_filler {
+      type: "constant"
+      value: 0.0
+    }
+  }
+}
+layer {
+  name: "relu2_1"
+  type: "ReLU"
+  bottom: "conv2_1"
+  top: "conv2_1"
+}
+layer {
+  name: "conv2_2"
+  type: "Convolution"
+  bottom: "conv2_1"
+  top: "conv2_2"
+  param {
+    lr_mult: 1.0
+    decay_mult: 1.0
+  }
+  param {
+    lr_mult: 2.0
+    decay_mult: 0.0
+  }
+  convolution_param {
+    num_output: 128
+    pad: 1
+    kernel_size: 3
+    weight_filler {
+      type: "xavier"
+    }
+    bias_filler {
+      type: "constant"
+      value: 0.0
+    }
+  }
+}
+layer {
+  name: "relu2_2"
+  type: "ReLU"
+  bottom: "conv2_2"
+  top: "conv2_2"
+}
+layer {
+  name: "pool2"
+  type: "Pooling"
+  bottom: "conv2_2"
+  top: "pool2"
+  pooling_param {
+    pool: MAX
+    kernel_size: 2
+    stride: 2
+  }
+}
+layer {
+  name: "conv3_1"
+  type: "Convolution"
+  bottom: "pool2"
+  top: "conv3_1"
+  param {
+    lr_mult: 1.0
+    decay_mult: 1.0
+  }
+  param {
+    lr_mult: 2.0
+    decay_mult: 0.0
+  }
+  convolution_param {
+    num_output: 256
+    pad: 1
+    kernel_size: 3
+    weight_filler {
+      type: "xavier"
+    }
+    bias_filler {
+      type: "constant"
+      value: 0.0
+    }
+  }
+}
+layer {
+  name: "relu3_1"
+  type: "ReLU"
+  bottom: "conv3_1"
+  top: "conv3_1"
+}
+layer {
+  name: "conv3_2"
+  type: "Convolution"
+  bottom: "conv3_1"
+  top: "conv3_2"
+  param {
+    lr_mult: 1.0
+    decay_mult: 1.0
+  }
+  param {
+    lr_mult: 2.0
+    decay_mult: 0.0
+  }
+  convolution_param {
+    num_output: 256
+    pad: 1
+    kernel_size: 3
+    weight_filler {
+      type: "xavier"
+    }
+    bias_filler {
+      type: "constant"
+      value: 0.0
+    }
+  }
+}
+layer {
+  name: "relu3_2"
+  type: "ReLU"
+  bottom: "conv3_2"
+  top: "conv3_2"
+}
+layer {
+  name: "conv3_3"
+  type: "Convolution"
+  bottom: "conv3_2"
+  top: "conv3_3"
+  param {
+    lr_mult: 1.0
+    decay_mult: 1.0
+  }
+  param {
+    lr_mult: 2.0
+    decay_mult: 0.0
+  }
+  convolution_param {
+    num_output: 256
+    pad: 1
+    kernel_size: 3
+    weight_filler {
+      type: "xavier"
+    }
+    bias_filler {
+      type: "constant"
+      value: 0.0
+    }
+  }
+}
+layer {
+  name: "relu3_3"
+  type: "ReLU"
+  bottom: "conv3_3"
+  top: "conv3_3"
+}
+layer {
+  name: "pool3"
+  type: "Pooling"
+  bottom: "conv3_3"
+  top: "pool3"
+  pooling_param {
+    pool: MAX
+    kernel_size: 2
+    stride: 2
+  }
+}
+layer {
+  name: "conv4_1"
+  type: "Convolution"
+  bottom: "pool3"
+  top: "conv4_1"
+  param {
+    lr_mult: 1.0
+    decay_mult: 1.0
+  }
+  param {
+    lr_mult: 2.0
+    decay_mult: 0.0
+  }
+  convolution_param {
+    num_output: 512
+    pad: 1
+    kernel_size: 3
+    weight_filler {
+      type: "xavier"
+    }
+    bias_filler {
+      type: "constant"
+      value: 0.0
+    }
+  }
+}
+layer {
+  name: "relu4_1"
+  type: "ReLU"
+  bottom: "conv4_1"
+  top: "conv4_1"
+}
+layer {
+  name: "conv4_2"
+  type: "Convolution"
+  bottom: "conv4_1"
+  top: "conv4_2"
+  param {
+    lr_mult: 1.0
+    decay_mult: 1.0
+  }
+  param {
+    lr_mult: 2.0
+    decay_mult: 0.0
+  }
+  convolution_param {
+    num_output: 512
+    pad: 1
+    kernel_size: 3
+    weight_filler {
+      type: "xavier"
+    }
+    bias_filler {
+      type: "constant"
+      value: 0.0
+    }
+  }
+}
+layer {
+  name: "relu4_2"
+  type: "ReLU"
+  bottom: "conv4_2"
+  top: "conv4_2"
+}
+layer {
+  name: "conv4_3"
+  type: "Convolution"
+  bottom: "conv4_2"
+  top: "conv4_3"
+  param {
+    lr_mult: 1.0
+    decay_mult: 1.0
+  }
+  param {
+    lr_mult: 2.0
+    decay_mult: 0.0
+  }
+  convolution_param {
+    num_output: 512
+    pad: 1
+    kernel_size: 3
+    weight_filler {
+      type: "xavier"
+    }
+    bias_filler {
+      type: "constant"
+      value: 0.0
+    }
+  }
+}
+layer {
+  name: "relu4_3"
+  type: "ReLU"
+  bottom: "conv4_3"
+  top: "conv4_3"
+}
+layer {
+  name: "pool4"
+  type: "Pooling"
+  bottom: "conv4_3"
+  top: "pool4"
+  pooling_param {
+    pool: MAX
+    kernel_size: 2
+    stride: 2
+  }
+}
+layer {
+  name: "conv5_1"
+  type: "Convolution"
+  bottom: "pool4"
+  top: "conv5_1"
+  param {
+    lr_mult: 1.0
+    decay_mult: 1.0
+  }
+  param {
+    lr_mult: 2.0
+    decay_mult: 0.0
+  }
+  convolution_param {
+    num_output: 512
+    pad: 1
+    kernel_size: 3
+    weight_filler {
+      type: "xavier"
+    }
+    bias_filler {
+      type: "constant"
+      value: 0.0
+    }
+    dilation: 1
+  }
+}
+layer {
+  name: "relu5_1"
+  type: "ReLU"
+  bottom: "conv5_1"
+  top: "conv5_1"
+}
+layer {
+  name: "conv5_2"
+  type: "Convolution"
+  bottom: "conv5_1"
+  top: "conv5_2"
+  param {
+    lr_mult: 1.0
+    decay_mult: 1.0
+  }
+  param {
+    lr_mult: 2.0
+    decay_mult: 0.0
+  }
+  convolution_param {
+    num_output: 512
+    pad: 1
+    kernel_size: 3
+    weight_filler {
+      type: "xavier"
+    }
+    bias_filler {
+      type: "constant"
+      value: 0.0
+    }
+    dilation: 1
+  }
+}
+layer {
+  name: "relu5_2"
+  type: "ReLU"
+  bottom: "conv5_2"
+  top: "conv5_2"
+}
+layer {
+  name: "conv5_3"
+  type: "Convolution"
+  bottom: "conv5_2"
+  top: "conv5_3"
+  param {
+    lr_mult: 1.0
+    decay_mult: 1.0
+  }
+  param {
+    lr_mult: 2.0
+    decay_mult: 0.0
+  }
+  convolution_param {
+    num_output: 512
+    pad: 1
+    kernel_size: 3
+    weight_filler {
+      type: "xavier"
+    }
+    bias_filler {
+      type: "constant"
+      value: 0.0
+    }
+    dilation: 1
+  }
+}
+layer {
+  name: "relu5_3"
+  type: "ReLU"
+  bottom: "conv5_3"
+  top: "conv5_3"
+}
+layer {
+  name: "pool5"
+  type: "Pooling"
+  bottom: "conv5_3"
+  top: "pool5"
+  pooling_param {
+    pool: MAX
+    kernel_size: 3
+    stride: 1
+    pad: 1
+  }
+}
+layer {
+  name: "fc6"
+  type: "Convolution"
+  bottom: "pool5"
+  top: "fc6"
+  param {
+    lr_mult: 1.0
+    decay_mult: 1.0
+  }
+  param {
+    lr_mult: 2.0
+    decay_mult: 0.0
+  }
+  convolution_param {
+    num_output: 1024
+    pad: 6
+    kernel_size: 3
+    weight_filler {
+      type: "xavier"
+    }
+    bias_filler {
+      type: "constant"
+      value: 0.0
+    }
+    dilation: 6
+  }
+}
+layer {
+  name: "relu6"
+  type: "ReLU"
+  bottom: "fc6"
+  top: "fc6"
+}
+layer {
+  name: "fc7"
+  type: "Convolution"
+  bottom: "fc6"
+  top: "fc7"
+  param {
+    lr_mult: 1.0
+    decay_mult: 1.0
+  }
+  param {
+    lr_mult: 2.0
+    decay_mult: 0.0
+  }
+  convolution_param {
+    num_output: 1024
+    kernel_size: 1
+    weight_filler {
+      type: "xavier"
+    }
+    bias_filler {
+      type: "constant"
+      value: 0.0
+    }
+  }
+}
+layer {
+  name: "relu7"
+  type: "ReLU"
+  bottom: "fc7"
+  top: "fc7"
+}
+layer {
+  name: "conv6_1"
+  type: "Convolution"
+  bottom: "fc7"
+  top: "conv6_1"
+  param {
+    lr_mult: 1.0
+    decay_mult: 1.0
+  }
+  param {
+    lr_mult: 2.0
+    decay_mult: 0.0
+  }
+  convolution_param {
+    num_output: 256
+    pad: 0
+    kernel_size: 1
+    stride: 1
+    weight_filler {
+      type: "xavier"
+    }
+    bias_filler {
+      type: "constant"
+      value: 0.0
+    }
+  }
+}
+layer {
+  name: "conv6_1_relu"
+  type: "ReLU"
+  bottom: "conv6_1"
+  top: "conv6_1"
+}
+layer {
+  name: "conv6_2"
+  type: "Convolution"
+  bottom: "conv6_1"
+  top: "conv6_2"
+  param {
+    lr_mult: 1.0
+    decay_mult: 1.0
+  }
+  param {
+    lr_mult: 2.0
+    decay_mult: 0.0
+  }
+  convolution_param {
+    num_output: 512
+    pad: 1
+    kernel_size: 3
+    stride: 2
+    weight_filler {
+      type: "xavier"
+    }
+    bias_filler {
+      type: "constant"
+      value: 0.0
+    }
+  }
+}
+layer {
+  name: "conv6_2_relu"
+  type: "ReLU"
+  bottom: "conv6_2"
+  top: "conv6_2"
+}
+layer {
+  name: "conv7_1"
+  type: "Convolution"
+  bottom: "conv6_2"
+  top: "conv7_1"
+  param {
+    lr_mult: 1.0
+    decay_mult: 1.0
+  }
+  param {
+    lr_mult: 2.0
+    decay_mult: 0.0
+  }
+  convolution_param {
+    num_output: 128
+    pad: 0
+    kernel_size: 1
+    stride: 1
+    weight_filler {
+      type: "xavier"
+    }
+    bias_filler {
+      type: "constant"
+      value: 0.0
+    }
+  }
+}
+layer {
+  name: "conv7_1_relu"
+  type: "ReLU"
+  bottom: "conv7_1"
+  top: "conv7_1"
+}
+layer {
+  name: "conv7_2"
+  type: "Convolution"
+  bottom: "conv7_1"
+  top: "conv7_2"
+  param {
+    lr_mult: 1.0
+    decay_mult: 1.0
+  }
+  param {
+    lr_mult: 2.0
+    decay_mult: 0.0
+  }
+  convolution_param {
+    num_output: 256
+    pad: 1
+    kernel_size: 3
+    stride: 2
+    weight_filler {
+      type: "xavier"
+    }
+    bias_filler {
+      type: "constant"
+      value: 0.0
+    }
+  }
+}
+layer {
+  name: "conv7_2_relu"
+  type: "ReLU"
+  bottom: "conv7_2"
+  top: "conv7_2"
+}
+layer {
+  name: "conv8_1"
+  type: "Convolution"
+  bottom: "conv7_2"
+  top: "conv8_1"
+  param {
+    lr_mult: 1.0
+    decay_mult: 1.0
+  }
+  param {
+    lr_mult: 2.0
+    decay_mult: 0.0
+  }
+  convolution_param {
+    num_output: 128
+    pad: 0
+    kernel_size: 1
+    stride: 1
+    weight_filler {
+      type: "xavier"
+    }
+    bias_filler {
+      type: "constant"
+      value: 0.0
+    }
+  }
+}
+layer {
+  name: "conv8_1_relu"
+  type: "ReLU"
+  bottom: "conv8_1"
+  top: "conv8_1"
+}
+layer {
+  name: "conv8_2"
+  type: "Convolution"
+  bottom: "conv8_1"
+  top: "conv8_2"
+  param {
+    lr_mult: 1.0
+    decay_mult: 1.0
+  }
+  param {
+    lr_mult: 2.0
+    decay_mult: 0.0
+  }
+  convolution_param {
+    num_output: 256
+    pad: 0
+    kernel_size: 3
+    stride: 1
+    weight_filler {
+      type: "xavier"
+    }
+    bias_filler {
+      type: "constant"
+      value: 0.0
+    }
+  }
+}
+layer {
+  name: "conv8_2_relu"
+  type: "ReLU"
+  bottom: "conv8_2"
+  top: "conv8_2"
+}
+layer {
+  name: "conv9_1"
+  type: "Convolution"
+  bottom: "conv8_2"
+  top: "conv9_1"
+  param {
+    lr_mult: 1.0
+    decay_mult: 1.0
+  }
+  param {
+    lr_mult: 2.0
+    decay_mult: 0.0
+  }
+  convolution_param {
+    num_output: 128
+    pad: 0
+    kernel_size: 1
+    stride: 1
+    weight_filler {
+      type: "xavier"
+    }
+    bias_filler {
+      type: "constant"
+      value: 0.0
+    }
+  }
+}
+layer {
+  name: "conv9_1_relu"
+  type: "ReLU"
+  bottom: "conv9_1"
+  top: "conv9_1"
+}
+layer {
+  name: "conv9_2"
+  type: "Convolution"
+  bottom: "conv9_1"
+  top: "conv9_2"
+  param {
+    lr_mult: 1.0
+    decay_mult: 1.0
+  }
+  param {
+    lr_mult: 2.0
+    decay_mult: 0.0
+  }
+  convolution_param {
+    num_output: 256
+    pad: 0
+    kernel_size: 3
+    stride: 1
+    weight_filler {
+      type: "xavier"
+    }
+    bias_filler {
+      type: "constant"
+      value: 0.0
+    }
+  }
+}
+layer {
+  name: "conv9_2_relu"
+  type: "ReLU"
+  bottom: "conv9_2"
+  top: "conv9_2"
+}
+layer {
+  name: "conv4_3_norm"
+  type: "Normalize"
+  bottom: "conv4_3"
+  top: "conv4_3_norm"
+  norm_param {
+    across_spatial: false
+    scale_filler {
+      type: "constant"
+      value: 20.0
+    }
+    channel_shared: false
+  }
+}
+layer {
+  name: "conv4_3_norm_mbox_loc"
+  type: "Convolution"
+  bottom: "conv4_3_norm"
+  top: "conv4_3_norm_mbox_loc"
+  param {
+    lr_mult: 1.0
+    decay_mult: 1.0
+  }
+  param {
+    lr_mult: 2.0
+    decay_mult: 0.0
+  }
+  convolution_param {
+    num_output: 16
+    pad: 1
+    kernel_size: 3
+    stride: 1
+    weight_filler {
+      type: "xavier"
+    }
+    bias_filler {
+      type: "constant"
+      value: 0.0
+    }
+  }
+}
+layer {
+  name: "conv4_3_norm_mbox_loc_perm"
+  type: "Permute"
+  bottom: "conv4_3_norm_mbox_loc"
+  top: "conv4_3_norm_mbox_loc_perm"
+  permute_param {
+    order: 0
+    order: 2
+    order: 3
+    order: 1
+  }
+}
+layer {
+  name: "conv4_3_norm_mbox_loc_flat"
+  type: "Flatten"
+  bottom: "conv4_3_norm_mbox_loc_perm"
+  top: "conv4_3_norm_mbox_loc_flat"
+  flatten_param {
+    axis: 1
+  }
+}
+layer {
+  name: "conv4_3_norm_mbox_conf"
+  type: "Convolution"
+  bottom: "conv4_3_norm"
+  top: "conv4_3_norm_mbox_conf"
+  param {
+    lr_mult: 1.0
+    decay_mult: 1.0
+  }
+  param {
+    lr_mult: 2.0
+    decay_mult: 0.0
+  }
+  convolution_param {
+    num_output: 84
+    pad: 1
+    kernel_size: 3
+    stride: 1
+    weight_filler {
+      type: "xavier"
+    }
+    bias_filler {
+      type: "constant"
+      value: 0.0
+    }
+  }
+}
+layer {
+  name: "conv4_3_norm_mbox_conf_perm"
+  type: "Permute"
+  bottom: "conv4_3_norm_mbox_conf"
+  top: "conv4_3_norm_mbox_conf_perm"
+  permute_param {
+    order: 0
+    order: 2
+    order: 3
+    order: 1
+  }
+}
+layer {
+  name: "conv4_3_norm_mbox_conf_flat"
+  type: "Flatten"
+  bottom: "conv4_3_norm_mbox_conf_perm"
+  top: "conv4_3_norm_mbox_conf_flat"
+  flatten_param {
+    axis: 1
+  }
+}
+layer {
+	name: "conv4_3_norm_mbox_priorbox"
+	type: "PriorBox"
+	bottom: "conv4_3_norm"
+	bottom: "data"
+	top: "conv4_3_norm_mbox_priorbox"
+	prior_box_param {
+		min_size: 30.0
+		max_size: 60.0
+		aspect_ratio: 2.0
+		flip: true
+		clip: false
+		variance: 0.10000000149
+		variance: 0.10000000149
+		variance: 0.20000000298
+		variance: 0.20000000298
+		step: 8.0
+		offset: 0.5
+	}
+}
+
+layer {
+  name: "fc7_mbox_loc"
+  type: "Convolution"
+  bottom: "fc7"
+  top: "fc7_mbox_loc"
+  param {
+    lr_mult: 1.0
+    decay_mult: 1.0
+  }
+  param {
+    lr_mult: 2.0
+    decay_mult: 0.0
+  }
+  convolution_param {
+    num_output: 24
+    pad: 1
+    kernel_size: 3
+    stride: 1
+    weight_filler {
+      type: "xavier"
+    }
+    bias_filler {
+      type: "constant"
+      value: 0.0
+    }
+  }
+}
+layer {
+  name: "fc7_mbox_loc_perm"
+  type: "Permute"
+  bottom: "fc7_mbox_loc"
+  top: "fc7_mbox_loc_perm"
+  permute_param {
+    order: 0
+    order: 2
+    order: 3
+    order: 1
+  }
+}
+layer {
+  name: "fc7_mbox_loc_flat"
+  type: "Flatten"
+  bottom: "fc7_mbox_loc_perm"
+  top: "fc7_mbox_loc_flat"
+  flatten_param {
+    axis: 1
+  }
+}
+layer {
+  name: "fc7_mbox_conf"
+  type: "Convolution"
+  bottom: "fc7"
+  top: "fc7_mbox_conf"
+  param {
+    lr_mult: 1.0
+    decay_mult: 1.0
+  }
+  param {
+    lr_mult: 2.0
+    decay_mult: 0.0
+  }
+  convolution_param {
+    num_output: 126
+    pad: 1
+    kernel_size: 3
+    stride: 1
+    weight_filler {
+      type: "xavier"
+    }
+    bias_filler {
+      type: "constant"
+      value: 0.0
+    }
+  }
+}
+layer {
+  name: "fc7_mbox_conf_perm"
+  type: "Permute"
+  bottom: "fc7_mbox_conf"
+  top: "fc7_mbox_conf_perm"
+  permute_param {
+    order: 0
+    order: 2
+    order: 3
+    order: 1
+  }
+}
+layer {
+  name: "fc7_mbox_conf_flat"
+  type: "Flatten"
+  bottom: "fc7_mbox_conf_perm"
+  top: "fc7_mbox_conf_flat"
+  flatten_param {
+    axis: 1
+  }
+}
+layer {
+  name: "conv6_2_mbox_loc"
+  type: "Convolution"
+  bottom: "conv6_2"
+  top: "conv6_2_mbox_loc"
+  param {
+    lr_mult: 1.0
+    decay_mult: 1.0
+  }
+  param {
+    lr_mult: 2.0
+    decay_mult: 0.0
+  }
+  convolution_param {
+    num_output: 24
+    pad: 1
+    kernel_size: 3
+    stride: 1
+    weight_filler {
+      type: "xavier"
+    }
+    bias_filler {
+      type: "constant"
+      value: 0.0
+    }
+  }
+}
+layer {
+  name: "conv6_2_mbox_loc_perm"
+  type: "Permute"
+  bottom: "conv6_2_mbox_loc"
+  top: "conv6_2_mbox_loc_perm"
+  permute_param {
+    order: 0
+    order: 2
+    order: 3
+    order: 1
+  }
+}
+layer {
+  name: "conv6_2_mbox_loc_flat"
+  type: "Flatten"
+  bottom: "conv6_2_mbox_loc_perm"
+  top: "conv6_2_mbox_loc_flat"
+  flatten_param {
+    axis: 1
+  }
+}
+layer {
+  name: "conv6_2_mbox_conf"
+  type: "Convolution"
+  bottom: "conv6_2"
+  top: "conv6_2_mbox_conf"
+  param {
+    lr_mult: 1.0
+    decay_mult: 1.0
+  }
+  param {
+    lr_mult: 2.0
+    decay_mult: 0.0
+  }
+  convolution_param {
+    num_output: 126
+    pad: 1
+    kernel_size: 3
+    stride: 1
+    weight_filler {
+      type: "xavier"
+    }
+    bias_filler {
+      type: "constant"
+      value: 0.0
+    }
+  }
+}
+layer {
+  name: "conv6_2_mbox_conf_perm"
+  type: "Permute"
+  bottom: "conv6_2_mbox_conf"
+  top: "conv6_2_mbox_conf_perm"
+  permute_param {
+    order: 0
+    order: 2
+    order: 3
+    order: 1
+  }
+}
+layer {
+  name: "conv6_2_mbox_conf_flat"
+  type: "Flatten"
+  bottom: "conv6_2_mbox_conf_perm"
+  top: "conv6_2_mbox_conf_flat"
+  flatten_param {
+    axis: 1
+  }
+}
+layer {
+  name: "conv7_2_mbox_loc"
+  type: "Convolution"
+  bottom: "conv7_2"
+  top: "conv7_2_mbox_loc"
+  param {
+    lr_mult: 1.0
+    decay_mult: 1.0
+  }
+  param {
+    lr_mult: 2.0
+    decay_mult: 0.0
+  }
+  convolution_param {
+    num_output: 24
+    pad: 1
+    kernel_size: 3
+    stride: 1
+    weight_filler {
+      type: "xavier"
+    }
+    bias_filler {
+      type: "constant"
+      value: 0.0
+    }
+  }
+}
+layer {
+  name: "conv7_2_mbox_loc_perm"
+  type: "Permute"
+  bottom: "conv7_2_mbox_loc"
+  top: "conv7_2_mbox_loc_perm"
+  permute_param {
+    order: 0
+    order: 2
+    order: 3
+    order: 1
+  }
+}
+layer {
+  name: "conv7_2_mbox_loc_flat"
+  type: "Flatten"
+  bottom: "conv7_2_mbox_loc_perm"
+  top: "conv7_2_mbox_loc_flat"
+  flatten_param {
+    axis: 1
+  }
+}
+layer {
+  name: "conv7_2_mbox_conf"
+  type: "Convolution"
+  bottom: "conv7_2"
+  top: "conv7_2_mbox_conf"
+  param {
+    lr_mult: 1.0
+    decay_mult: 1.0
+  }
+  param {
+    lr_mult: 2.0
+    decay_mult: 0.0
+  }
+  convolution_param {
+    num_output: 126
+    pad: 1
+    kernel_size: 3
+    stride: 1
+    weight_filler {
+      type: "xavier"
+    }
+    bias_filler {
+      type: "constant"
+      value: 0.0
+    }
+  }
+}
+layer {
+  name: "conv7_2_mbox_conf_perm"
+  type: "Permute"
+  bottom: "conv7_2_mbox_conf"
+  top: "conv7_2_mbox_conf_perm"
+  permute_param {
+    order: 0
+    order: 2
+    order: 3
+    order: 1
+  }
+}
+layer {
+  name: "conv7_2_mbox_conf_flat"
+  type: "Flatten"
+  bottom: "conv7_2_mbox_conf_perm"
+  top: "conv7_2_mbox_conf_flat"
+  flatten_param {
+    axis: 1
+  }
+}
+layer {
+  name: "conv8_2_mbox_loc"
+  type: "Convolution"
+  bottom: "conv8_2"
+  top: "conv8_2_mbox_loc"
+  param {
+    lr_mult: 1.0
+    decay_mult: 1.0
+  }
+  param {
+    lr_mult: 2.0
+    decay_mult: 0.0
+  }
+  convolution_param {
+    num_output: 16
+    pad: 1
+    kernel_size: 3
+    stride: 1
+    weight_filler {
+      type: "xavier"
+    }
+    bias_filler {
+      type: "constant"
+      value: 0.0
+    }
+  }
+}
+layer {
+  name: "conv8_2_mbox_loc_perm"
+  type: "Permute"
+  bottom: "conv8_2_mbox_loc"
+  top: "conv8_2_mbox_loc_perm"
+  permute_param {
+    order: 0
+    order: 2
+    order: 3
+    order: 1
+  }
+}
+layer {
+  name: "conv8_2_mbox_loc_flat"
+  type: "Flatten"
+  bottom: "conv8_2_mbox_loc_perm"
+  top: "conv8_2_mbox_loc_flat"
+  flatten_param {
+    axis: 1
+  }
+}
+layer {
+  name: "conv8_2_mbox_conf"
+  type: "Convolution"
+  bottom: "conv8_2"
+  top: "conv8_2_mbox_conf"
+  param {
+    lr_mult: 1.0
+    decay_mult: 1.0
+  }
+  param {
+    lr_mult: 2.0
+    decay_mult: 0.0
+  }
+  convolution_param {
+    num_output: 84
+    pad: 1
+    kernel_size: 3
+    stride: 1
+    weight_filler {
+      type: "xavier"
+    }
+    bias_filler {
+      type: "constant"
+      value: 0.0
+    }
+  }
+}
+layer {
+  name: "conv8_2_mbox_conf_perm"
+  type: "Permute"
+  bottom: "conv8_2_mbox_conf"
+  top: "conv8_2_mbox_conf_perm"
+  permute_param {
+    order: 0
+    order: 2
+    order: 3
+    order: 1
+  }
+}
+layer {
+  name: "conv8_2_mbox_conf_flat"
+  type: "Flatten"
+  bottom: "conv8_2_mbox_conf_perm"
+  top: "conv8_2_mbox_conf_flat"
+  flatten_param {
+    axis: 1
+  }
+}
+layer {
+  name: "conv9_2_mbox_loc"
+  type: "Convolution"
+  bottom: "conv9_2"
+  top: "conv9_2_mbox_loc"
+  param {
+    lr_mult: 1.0
+    decay_mult: 1.0
+  }
+  param {
+    lr_mult: 2.0
+    decay_mult: 0.0
+  }
+  convolution_param {
+    num_output: 16
+    pad: 1
+    kernel_size: 3
+    stride: 1
+    weight_filler {
+      type: "xavier"
+    }
+    bias_filler {
+      type: "constant"
+      value: 0.0
+    }
+  }
+}
+layer {
+  name: "conv9_2_mbox_loc_perm"
+  type: "Permute"
+  bottom: "conv9_2_mbox_loc"
+  top: "conv9_2_mbox_loc_perm"
+  permute_param {
+    order: 0
+    order: 2
+    order: 3
+    order: 1
+  }
+}
+layer {
+  name: "conv9_2_mbox_loc_flat"
+  type: "Flatten"
+  bottom: "conv9_2_mbox_loc_perm"
+  top: "conv9_2_mbox_loc_flat"
+  flatten_param {
+    axis: 1
+  }
+}
+layer {
+  name: "conv9_2_mbox_conf"
+  type: "Convolution"
+  bottom: "conv9_2"
+  top: "conv9_2_mbox_conf"
+  param {
+    lr_mult: 1.0
+    decay_mult: 1.0
+  }
+  param {
+    lr_mult: 2.0
+    decay_mult: 0.0
+  }
+  convolution_param {
+    num_output: 84
+    pad: 1
+    kernel_size: 3
+    stride: 1
+    weight_filler {
+      type: "xavier"
+    }
+    bias_filler {
+      type: "constant"
+      value: 0.0
+    }
+  }
+}
+layer {
+  name: "conv9_2_mbox_conf_perm"
+  type: "Permute"
+  bottom: "conv9_2_mbox_conf"
+  top: "conv9_2_mbox_conf_perm"
+  permute_param {
+    order: 0
+    order: 2
+    order: 3
+    order: 1
+  }
+}
+layer {
+  name: "conv9_2_mbox_conf_flat"
+  type: "Flatten"
+  bottom: "conv9_2_mbox_conf_perm"
+  top: "conv9_2_mbox_conf_flat"
+  flatten_param {
+    axis: 1
+  }
+}
+layer {
+  name: "mbox_loc"
+  type: "Concat"
+  bottom: "conv4_3_norm_mbox_loc_flat"
+  bottom: "fc7_mbox_loc_flat"
+  bottom: "conv6_2_mbox_loc_flat"
+  bottom: "conv7_2_mbox_loc_flat"
+  bottom: "conv8_2_mbox_loc_flat"
+  bottom: "conv9_2_mbox_loc_flat"
+  top: "mbox_loc"
+  concat_param {
+    axis: 1
+  }
+}
+layer {
+  name: "mbox_conf"
+  type: "Concat"
+  bottom: "conv4_3_norm_mbox_conf_flat"
+  bottom: "fc7_mbox_conf_flat"
+  bottom: "conv6_2_mbox_conf_flat"
+  bottom: "conv7_2_mbox_conf_flat"
+  bottom: "conv8_2_mbox_conf_flat"
+  bottom: "conv9_2_mbox_conf_flat"
+  top: "mbox_conf"
+  concat_param {
+    axis: 1
+  }
+}
+layer {
+  name: "mbox_conf_reshape"
+  type: "Reshape"
+  bottom: "mbox_conf"
+  top: "mbox_conf_reshape"
+  reshape_param {
+    shape {
+      dim: 0
+      dim: -1
+      dim: 21
+    }
+  }
+}
+layer {
+  name: "mbox_conf_softmax"
+  type: "Softmax"
+  bottom: "mbox_conf_reshape"
+  top: "mbox_conf_softmax"
+  softmax_param {
+    axis: 2
+  }
+}
+layer {
+  name: "mbox_conf_flatten"
+  type: "Flatten"
+  bottom: "mbox_conf_softmax"
+  top: "mbox_conf_flatten"
+  flatten_param {
+    axis: 1
+  }
+}
+
diff --git a/caffe2/python/ssd_test/debug_prior_layer/debug.prototxt b/caffe2/python/ssd_test/debug_prior_layer/debug.prototxt
new file mode 100644
index 000000000..100085c17
--- /dev/null
+++ b/caffe2/python/ssd_test/debug_prior_layer/debug.prototxt
@@ -0,0 +1,39 @@
+input: "data"
+input_shape {
+	dim: 1
+	dim: 3
+	dim: 300
+	dim: 300
+}
+
+input: "conv4_norm"
+input_shape {
+	dim: 1
+	dim: 512
+	dim: 38
+	dim: 38
+}
+
+layer {
+  name: "conv4_3_norm_mbox_priorbox"
+	type: "PriorBox"
+	bottom: "conv4_norm"
+	bottom: "data"
+	top: "conv4_3_norm_mbox_priorbox"
+	prior_box_param {
+		min_size: 21.0
+		min_size: 30.0
+		max_size: 45.0
+		max_size: 60.0
+		aspect_ratio: 2
+		aspect_ratio: 3
+		aspect_ratio: 8
+		flip: true
+		clip: false
+		variance: 0.1
+		variance: 0.1
+		variance: 0.2
+		variance: 0.2
+		step: 8
+	}
+}
diff --git a/caffe2/python/ssd_test/debug_ssd_conv_layer/debug.prototxt b/caffe2/python/ssd_test/debug_ssd_conv_layer/debug.prototxt
new file mode 100644
index 000000000..c9627ccd6
--- /dev/null
+++ b/caffe2/python/ssd_test/debug_ssd_conv_layer/debug.prototxt
@@ -0,0 +1,1598 @@
+name: "VGG_VOC0712_SSD_300x300_deploy"
+input: "data"
+input_shape {
+  dim: 1
+  dim: 3
+  dim: 300
+  dim: 300
+}
+layer {
+  name: "conv1_1"
+  type: "Convolution"
+  bottom: "data"
+  top: "conv1_1"
+  param {
+    lr_mult: 1.0
+    decay_mult: 1.0
+  }
+  param {
+    lr_mult: 2.0
+    decay_mult: 0.0
+  }
+  convolution_param {
+    num_output: 64
+    pad: 1
+    kernel_size: 3
+    weight_filler {
+      type: "xavier"
+    }
+    bias_filler {
+      type: "constant"
+      value: 0.0
+    }
+  }
+}
+layer {
+  name: "relu1_1"
+  type: "ReLU"
+  bottom: "conv1_1"
+  top: "conv1_1"
+}
+layer {
+  name: "conv1_2"
+  type: "Convolution"
+  bottom: "conv1_1"
+  top: "conv1_2"
+  param {
+    lr_mult: 1.0
+    decay_mult: 1.0
+  }
+  param {
+    lr_mult: 2.0
+    decay_mult: 0.0
+  }
+  convolution_param {
+    num_output: 64
+    pad: 1
+    kernel_size: 3
+    weight_filler {
+      type: "xavier"
+    }
+    bias_filler {
+      type: "constant"
+      value: 0.0
+    }
+  }
+}
+layer {
+  name: "relu1_2"
+  type: "ReLU"
+  bottom: "conv1_2"
+  top: "conv1_2"
+}
+layer {
+  name: "pool1"
+  type: "Pooling"
+  bottom: "conv1_2"
+  top: "pool1"
+  pooling_param {
+    pool: MAX
+    kernel_size: 2
+    stride: 2
+  }
+}
+layer {
+  name: "conv2_1"
+  type: "Convolution"
+  bottom: "pool1"
+  top: "conv2_1"
+  param {
+    lr_mult: 1.0
+    decay_mult: 1.0
+  }
+  param {
+    lr_mult: 2.0
+    decay_mult: 0.0
+  }
+  convolution_param {
+    num_output: 128
+    pad: 1
+    kernel_size: 3
+    weight_filler {
+      type: "xavier"
+    }
+    bias_filler {
+      type: "constant"
+      value: 0.0
+    }
+  }
+}
+layer {
+  name: "relu2_1"
+  type: "ReLU"
+  bottom: "conv2_1"
+  top: "conv2_1"
+}
+layer {
+  name: "conv2_2"
+  type: "Convolution"
+  bottom: "conv2_1"
+  top: "conv2_2"
+  param {
+    lr_mult: 1.0
+    decay_mult: 1.0
+  }
+  param {
+    lr_mult: 2.0
+    decay_mult: 0.0
+  }
+  convolution_param {
+    num_output: 128
+    pad: 1
+    kernel_size: 3
+    weight_filler {
+      type: "xavier"
+    }
+    bias_filler {
+      type: "constant"
+      value: 0.0
+    }
+  }
+}
+layer {
+  name: "relu2_2"
+  type: "ReLU"
+  bottom: "conv2_2"
+  top: "conv2_2"
+}
+layer {
+  name: "pool2"
+  type: "Pooling"
+  bottom: "conv2_2"
+  top: "pool2"
+  pooling_param {
+    pool: MAX
+    kernel_size: 2
+    stride: 2
+  }
+}
+layer {
+  name: "conv3_1"
+  type: "Convolution"
+  bottom: "pool2"
+  top: "conv3_1"
+  param {
+    lr_mult: 1.0
+    decay_mult: 1.0
+  }
+  param {
+    lr_mult: 2.0
+    decay_mult: 0.0
+  }
+  convolution_param {
+    num_output: 256
+    pad: 1
+    kernel_size: 3
+    weight_filler {
+      type: "xavier"
+    }
+    bias_filler {
+      type: "constant"
+      value: 0.0
+    }
+  }
+}
+layer {
+  name: "relu3_1"
+  type: "ReLU"
+  bottom: "conv3_1"
+  top: "conv3_1"
+}
+layer {
+  name: "conv3_2"
+  type: "Convolution"
+  bottom: "conv3_1"
+  top: "conv3_2"
+  param {
+    lr_mult: 1.0
+    decay_mult: 1.0
+  }
+  param {
+    lr_mult: 2.0
+    decay_mult: 0.0
+  }
+  convolution_param {
+    num_output: 256
+    pad: 1
+    kernel_size: 3
+    weight_filler {
+      type: "xavier"
+    }
+    bias_filler {
+      type: "constant"
+      value: 0.0
+    }
+  }
+}
+layer {
+  name: "relu3_2"
+  type: "ReLU"
+  bottom: "conv3_2"
+  top: "conv3_2"
+}
+layer {
+  name: "conv3_3"
+  type: "Convolution"
+  bottom: "conv3_2"
+  top: "conv3_3"
+  param {
+    lr_mult: 1.0
+    decay_mult: 1.0
+  }
+  param {
+    lr_mult: 2.0
+    decay_mult: 0.0
+  }
+  convolution_param {
+    num_output: 256
+    pad: 1
+    kernel_size: 3
+    weight_filler {
+      type: "xavier"
+    }
+    bias_filler {
+      type: "constant"
+      value: 0.0
+    }
+  }
+}
+layer {
+  name: "relu3_3"
+  type: "ReLU"
+  bottom: "conv3_3"
+  top: "conv3_3"
+}
+layer {
+  name: "pool3"
+  type: "Pooling"
+  bottom: "conv3_3"
+  top: "pool3"
+  pooling_param {
+    pool: MAX
+    kernel_size: 2
+    stride: 2
+  }
+}
+layer {
+  name: "conv4_1"
+  type: "Convolution"
+  bottom: "pool3"
+  top: "conv4_1"
+  param {
+    lr_mult: 1.0
+    decay_mult: 1.0
+  }
+  param {
+    lr_mult: 2.0
+    decay_mult: 0.0
+  }
+  convolution_param {
+    num_output: 512
+    pad: 1
+    kernel_size: 3
+    weight_filler {
+      type: "xavier"
+    }
+    bias_filler {
+      type: "constant"
+      value: 0.0
+    }
+  }
+}
+layer {
+  name: "relu4_1"
+  type: "ReLU"
+  bottom: "conv4_1"
+  top: "conv4_1"
+}
+layer {
+  name: "conv4_2"
+  type: "Convolution"
+  bottom: "conv4_1"
+  top: "conv4_2"
+  param {
+    lr_mult: 1.0
+    decay_mult: 1.0
+  }
+  param {
+    lr_mult: 2.0
+    decay_mult: 0.0
+  }
+  convolution_param {
+    num_output: 512
+    pad: 1
+    kernel_size: 3
+    weight_filler {
+      type: "xavier"
+    }
+    bias_filler {
+      type: "constant"
+      value: 0.0
+    }
+  }
+}
+layer {
+  name: "relu4_2"
+  type: "ReLU"
+  bottom: "conv4_2"
+  top: "conv4_2"
+}
+layer {
+  name: "conv4_3"
+  type: "Convolution"
+  bottom: "conv4_2"
+  top: "conv4_3"
+  param {
+    lr_mult: 1.0
+    decay_mult: 1.0
+  }
+  param {
+    lr_mult: 2.0
+    decay_mult: 0.0
+  }
+  convolution_param {
+    num_output: 512
+    pad: 1
+    kernel_size: 3
+    weight_filler {
+      type: "xavier"
+    }
+    bias_filler {
+      type: "constant"
+      value: 0.0
+    }
+  }
+}
+layer {
+  name: "relu4_3"
+  type: "ReLU"
+  bottom: "conv4_3"
+  top: "conv4_3"
+}
+layer {
+  name: "pool4"
+  type: "Pooling"
+  bottom: "conv4_3"
+  top: "pool4"
+  pooling_param {
+    pool: MAX
+    kernel_size: 2
+    stride: 2
+  }
+}
+layer {
+  name: "conv5_1"
+  type: "Convolution"
+  bottom: "pool4"
+  top: "conv5_1"
+  param {
+    lr_mult: 1.0
+    decay_mult: 1.0
+  }
+  param {
+    lr_mult: 2.0
+    decay_mult: 0.0
+  }
+  convolution_param {
+    num_output: 512
+    pad: 1
+    kernel_size: 3
+    weight_filler {
+      type: "xavier"
+    }
+    bias_filler {
+      type: "constant"
+      value: 0.0
+    }
+    dilation: 1
+  }
+}
+layer {
+  name: "relu5_1"
+  type: "ReLU"
+  bottom: "conv5_1"
+  top: "conv5_1"
+}
+layer {
+  name: "conv5_2"
+  type: "Convolution"
+  bottom: "conv5_1"
+  top: "conv5_2"
+  param {
+    lr_mult: 1.0
+    decay_mult: 1.0
+  }
+  param {
+    lr_mult: 2.0
+    decay_mult: 0.0
+  }
+  convolution_param {
+    num_output: 512
+    pad: 1
+    kernel_size: 3
+    weight_filler {
+      type: "xavier"
+    }
+    bias_filler {
+      type: "constant"
+      value: 0.0
+    }
+    dilation: 1
+  }
+}
+layer {
+  name: "relu5_2"
+  type: "ReLU"
+  bottom: "conv5_2"
+  top: "conv5_2"
+}
+layer {
+  name: "conv5_3"
+  type: "Convolution"
+  bottom: "conv5_2"
+  top: "conv5_3"
+  param {
+    lr_mult: 1.0
+    decay_mult: 1.0
+  }
+  param {
+    lr_mult: 2.0
+    decay_mult: 0.0
+  }
+  convolution_param {
+    num_output: 512
+    pad: 1
+    kernel_size: 3
+    weight_filler {
+      type: "xavier"
+    }
+    bias_filler {
+      type: "constant"
+      value: 0.0
+    }
+    dilation: 1
+  }
+}
+layer {
+  name: "relu5_3"
+  type: "ReLU"
+  bottom: "conv5_3"
+  top: "conv5_3"
+}
+layer {
+  name: "pool5"
+  type: "Pooling"
+  bottom: "conv5_3"
+  top: "pool5"
+  pooling_param {
+    pool: MAX
+    kernel_size: 3
+    stride: 1
+    pad: 1
+  }
+}
+layer {
+  name: "fc6"
+  type: "Convolution"
+  bottom: "pool5"
+  top: "fc6"
+  param {
+    lr_mult: 1.0
+    decay_mult: 1.0
+  }
+  param {
+    lr_mult: 2.0
+    decay_mult: 0.0
+  }
+  convolution_param {
+    num_output: 1024
+    pad: 6
+    kernel_size: 3
+    weight_filler {
+      type: "xavier"
+    }
+    bias_filler {
+      type: "constant"
+      value: 0.0
+    }
+    dilation: 6
+  }
+}
+layer {
+  name: "relu6"
+  type: "ReLU"
+  bottom: "fc6"
+  top: "fc6"
+}
+layer {
+  name: "fc7"
+  type: "Convolution"
+  bottom: "fc6"
+  top: "fc7"
+  param {
+    lr_mult: 1.0
+    decay_mult: 1.0
+  }
+  param {
+    lr_mult: 2.0
+    decay_mult: 0.0
+  }
+  convolution_param {
+    num_output: 1024
+    kernel_size: 1
+    weight_filler {
+      type: "xavier"
+    }
+    bias_filler {
+      type: "constant"
+      value: 0.0
+    }
+  }
+}
+layer {
+  name: "relu7"
+  type: "ReLU"
+  bottom: "fc7"
+  top: "fc7"
+}
+layer {
+  name: "conv6_1"
+  type: "Convolution"
+  bottom: "fc7"
+  top: "conv6_1"
+  param {
+    lr_mult: 1.0
+    decay_mult: 1.0
+  }
+  param {
+    lr_mult: 2.0
+    decay_mult: 0.0
+  }
+  convolution_param {
+    num_output: 256
+    pad: 0
+    kernel_size: 1
+    stride: 1
+    weight_filler {
+      type: "xavier"
+    }
+    bias_filler {
+      type: "constant"
+      value: 0.0
+    }
+  }
+}
+layer {
+  name: "conv6_1_relu"
+  type: "ReLU"
+  bottom: "conv6_1"
+  top: "conv6_1"
+}
+layer {
+  name: "conv6_2"
+  type: "Convolution"
+  bottom: "conv6_1"
+  top: "conv6_2"
+  param {
+    lr_mult: 1.0
+    decay_mult: 1.0
+  }
+  param {
+    lr_mult: 2.0
+    decay_mult: 0.0
+  }
+  convolution_param {
+    num_output: 512
+    pad: 1
+    kernel_size: 3
+    stride: 2
+    weight_filler {
+      type: "xavier"
+    }
+    bias_filler {
+      type: "constant"
+      value: 0.0
+    }
+  }
+}
+layer {
+  name: "conv6_2_relu"
+  type: "ReLU"
+  bottom: "conv6_2"
+  top: "conv6_2"
+}
+layer {
+  name: "conv7_1"
+  type: "Convolution"
+  bottom: "conv6_2"
+  top: "conv7_1"
+  param {
+    lr_mult: 1.0
+    decay_mult: 1.0
+  }
+  param {
+    lr_mult: 2.0
+    decay_mult: 0.0
+  }
+  convolution_param {
+    num_output: 128
+    pad: 0
+    kernel_size: 1
+    stride: 1
+    weight_filler {
+      type: "xavier"
+    }
+    bias_filler {
+      type: "constant"
+      value: 0.0
+    }
+  }
+}
+layer {
+  name: "conv7_1_relu"
+  type: "ReLU"
+  bottom: "conv7_1"
+  top: "conv7_1"
+}
+layer {
+  name: "conv7_2"
+  type: "Convolution"
+  bottom: "conv7_1"
+  top: "conv7_2"
+  param {
+    lr_mult: 1.0
+    decay_mult: 1.0
+  }
+  param {
+    lr_mult: 2.0
+    decay_mult: 0.0
+  }
+  convolution_param {
+    num_output: 256
+    pad: 1
+    kernel_size: 3
+    stride: 2
+    weight_filler {
+      type: "xavier"
+    }
+    bias_filler {
+      type: "constant"
+      value: 0.0
+    }
+  }
+}
+layer {
+  name: "conv7_2_relu"
+  type: "ReLU"
+  bottom: "conv7_2"
+  top: "conv7_2"
+}
+layer {
+  name: "conv8_1"
+  type: "Convolution"
+  bottom: "conv7_2"
+  top: "conv8_1"
+  param {
+    lr_mult: 1.0
+    decay_mult: 1.0
+  }
+  param {
+    lr_mult: 2.0
+    decay_mult: 0.0
+  }
+  convolution_param {
+    num_output: 128
+    pad: 0
+    kernel_size: 1
+    stride: 1
+    weight_filler {
+      type: "xavier"
+    }
+    bias_filler {
+      type: "constant"
+      value: 0.0
+    }
+  }
+}
+layer {
+  name: "conv8_1_relu"
+  type: "ReLU"
+  bottom: "conv8_1"
+  top: "conv8_1"
+}
+layer {
+  name: "conv8_2"
+  type: "Convolution"
+  bottom: "conv8_1"
+  top: "conv8_2"
+  param {
+    lr_mult: 1.0
+    decay_mult: 1.0
+  }
+  param {
+    lr_mult: 2.0
+    decay_mult: 0.0
+  }
+  convolution_param {
+    num_output: 256
+    pad: 0
+    kernel_size: 3
+    stride: 1
+    weight_filler {
+      type: "xavier"
+    }
+    bias_filler {
+      type: "constant"
+      value: 0.0
+    }
+  }
+}
+layer {
+  name: "conv8_2_relu"
+  type: "ReLU"
+  bottom: "conv8_2"
+  top: "conv8_2"
+}
+layer {
+  name: "conv9_1"
+  type: "Convolution"
+  bottom: "conv8_2"
+  top: "conv9_1"
+  param {
+    lr_mult: 1.0
+    decay_mult: 1.0
+  }
+  param {
+    lr_mult: 2.0
+    decay_mult: 0.0
+  }
+  convolution_param {
+    num_output: 128
+    pad: 0
+    kernel_size: 1
+    stride: 1
+    weight_filler {
+      type: "xavier"
+    }
+    bias_filler {
+      type: "constant"
+      value: 0.0
+    }
+  }
+}
+layer {
+  name: "conv9_1_relu"
+  type: "ReLU"
+  bottom: "conv9_1"
+  top: "conv9_1"
+}
+layer {
+  name: "conv9_2"
+  type: "Convolution"
+  bottom: "conv9_1"
+  top: "conv9_2"
+  param {
+    lr_mult: 1.0
+    decay_mult: 1.0
+  }
+  param {
+    lr_mult: 2.0
+    decay_mult: 0.0
+  }
+  convolution_param {
+    num_output: 256
+    pad: 0
+    kernel_size: 3
+    stride: 1
+    weight_filler {
+      type: "xavier"
+    }
+    bias_filler {
+      type: "constant"
+      value: 0.0
+    }
+  }
+}
+layer {
+  name: "conv9_2_relu"
+  type: "ReLU"
+  bottom: "conv9_2"
+  top: "conv9_2"
+}
+layer {
+  name: "conv4_3_norm"
+  type: "Normalize"
+  bottom: "conv4_3"
+  top: "conv4_3_norm"
+  norm_param {
+    across_spatial: false
+    scale_filler {
+      type: "constant"
+      value: 20.0
+    }
+    channel_shared: false
+  }
+}
+layer {
+  name: "conv4_3_norm_mbox_loc"
+  type: "Convolution"
+  bottom: "conv4_3_norm"
+  top: "conv4_3_norm_mbox_loc"
+  param {
+    lr_mult: 1.0
+    decay_mult: 1.0
+  }
+  param {
+    lr_mult: 2.0
+    decay_mult: 0.0
+  }
+  convolution_param {
+    num_output: 16
+    pad: 1
+    kernel_size: 3
+    stride: 1
+    weight_filler {
+      type: "xavier"
+    }
+    bias_filler {
+      type: "constant"
+      value: 0.0
+    }
+  }
+}
+layer {
+  name: "conv4_3_norm_mbox_loc_perm"
+  type: "Permute"
+  bottom: "conv4_3_norm_mbox_loc"
+  top: "conv4_3_norm_mbox_loc_perm"
+  permute_param {
+    order: 0
+    order: 2
+    order: 3
+    order: 1
+  }
+}
+layer {
+  name: "conv4_3_norm_mbox_loc_flat"
+  type: "Flatten"
+  bottom: "conv4_3_norm_mbox_loc_perm"
+  top: "conv4_3_norm_mbox_loc_flat"
+  flatten_param {
+    axis: 1
+  }
+}
+layer {
+  name: "conv4_3_norm_mbox_conf"
+  type: "Convolution"
+  bottom: "conv4_3_norm"
+  top: "conv4_3_norm_mbox_conf"
+  param {
+    lr_mult: 1.0
+    decay_mult: 1.0
+  }
+  param {
+    lr_mult: 2.0
+    decay_mult: 0.0
+  }
+  convolution_param {
+    num_output: 84
+    pad: 1
+    kernel_size: 3
+    stride: 1
+    weight_filler {
+      type: "xavier"
+    }
+    bias_filler {
+      type: "constant"
+      value: 0.0
+    }
+  }
+}
+layer {
+  name: "conv4_3_norm_mbox_conf_perm"
+  type: "Permute"
+  bottom: "conv4_3_norm_mbox_conf"
+  top: "conv4_3_norm_mbox_conf_perm"
+  permute_param {
+    order: 0
+    order: 2
+    order: 3
+    order: 1
+  }
+}
+layer {
+  name: "conv4_3_norm_mbox_conf_flat"
+  type: "Flatten"
+  bottom: "conv4_3_norm_mbox_conf_perm"
+  top: "conv4_3_norm_mbox_conf_flat"
+  flatten_param {
+    axis: 1
+  }
+}
+layer {
+  name: "conv4_3_norm_mbox_priorbox"
+  type: "PriorBox"
+  bottom: "conv4_3_norm"
+  bottom: "data"
+  top: "conv4_3_norm_mbox_priorbox"
+  prior_box_param {
+    min_size: 30.0
+    max_size: 60.0
+    aspect_ratio: 2.0
+    flip: true
+    clip: false
+    variance: 0.10000000149
+    variance: 0.10000000149
+    variance: 0.20000000298
+    variance: 0.20000000298
+    step: 8.0
+    offset: 0.5
+  }
+}
+layer {
+  name: "fc7_mbox_loc"
+  type: "Convolution"
+  bottom: "fc7"
+  top: "fc7_mbox_loc"
+  param {
+    lr_mult: 1.0
+    decay_mult: 1.0
+  }
+  param {
+    lr_mult: 2.0
+    decay_mult: 0.0
+  }
+  convolution_param {
+    num_output: 24
+    pad: 1
+    kernel_size: 3
+    stride: 1
+    weight_filler {
+      type: "xavier"
+    }
+    bias_filler {
+      type: "constant"
+      value: 0.0
+    }
+  }
+}
+layer {
+  name: "fc7_mbox_loc_perm"
+  type: "Permute"
+  bottom: "fc7_mbox_loc"
+  top: "fc7_mbox_loc_perm"
+  permute_param {
+    order: 0
+    order: 2
+    order: 3
+    order: 1
+  }
+}
+layer {
+  name: "fc7_mbox_loc_flat"
+  type: "Flatten"
+  bottom: "fc7_mbox_loc_perm"
+  top: "fc7_mbox_loc_flat"
+  flatten_param {
+    axis: 1
+  }
+}
+layer {
+  name: "fc7_mbox_conf"
+  type: "Convolution"
+  bottom: "fc7"
+  top: "fc7_mbox_conf"
+  param {
+    lr_mult: 1.0
+    decay_mult: 1.0
+  }
+  param {
+    lr_mult: 2.0
+    decay_mult: 0.0
+  }
+  convolution_param {
+    num_output: 126
+    pad: 1
+    kernel_size: 3
+    stride: 1
+    weight_filler {
+      type: "xavier"
+    }
+    bias_filler {
+      type: "constant"
+      value: 0.0
+    }
+  }
+}
+layer {
+  name: "fc7_mbox_conf_perm"
+  type: "Permute"
+  bottom: "fc7_mbox_conf"
+  top: "fc7_mbox_conf_perm"
+  permute_param {
+    order: 0
+    order: 2
+    order: 3
+    order: 1
+  }
+}
+layer {
+  name: "fc7_mbox_conf_flat"
+  type: "Flatten"
+  bottom: "fc7_mbox_conf_perm"
+  top: "fc7_mbox_conf_flat"
+  flatten_param {
+    axis: 1
+  }
+}
+layer {
+  name: "fc7_mbox_priorbox"
+  type: "PriorBox"
+  bottom: "fc7"
+  bottom: "data"
+  top: "fc7_mbox_priorbox"
+  prior_box_param {
+    min_size: 60.0
+    max_size: 111.0
+    aspect_ratio: 2.0
+    aspect_ratio: 3.0
+    flip: true
+    clip: false
+    variance: 0.10000000149
+    variance: 0.10000000149
+    variance: 0.20000000298
+    variance: 0.20000000298
+    step: 16.0
+    offset: 0.5
+  }
+}
+layer {
+  name: "conv6_2_mbox_loc"
+  type: "Convolution"
+  bottom: "conv6_2"
+  top: "conv6_2_mbox_loc"
+  param {
+    lr_mult: 1.0
+    decay_mult: 1.0
+  }
+  param {
+    lr_mult: 2.0
+    decay_mult: 0.0
+  }
+  convolution_param {
+    num_output: 24
+    pad: 1
+    kernel_size: 3
+    stride: 1
+    weight_filler {
+      type: "xavier"
+    }
+    bias_filler {
+      type: "constant"
+      value: 0.0
+    }
+  }
+}
+layer {
+  name: "conv6_2_mbox_loc_perm"
+  type: "Permute"
+  bottom: "conv6_2_mbox_loc"
+  top: "conv6_2_mbox_loc_perm"
+  permute_param {
+    order: 0
+    order: 2
+    order: 3
+    order: 1
+  }
+}
+layer {
+  name: "conv6_2_mbox_loc_flat"
+  type: "Flatten"
+  bottom: "conv6_2_mbox_loc_perm"
+  top: "conv6_2_mbox_loc_flat"
+  flatten_param {
+    axis: 1
+  }
+}
+layer {
+  name: "conv6_2_mbox_conf"
+  type: "Convolution"
+  bottom: "conv6_2"
+  top: "conv6_2_mbox_conf"
+  param {
+    lr_mult: 1.0
+    decay_mult: 1.0
+  }
+  param {
+    lr_mult: 2.0
+    decay_mult: 0.0
+  }
+  convolution_param {
+    num_output: 126
+    pad: 1
+    kernel_size: 3
+    stride: 1
+    weight_filler {
+      type: "xavier"
+    }
+    bias_filler {
+      type: "constant"
+      value: 0.0
+    }
+  }
+}
+layer {
+  name: "conv6_2_mbox_conf_perm"
+  type: "Permute"
+  bottom: "conv6_2_mbox_conf"
+  top: "conv6_2_mbox_conf_perm"
+  permute_param {
+    order: 0
+    order: 2
+    order: 3
+    order: 1
+  }
+}
+layer {
+  name: "conv6_2_mbox_conf_flat"
+  type: "Flatten"
+  bottom: "conv6_2_mbox_conf_perm"
+  top: "conv6_2_mbox_conf_flat"
+  flatten_param {
+    axis: 1
+  }
+}
+layer {
+  name: "conv6_2_mbox_priorbox"
+  type: "PriorBox"
+  bottom: "conv6_2"
+  bottom: "data"
+  top: "conv6_2_mbox_priorbox"
+  prior_box_param {
+    min_size: 111.0
+    max_size: 162.0
+    aspect_ratio: 2.0
+    aspect_ratio: 3.0
+    flip: true
+    clip: false
+    variance: 0.10000000149
+    variance: 0.10000000149
+    variance: 0.20000000298
+    variance: 0.20000000298
+    step: 32.0
+    offset: 0.5
+  }
+}
+layer {
+  name: "conv7_2_mbox_loc"
+  type: "Convolution"
+  bottom: "conv7_2"
+  top: "conv7_2_mbox_loc"
+  param {
+    lr_mult: 1.0
+    decay_mult: 1.0
+  }
+  param {
+    lr_mult: 2.0
+    decay_mult: 0.0
+  }
+  convolution_param {
+    num_output: 24
+    pad: 1
+    kernel_size: 3
+    stride: 1
+    weight_filler {
+      type: "xavier"
+    }
+    bias_filler {
+      type: "constant"
+      value: 0.0
+    }
+  }
+}
+layer {
+  name: "conv7_2_mbox_loc_perm"
+  type: "Permute"
+  bottom: "conv7_2_mbox_loc"
+  top: "conv7_2_mbox_loc_perm"
+  permute_param {
+    order: 0
+    order: 2
+    order: 3
+    order: 1
+  }
+}
+layer {
+  name: "conv7_2_mbox_loc_flat"
+  type: "Flatten"
+  bottom: "conv7_2_mbox_loc_perm"
+  top: "conv7_2_mbox_loc_flat"
+  flatten_param {
+    axis: 1
+  }
+}
+layer {
+  name: "conv7_2_mbox_conf"
+  type: "Convolution"
+  bottom: "conv7_2"
+  top: "conv7_2_mbox_conf"
+  param {
+    lr_mult: 1.0
+    decay_mult: 1.0
+  }
+  param {
+    lr_mult: 2.0
+    decay_mult: 0.0
+  }
+  convolution_param {
+    num_output: 126
+    pad: 1
+    kernel_size: 3
+    stride: 1
+    weight_filler {
+      type: "xavier"
+    }
+    bias_filler {
+      type: "constant"
+      value: 0.0
+    }
+  }
+}
+layer {
+  name: "conv7_2_mbox_conf_perm"
+  type: "Permute"
+  bottom: "conv7_2_mbox_conf"
+  top: "conv7_2_mbox_conf_perm"
+  permute_param {
+    order: 0
+    order: 2
+    order: 3
+    order: 1
+  }
+}
+layer {
+  name: "conv7_2_mbox_conf_flat"
+  type: "Flatten"
+  bottom: "conv7_2_mbox_conf_perm"
+  top: "conv7_2_mbox_conf_flat"
+  flatten_param {
+    axis: 1
+  }
+}
+layer {
+  name: "conv7_2_mbox_priorbox"
+  type: "PriorBox"
+  bottom: "conv7_2"
+  bottom: "data"
+  top: "conv7_2_mbox_priorbox"
+  prior_box_param {
+    min_size: 162.0
+    max_size: 213.0
+    aspect_ratio: 2.0
+    aspect_ratio: 3.0
+    flip: true
+    clip: false
+    variance: 0.10000000149
+    variance: 0.10000000149
+    variance: 0.20000000298
+    variance: 0.20000000298
+    step: 64.0
+    offset: 0.5
+  }
+}
+layer {
+  name: "conv8_2_mbox_loc"
+  type: "Convolution"
+  bottom: "conv8_2"
+  top: "conv8_2_mbox_loc"
+  param {
+    lr_mult: 1.0
+    decay_mult: 1.0
+  }
+  param {
+    lr_mult: 2.0
+    decay_mult: 0.0
+  }
+  convolution_param {
+    num_output: 16
+    pad: 1
+    kernel_size: 3
+    stride: 1
+    weight_filler {
+      type: "xavier"
+    }
+    bias_filler {
+      type: "constant"
+      value: 0.0
+    }
+  }
+}
+layer {
+  name: "conv8_2_mbox_loc_perm"
+  type: "Permute"
+  bottom: "conv8_2_mbox_loc"
+  top: "conv8_2_mbox_loc_perm"
+  permute_param {
+    order: 0
+    order: 2
+    order: 3
+    order: 1
+  }
+}
+layer {
+  name: "conv8_2_mbox_loc_flat"
+  type: "Flatten"
+  bottom: "conv8_2_mbox_loc_perm"
+  top: "conv8_2_mbox_loc_flat"
+  flatten_param {
+    axis: 1
+  }
+}
+layer {
+  name: "conv8_2_mbox_conf"
+  type: "Convolution"
+  bottom: "conv8_2"
+  top: "conv8_2_mbox_conf"
+  param {
+    lr_mult: 1.0
+    decay_mult: 1.0
+  }
+  param {
+    lr_mult: 2.0
+    decay_mult: 0.0
+  }
+  convolution_param {
+    num_output: 84
+    pad: 1
+    kernel_size: 3
+    stride: 1
+    weight_filler {
+      type: "xavier"
+    }
+    bias_filler {
+      type: "constant"
+      value: 0.0
+    }
+  }
+}
+layer {
+  name: "conv8_2_mbox_conf_perm"
+  type: "Permute"
+  bottom: "conv8_2_mbox_conf"
+  top: "conv8_2_mbox_conf_perm"
+  permute_param {
+    order: 0
+    order: 2
+    order: 3
+    order: 1
+  }
+}
+layer {
+  name: "conv8_2_mbox_conf_flat"
+  type: "Flatten"
+  bottom: "conv8_2_mbox_conf_perm"
+  top: "conv8_2_mbox_conf_flat"
+  flatten_param {
+    axis: 1
+  }
+}
+layer {
+  name: "conv8_2_mbox_priorbox"
+  type: "PriorBox"
+  bottom: "conv8_2"
+  bottom: "data"
+  top: "conv8_2_mbox_priorbox"
+  prior_box_param {
+    min_size: 213.0
+    max_size: 264.0
+    aspect_ratio: 2.0
+    flip: true
+    clip: false
+    variance: 0.10000000149
+    variance: 0.10000000149
+    variance: 0.20000000298
+    variance: 0.20000000298
+    step: 100.0
+    offset: 0.5
+  }
+}
+layer {
+  name: "conv9_2_mbox_loc"
+  type: "Convolution"
+  bottom: "conv9_2"
+  top: "conv9_2_mbox_loc"
+  param {
+    lr_mult: 1.0
+    decay_mult: 1.0
+  }
+  param {
+    lr_mult: 2.0
+    decay_mult: 0.0
+  }
+  convolution_param {
+    num_output: 16
+    pad: 1
+    kernel_size: 3
+    stride: 1
+    weight_filler {
+      type: "xavier"
+    }
+    bias_filler {
+      type: "constant"
+      value: 0.0
+    }
+  }
+}
+layer {
+  name: "conv9_2_mbox_loc_perm"
+  type: "Permute"
+  bottom: "conv9_2_mbox_loc"
+  top: "conv9_2_mbox_loc_perm"
+  permute_param {
+    order: 0
+    order: 2
+    order: 3
+    order: 1
+  }
+}
+layer {
+  name: "conv9_2_mbox_loc_flat"
+  type: "Flatten"
+  bottom: "conv9_2_mbox_loc_perm"
+  top: "conv9_2_mbox_loc_flat"
+  flatten_param {
+    axis: 1
+  }
+}
+layer {
+  name: "conv9_2_mbox_conf"
+  type: "Convolution"
+  bottom: "conv9_2"
+  top: "conv9_2_mbox_conf"
+  param {
+    lr_mult: 1.0
+    decay_mult: 1.0
+  }
+  param {
+    lr_mult: 2.0
+    decay_mult: 0.0
+  }
+  convolution_param {
+    num_output: 84
+    pad: 1
+    kernel_size: 3
+    stride: 1
+    weight_filler {
+      type: "xavier"
+    }
+    bias_filler {
+      type: "constant"
+      value: 0.0
+    }
+  }
+}
+layer {
+  name: "conv9_2_mbox_conf_perm"
+  type: "Permute"
+  bottom: "conv9_2_mbox_conf"
+  top: "conv9_2_mbox_conf_perm"
+  permute_param {
+    order: 0
+    order: 2
+    order: 3
+    order: 1
+  }
+}
+layer {
+  name: "conv9_2_mbox_conf_flat"
+  type: "Flatten"
+  bottom: "conv9_2_mbox_conf_perm"
+  top: "conv9_2_mbox_conf_flat"
+  flatten_param {
+    axis: 1
+  }
+}
+layer {
+  name: "conv9_2_mbox_priorbox"
+  type: "PriorBox"
+  bottom: "conv9_2"
+  bottom: "data"
+  top: "conv9_2_mbox_priorbox"
+  prior_box_param {
+    min_size: 264.0
+    max_size: 315.0
+    aspect_ratio: 2.0
+    flip: true
+    clip: false
+    variance: 0.10000000149
+    variance: 0.10000000149
+    variance: 0.20000000298
+    variance: 0.20000000298
+    step: 300.0
+    offset: 0.5
+  }
+}
+layer {
+  name: "mbox_loc"
+  type: "Concat"
+  bottom: "conv4_3_norm_mbox_loc_flat"
+  bottom: "fc7_mbox_loc_flat"
+  bottom: "conv6_2_mbox_loc_flat"
+  bottom: "conv7_2_mbox_loc_flat"
+  bottom: "conv8_2_mbox_loc_flat"
+  bottom: "conv9_2_mbox_loc_flat"
+  top: "mbox_loc"
+  concat_param {
+    axis: 1
+  }
+}
+layer {
+  name: "mbox_conf"
+  type: "Concat"
+  bottom: "conv4_3_norm_mbox_conf_flat"
+  bottom: "fc7_mbox_conf_flat"
+  bottom: "conv6_2_mbox_conf_flat"
+  bottom: "conv7_2_mbox_conf_flat"
+  bottom: "conv8_2_mbox_conf_flat"
+  bottom: "conv9_2_mbox_conf_flat"
+  top: "mbox_conf"
+  concat_param {
+    axis: 1
+  }
+}
+layer {
+  name: "mbox_priorbox"
+  type: "Concat"
+  bottom: "conv4_3_norm_mbox_priorbox"
+  bottom: "fc7_mbox_priorbox"
+  bottom: "conv6_2_mbox_priorbox"
+  bottom: "conv7_2_mbox_priorbox"
+  bottom: "conv8_2_mbox_priorbox"
+  bottom: "conv9_2_mbox_priorbox"
+  top: "mbox_priorbox"
+  concat_param {
+    axis: 2
+  }
+}
+layer {
+  name: "mbox_conf_reshape"
+  type: "Reshape"
+  bottom: "mbox_conf"
+  top: "mbox_conf_reshape"
+  reshape_param {
+    shape {
+      dim: 0
+      dim: -1
+      dim: 21
+    }
+  }
+}
+layer {
+  name: "mbox_conf_softmax"
+  type: "Softmax"
+  bottom: "mbox_conf_reshape"
+  top: "mbox_conf_softmax"
+  softmax_param {
+    axis: 2
+  }
+}
+layer {
+  name: "mbox_conf_flatten"
+  type: "Flatten"
+  bottom: "mbox_conf_softmax"
+  top: "mbox_conf_flatten"
+  flatten_param {
+    axis: 1
+  }
+}
+
diff --git a/caffe2/python/ssd_test/debug_ssd_conv_layer/debug2.prototxt b/caffe2/python/ssd_test/debug_ssd_conv_layer/debug2.prototxt
new file mode 100644
index 000000000..a10ed88a4
--- /dev/null
+++ b/caffe2/python/ssd_test/debug_ssd_conv_layer/debug2.prototxt
@@ -0,0 +1,66 @@
+name: "VGG_VOC0712_SSD_300x300_deploy"
+input: "data"
+input_shape {
+  dim: 1
+  dim: 3
+  dim: 300
+  dim: 300
+}
+layer {
+  name: "conv1_1"
+  type: "Convolution"
+  bottom: "data"
+  top: "conv1_1"
+  param {
+    lr_mult: 1.0
+    decay_mult: 1.0
+  }
+  param {
+    lr_mult: 2.0
+    decay_mult: 0.0
+  }
+  convolution_param {
+    num_output: 64
+    pad: 1
+    kernel_size: 3
+    weight_filler {
+      type: "xavier"
+    }
+    bias_filler {
+      type: "constant"
+      value: 0.0
+    }
+  }
+}
+layer {
+  name: "relu1_1"
+  type: "ReLU"
+  bottom: "conv1_1"
+  top: "conv1_1"
+}
+layer {
+  name: "conv1_2"
+  type: "Convolution"
+  bottom: "conv1_1"
+  top: "conv1_2"
+  param {
+    lr_mult: 1.0
+    decay_mult: 1.0
+  }
+  param {
+    lr_mult: 2.0
+    decay_mult: 0.0
+  }
+  convolution_param {
+    num_output: 64
+    pad: 1
+    kernel_size: 3
+    weight_filler {
+      type: "xavier"
+    }
+    bias_filler {
+      type: "constant"
+      value: 0.0
+    }
+  }
+}
diff --git a/caffe2/python/ssd_test/det.py b/caffe2/python/ssd_test/det.py
new file mode 100644
index 000000000..92c553c96
--- /dev/null
+++ b/caffe2/python/ssd_test/det.py
@@ -0,0 +1,88 @@
+import numpy as np
+import os, time, argparse, sys
+
+from caffe2.proto import caffe2_pb2
+from caffe2.python import workspace, core
+import caffe2.python._import_c_extension as C
+
+def parse_args():
+    parser = argparse.ArgumentParser(description='benchmark net in caffe2')
+    parser.add_argument('--init_net', help='init net', type=str, required=True)
+    parser.add_argument('--pred_net', help='pred net', type=str, required=True)
+    parser.add_argument('--blob', type=str, required=True)
+    parser.add_argument('--cudnn', help='use cudnn', action='store_true', default=False)
+
+    if len(sys.argv) == 1:
+        parser.print_help()
+        sys.exit(1)
+
+    args = parser.parse_args()
+    return args
+
+def deviceOpts():
+    device_opts = caffe2_pb2.DeviceOption()
+    device_opts.device_type = caffe2_pb2.CUDA
+    device_opts.cuda_gpu_id = 3
+    return device_opts
+
+def initNet(init_net_path, device_opts):
+    init_def = caffe2_pb2.NetDef()
+    with open(init_net_path, 'r') as f:
+        init_def.ParseFromString(f.read())
+        init_def.device_option.CopyFrom(device_opts)
+        workspace.RunNetOnce(init_def)
+    return init_def
+
+def createNet(predict_net_path, device_opts, use_cudnn=False):
+    net_def = caffe2_pb2.NetDef()
+    dev = caffe2_pb2.DeviceOption()
+    dev.device_type = caffe2_pb2.CPU
+
+    global final_dev 
+    final_dev = device_opts
+    with open(predict_net_path, 'r') as f:
+        net_def.ParseFromString(f.read())
+        if use_cudnn:
+            for op in net_def.op:
+                if op.type == 'PriorBox':
+                    op.device_option.CopyFrom(final_dev)
+                elif op.type == 'Concat' and op.output[0] == 'mbox_priorbox':
+                    op.device_option.CopyFrom(dev)
+                elif op.type == 'Norm':
+                    op.device_option.CopyFrom(final_dev)
+                elif op.type == 'DetectionOutput':
+                    op.device_option.CopyFrom(final_dev)
+                else:
+                    op.device_option.CopyFrom(final_dev)
+                    op.engine = 'CUDNN'
+        workspace.CreateNet(net_def)
+    return net_def
+
+def main(args):
+    device_opts = deviceOpts()
+    init_def = initNet(args.init_net, device_opts)
+    net_def = createNet(args.pred_net, device_opts, use_cudnn=args.cudnn)
+    with open('./net.prototxt', 'w') as f:
+        f.write(str(net_def))
+    
+    caffe_data = np.load('./input.npy')
+    caffe_dets = np.load('./detections.npy')
+    caffe_blobs = np.load('{}.npy'.format(args.blob))
+    workspace.FeedBlob('data', caffe_data[np.newaxis, :, :, :], final_dev)
+    workspace.RunNet(net_def.name, 1)
+
+
+    caffe2_out = workspace.FetchBlob(args.blob)
+    np.save('./caffe2_det.npy', caffe2_out)
+
+    #print net_def
+    #print caffe1_out.shape, caffe2_out.shape
+    #print np.sum(np.abs(caffe_dets - caffe2_out))
+    #print np.allclose(caffe_dets, caffe2_out)
+    print caffe2_out
+    print caffe_blobs
+    print np.sum(np.abs(caffe2_out - caffe_blobs))
+
+if __name__ == '__main__':
+    args = parse_args()
+    main(args)
diff --git a/caffe2/python/ssd_test/det_test.py b/caffe2/python/ssd_test/det_test.py
new file mode 100644
index 000000000..25fa6fcb1
--- /dev/null
+++ b/caffe2/python/ssd_test/det_test.py
@@ -0,0 +1,86 @@
+import numpy as np
+import os, time, argparse, sys
+
+from caffe2.proto import caffe2_pb2
+from caffe2.python import workspace, core
+import caffe2.python._import_c_extension as C
+
+def parse_args():
+    parser = argparse.ArgumentParser(description='benchmark net in caffe2')
+    parser.add_argument('--init_net', help='init net', type=str, required=True)
+    parser.add_argument('--pred_net', help='pred net', type=str, required=True)
+    parser.add_argument('--blob', type=str, required=True)
+    parser.add_argument('--cudnn', help='use cudnn', action='store_true', default=False)
+
+    if len(sys.argv) == 1:
+        parser.print_help()
+        sys.exit(1)
+
+    args = parser.parse_args()
+    return args
+
+def deviceOpts():
+    device_opts = caffe2_pb2.DeviceOption()
+    device_opts.device_type = caffe2_pb2.CUDA
+    device_opts.cuda_gpu_id = 3
+    return device_opts
+
+def initNet(init_net_path, device_opts):
+    init_def = caffe2_pb2.NetDef()
+    with open(init_net_path, 'r') as f:
+        init_def.ParseFromString(f.read())
+        init_def.device_option.CopyFrom(device_opts)
+        workspace.RunNetOnce(init_def)
+    return init_def
+
+def createNet(predict_net_path, device_opts, use_cudnn=False):
+    net_def = caffe2_pb2.NetDef()
+    dev = caffe2_pb2.DeviceOption()
+    dev.device_type = caffe2_pb2.CPU
+
+    global final_dev 
+    final_dev = device_opts
+    with open(predict_net_path, 'r') as f:
+        net_def.ParseFromString(f.read())
+        if use_cudnn:
+            for op in net_def.op:
+                if op.type == 'PriorBox':
+                    op.device_option.CopyFrom(final_dev)
+                elif op.type == 'Concat' and op.output[0] == 'mbox_priorbox':
+                    op.device_option.CopyFrom(dev)
+                elif op.type == 'Norm':
+                    op.device_option.CopyFrom(final_dev)
+                elif op.type == 'DetectionOutput':
+                    op.device_option.CopyFrom(final_dev)
+                else:
+                    op.device_option.CopyFrom(final_dev)
+                    op.engine = 'CUDNN'
+        workspace.CreateNet(net_def)
+    return net_def
+
+def main(args):
+    device_opts = deviceOpts()
+    init_def = initNet(args.init_net, device_opts)
+    net_def = createNet(args.pred_net, device_opts, use_cudnn=args.cudnn)
+    with open('./net.prototxt', 'w') as f:
+        f.write(str(net_def))
+    
+    caffe_data = np.load('./data.npy')
+    #caffe1_out = np.load('./{}.npy'.format(args.blob))
+    workspace.FeedBlob('data', caffe_data, final_dev)
+    start = time.time()
+    for i in range(1000):
+        workspace.RunNet(net_def.name, 1)
+    end = time.time()
+    print (end-start) / 1000
+
+    caffe2_out = workspace.FetchBlob(args.blob)
+    #print net_def
+    #print caffe1_out.shape, caffe2_out.shape
+    #print np.sum(np.abs(caffe1_out - caffe2_out))
+    #print np.allclose(caffe1_out, caffe2_out)
+    
+
+if __name__ == '__main__':
+    args = parse_args()
+    main(args)
diff --git a/caffe2/python/ssd_test/net.prototxt b/caffe2/python/ssd_test/net.prototxt
new file mode 100644
index 000000000..8b73fb000
--- /dev/null
+++ b/caffe2/python/ssd_test/net.prototxt
@@ -0,0 +1,2215 @@
+name: "VGG_VOC0712_SSD_300x300_ft_deploy"
+op {
+  input: "data"
+  input: "conv1_1_w"
+  input: "conv1_1_b"
+  output: "conv1_1"
+  type: "Conv"
+  arg {
+    name: "stride"
+    i: 1
+  }
+  arg {
+    name: "pad"
+    i: 1
+  }
+  arg {
+    name: "kernel"
+    i: 3
+  }
+  device_option {
+    device_type: 1
+    cuda_gpu_id: 3
+  }
+  engine: "CUDNN"
+}
+op {
+  input: "conv1_1"
+  output: "conv1_1"
+  type: "Relu"
+  device_option {
+    device_type: 1
+    cuda_gpu_id: 3
+  }
+  engine: "CUDNN"
+}
+op {
+  input: "conv1_1"
+  input: "conv1_2_w"
+  input: "conv1_2_b"
+  output: "conv1_2"
+  type: "Conv"
+  arg {
+    name: "stride"
+    i: 1
+  }
+  arg {
+    name: "pad"
+    i: 1
+  }
+  arg {
+    name: "kernel"
+    i: 3
+  }
+  device_option {
+    device_type: 1
+    cuda_gpu_id: 3
+  }
+  engine: "CUDNN"
+}
+op {
+  input: "conv1_2"
+  output: "conv1_2"
+  type: "Relu"
+  device_option {
+    device_type: 1
+    cuda_gpu_id: 3
+  }
+  engine: "CUDNN"
+}
+op {
+  input: "conv1_2"
+  output: "pool1"
+  type: "MaxPool"
+  arg {
+    name: "stride"
+    i: 2
+  }
+  arg {
+    name: "pad"
+    i: 0
+  }
+  arg {
+    name: "kernel"
+    i: 2
+  }
+  arg {
+    name: "order"
+    s: "NCHW"
+  }
+  arg {
+    name: "legacy_pad"
+    i: 3
+  }
+  device_option {
+    device_type: 1
+    cuda_gpu_id: 3
+  }
+  engine: "CUDNN"
+}
+op {
+  input: "pool1"
+  input: "conv2_1_w"
+  input: "conv2_1_b"
+  output: "conv2_1"
+  type: "Conv"
+  arg {
+    name: "stride"
+    i: 1
+  }
+  arg {
+    name: "pad"
+    i: 1
+  }
+  arg {
+    name: "kernel"
+    i: 3
+  }
+  device_option {
+    device_type: 1
+    cuda_gpu_id: 3
+  }
+  engine: "CUDNN"
+}
+op {
+  input: "conv2_1"
+  output: "conv2_1"
+  type: "Relu"
+  device_option {
+    device_type: 1
+    cuda_gpu_id: 3
+  }
+  engine: "CUDNN"
+}
+op {
+  input: "conv2_1"
+  input: "conv2_2_w"
+  input: "conv2_2_b"
+  output: "conv2_2"
+  type: "Conv"
+  arg {
+    name: "stride"
+    i: 1
+  }
+  arg {
+    name: "pad"
+    i: 1
+  }
+  arg {
+    name: "kernel"
+    i: 3
+  }
+  device_option {
+    device_type: 1
+    cuda_gpu_id: 3
+  }
+  engine: "CUDNN"
+}
+op {
+  input: "conv2_2"
+  output: "conv2_2"
+  type: "Relu"
+  device_option {
+    device_type: 1
+    cuda_gpu_id: 3
+  }
+  engine: "CUDNN"
+}
+op {
+  input: "conv2_2"
+  output: "pool2"
+  type: "MaxPool"
+  arg {
+    name: "stride"
+    i: 2
+  }
+  arg {
+    name: "pad"
+    i: 0
+  }
+  arg {
+    name: "kernel"
+    i: 2
+  }
+  arg {
+    name: "order"
+    s: "NCHW"
+  }
+  arg {
+    name: "legacy_pad"
+    i: 3
+  }
+  device_option {
+    device_type: 1
+    cuda_gpu_id: 3
+  }
+  engine: "CUDNN"
+}
+op {
+  input: "pool2"
+  input: "conv3_1_w"
+  input: "conv3_1_b"
+  output: "conv3_1"
+  type: "Conv"
+  arg {
+    name: "stride"
+    i: 1
+  }
+  arg {
+    name: "pad"
+    i: 1
+  }
+  arg {
+    name: "kernel"
+    i: 3
+  }
+  device_option {
+    device_type: 1
+    cuda_gpu_id: 3
+  }
+  engine: "CUDNN"
+}
+op {
+  input: "conv3_1"
+  output: "conv3_1"
+  type: "Relu"
+  device_option {
+    device_type: 1
+    cuda_gpu_id: 3
+  }
+  engine: "CUDNN"
+}
+op {
+  input: "conv3_1"
+  input: "conv3_2_w"
+  input: "conv3_2_b"
+  output: "conv3_2"
+  type: "Conv"
+  arg {
+    name: "stride"
+    i: 1
+  }
+  arg {
+    name: "pad"
+    i: 1
+  }
+  arg {
+    name: "kernel"
+    i: 3
+  }
+  device_option {
+    device_type: 1
+    cuda_gpu_id: 3
+  }
+  engine: "CUDNN"
+}
+op {
+  input: "conv3_2"
+  output: "conv3_2"
+  type: "Relu"
+  device_option {
+    device_type: 1
+    cuda_gpu_id: 3
+  }
+  engine: "CUDNN"
+}
+op {
+  input: "conv3_2"
+  input: "conv3_3_w"
+  input: "conv3_3_b"
+  output: "conv3_3"
+  type: "Conv"
+  arg {
+    name: "stride"
+    i: 1
+  }
+  arg {
+    name: "pad"
+    i: 1
+  }
+  arg {
+    name: "kernel"
+    i: 3
+  }
+  device_option {
+    device_type: 1
+    cuda_gpu_id: 3
+  }
+  engine: "CUDNN"
+}
+op {
+  input: "conv3_3"
+  output: "conv3_3"
+  type: "Relu"
+  device_option {
+    device_type: 1
+    cuda_gpu_id: 3
+  }
+  engine: "CUDNN"
+}
+op {
+  input: "conv3_3"
+  output: "pool3"
+  type: "MaxPool"
+  arg {
+    name: "stride"
+    i: 2
+  }
+  arg {
+    name: "pad"
+    i: 0
+  }
+  arg {
+    name: "kernel"
+    i: 2
+  }
+  arg {
+    name: "order"
+    s: "NCHW"
+  }
+  arg {
+    name: "legacy_pad"
+    i: 3
+  }
+  device_option {
+    device_type: 1
+    cuda_gpu_id: 3
+  }
+  engine: "CUDNN"
+}
+op {
+  input: "pool3"
+  input: "conv4_1_w"
+  input: "conv4_1_b"
+  output: "conv4_1"
+  type: "Conv"
+  arg {
+    name: "stride"
+    i: 1
+  }
+  arg {
+    name: "pad"
+    i: 1
+  }
+  arg {
+    name: "kernel"
+    i: 3
+  }
+  device_option {
+    device_type: 1
+    cuda_gpu_id: 3
+  }
+  engine: "CUDNN"
+}
+op {
+  input: "conv4_1"
+  output: "conv4_1"
+  type: "Relu"
+  device_option {
+    device_type: 1
+    cuda_gpu_id: 3
+  }
+  engine: "CUDNN"
+}
+op {
+  input: "conv4_1"
+  input: "conv4_2_w"
+  input: "conv4_2_b"
+  output: "conv4_2"
+  type: "Conv"
+  arg {
+    name: "stride"
+    i: 1
+  }
+  arg {
+    name: "pad"
+    i: 1
+  }
+  arg {
+    name: "kernel"
+    i: 3
+  }
+  device_option {
+    device_type: 1
+    cuda_gpu_id: 3
+  }
+  engine: "CUDNN"
+}
+op {
+  input: "conv4_2"
+  output: "conv4_2"
+  type: "Relu"
+  device_option {
+    device_type: 1
+    cuda_gpu_id: 3
+  }
+  engine: "CUDNN"
+}
+op {
+  input: "conv4_2"
+  input: "conv4_3_w"
+  input: "conv4_3_b"
+  output: "conv4_3"
+  type: "Conv"
+  arg {
+    name: "stride"
+    i: 1
+  }
+  arg {
+    name: "pad"
+    i: 1
+  }
+  arg {
+    name: "kernel"
+    i: 3
+  }
+  device_option {
+    device_type: 1
+    cuda_gpu_id: 3
+  }
+  engine: "CUDNN"
+}
+op {
+  input: "conv4_3"
+  output: "conv4_3"
+  type: "Relu"
+  device_option {
+    device_type: 1
+    cuda_gpu_id: 3
+  }
+  engine: "CUDNN"
+}
+op {
+  input: "conv4_3"
+  output: "pool4"
+  type: "MaxPool"
+  arg {
+    name: "stride"
+    i: 2
+  }
+  arg {
+    name: "pad"
+    i: 0
+  }
+  arg {
+    name: "kernel"
+    i: 2
+  }
+  arg {
+    name: "order"
+    s: "NCHW"
+  }
+  arg {
+    name: "legacy_pad"
+    i: 3
+  }
+  device_option {
+    device_type: 1
+    cuda_gpu_id: 3
+  }
+  engine: "CUDNN"
+}
+op {
+  input: "pool4"
+  input: "conv5_1_w"
+  input: "conv5_1_b"
+  output: "conv5_1"
+  type: "Conv"
+  arg {
+    name: "stride"
+    i: 1
+  }
+  arg {
+    name: "pad"
+    i: 1
+  }
+  arg {
+    name: "kernel"
+    i: 3
+  }
+  device_option {
+    device_type: 1
+    cuda_gpu_id: 3
+  }
+  engine: "CUDNN"
+}
+op {
+  input: "conv5_1"
+  output: "conv5_1"
+  type: "Relu"
+  device_option {
+    device_type: 1
+    cuda_gpu_id: 3
+  }
+  engine: "CUDNN"
+}
+op {
+  input: "conv5_1"
+  input: "conv5_2_w"
+  input: "conv5_2_b"
+  output: "conv5_2"
+  type: "Conv"
+  arg {
+    name: "stride"
+    i: 1
+  }
+  arg {
+    name: "pad"
+    i: 1
+  }
+  arg {
+    name: "kernel"
+    i: 3
+  }
+  device_option {
+    device_type: 1
+    cuda_gpu_id: 3
+  }
+  engine: "CUDNN"
+}
+op {
+  input: "conv5_2"
+  output: "conv5_2"
+  type: "Relu"
+  device_option {
+    device_type: 1
+    cuda_gpu_id: 3
+  }
+  engine: "CUDNN"
+}
+op {
+  input: "conv5_2"
+  input: "conv5_3_w"
+  input: "conv5_3_b"
+  output: "conv5_3"
+  type: "Conv"
+  arg {
+    name: "stride"
+    i: 1
+  }
+  arg {
+    name: "pad"
+    i: 1
+  }
+  arg {
+    name: "kernel"
+    i: 3
+  }
+  device_option {
+    device_type: 1
+    cuda_gpu_id: 3
+  }
+  engine: "CUDNN"
+}
+op {
+  input: "conv5_3"
+  output: "conv5_3"
+  type: "Relu"
+  device_option {
+    device_type: 1
+    cuda_gpu_id: 3
+  }
+  engine: "CUDNN"
+}
+op {
+  input: "conv5_3"
+  output: "pool5"
+  type: "MaxPool"
+  arg {
+    name: "stride"
+    i: 1
+  }
+  arg {
+    name: "pad"
+    i: 1
+  }
+  arg {
+    name: "kernel"
+    i: 3
+  }
+  arg {
+    name: "order"
+    s: "NCHW"
+  }
+  arg {
+    name: "legacy_pad"
+    i: 3
+  }
+  device_option {
+    device_type: 1
+    cuda_gpu_id: 3
+  }
+  engine: "CUDNN"
+}
+op {
+  input: "pool5"
+  input: "fc6_w"
+  input: "fc6_b"
+  output: "fc6"
+  type: "Conv"
+  arg {
+    name: "stride"
+    i: 1
+  }
+  arg {
+    name: "pad"
+    i: 6
+  }
+  arg {
+    name: "kernel"
+    i: 3
+  }
+  arg {
+    name: "dilation"
+    i: 6
+  }
+  device_option {
+    device_type: 1
+    cuda_gpu_id: 3
+  }
+  engine: "CUDNN"
+}
+op {
+  input: "fc6"
+  output: "fc6"
+  type: "Relu"
+  device_option {
+    device_type: 1
+    cuda_gpu_id: 3
+  }
+  engine: "CUDNN"
+}
+op {
+  input: "fc6"
+  input: "fc7_w"
+  input: "fc7_b"
+  output: "fc7"
+  type: "Conv"
+  arg {
+    name: "stride"
+    i: 1
+  }
+  arg {
+    name: "pad"
+    i: 0
+  }
+  arg {
+    name: "kernel"
+    i: 1
+  }
+  device_option {
+    device_type: 1
+    cuda_gpu_id: 3
+  }
+  engine: "CUDNN"
+}
+op {
+  input: "fc7"
+  output: "fc7"
+  type: "Relu"
+  device_option {
+    device_type: 1
+    cuda_gpu_id: 3
+  }
+  engine: "CUDNN"
+}
+op {
+  input: "fc7"
+  input: "conv6_1_w"
+  input: "conv6_1_b"
+  output: "conv6_1"
+  type: "Conv"
+  arg {
+    name: "stride"
+    i: 1
+  }
+  arg {
+    name: "pad"
+    i: 0
+  }
+  arg {
+    name: "kernel"
+    i: 1
+  }
+  device_option {
+    device_type: 1
+    cuda_gpu_id: 3
+  }
+  engine: "CUDNN"
+}
+op {
+  input: "conv6_1"
+  output: "conv6_1"
+  type: "Relu"
+  device_option {
+    device_type: 1
+    cuda_gpu_id: 3
+  }
+  engine: "CUDNN"
+}
+op {
+  input: "conv6_1"
+  input: "conv6_2_w"
+  input: "conv6_2_b"
+  output: "conv6_2"
+  type: "Conv"
+  arg {
+    name: "stride"
+    i: 2
+  }
+  arg {
+    name: "pad"
+    i: 1
+  }
+  arg {
+    name: "kernel"
+    i: 3
+  }
+  device_option {
+    device_type: 1
+    cuda_gpu_id: 3
+  }
+  engine: "CUDNN"
+}
+op {
+  input: "conv6_2"
+  output: "conv6_2"
+  type: "Relu"
+  device_option {
+    device_type: 1
+    cuda_gpu_id: 3
+  }
+  engine: "CUDNN"
+}
+op {
+  input: "conv6_2"
+  input: "conv7_1_w"
+  input: "conv7_1_b"
+  output: "conv7_1"
+  type: "Conv"
+  arg {
+    name: "stride"
+    i: 1
+  }
+  arg {
+    name: "pad"
+    i: 0
+  }
+  arg {
+    name: "kernel"
+    i: 1
+  }
+  device_option {
+    device_type: 1
+    cuda_gpu_id: 3
+  }
+  engine: "CUDNN"
+}
+op {
+  input: "conv7_1"
+  output: "conv7_1"
+  type: "Relu"
+  device_option {
+    device_type: 1
+    cuda_gpu_id: 3
+  }
+  engine: "CUDNN"
+}
+op {
+  input: "conv7_1"
+  input: "conv7_2_w"
+  input: "conv7_2_b"
+  output: "conv7_2"
+  type: "Conv"
+  arg {
+    name: "stride"
+    i: 2
+  }
+  arg {
+    name: "pad"
+    i: 1
+  }
+  arg {
+    name: "kernel"
+    i: 3
+  }
+  device_option {
+    device_type: 1
+    cuda_gpu_id: 3
+  }
+  engine: "CUDNN"
+}
+op {
+  input: "conv7_2"
+  output: "conv7_2"
+  type: "Relu"
+  device_option {
+    device_type: 1
+    cuda_gpu_id: 3
+  }
+  engine: "CUDNN"
+}
+op {
+  input: "conv7_2"
+  input: "conv8_1_w"
+  input: "conv8_1_b"
+  output: "conv8_1"
+  type: "Conv"
+  arg {
+    name: "stride"
+    i: 1
+  }
+  arg {
+    name: "pad"
+    i: 0
+  }
+  arg {
+    name: "kernel"
+    i: 1
+  }
+  device_option {
+    device_type: 1
+    cuda_gpu_id: 3
+  }
+  engine: "CUDNN"
+}
+op {
+  input: "conv8_1"
+  output: "conv8_1"
+  type: "Relu"
+  device_option {
+    device_type: 1
+    cuda_gpu_id: 3
+  }
+  engine: "CUDNN"
+}
+op {
+  input: "conv8_1"
+  input: "conv8_2_w"
+  input: "conv8_2_b"
+  output: "conv8_2"
+  type: "Conv"
+  arg {
+    name: "stride"
+    i: 1
+  }
+  arg {
+    name: "pad"
+    i: 0
+  }
+  arg {
+    name: "kernel"
+    i: 3
+  }
+  device_option {
+    device_type: 1
+    cuda_gpu_id: 3
+  }
+  engine: "CUDNN"
+}
+op {
+  input: "conv8_2"
+  output: "conv8_2"
+  type: "Relu"
+  device_option {
+    device_type: 1
+    cuda_gpu_id: 3
+  }
+  engine: "CUDNN"
+}
+op {
+  input: "conv8_2"
+  input: "conv9_1_w"
+  input: "conv9_1_b"
+  output: "conv9_1"
+  type: "Conv"
+  arg {
+    name: "stride"
+    i: 1
+  }
+  arg {
+    name: "pad"
+    i: 0
+  }
+  arg {
+    name: "kernel"
+    i: 1
+  }
+  device_option {
+    device_type: 1
+    cuda_gpu_id: 3
+  }
+  engine: "CUDNN"
+}
+op {
+  input: "conv9_1"
+  output: "conv9_1"
+  type: "Relu"
+  device_option {
+    device_type: 1
+    cuda_gpu_id: 3
+  }
+  engine: "CUDNN"
+}
+op {
+  input: "conv9_1"
+  input: "conv9_2_w"
+  input: "conv9_2_b"
+  output: "conv9_2"
+  type: "Conv"
+  arg {
+    name: "stride"
+    i: 1
+  }
+  arg {
+    name: "pad"
+    i: 0
+  }
+  arg {
+    name: "kernel"
+    i: 3
+  }
+  device_option {
+    device_type: 1
+    cuda_gpu_id: 3
+  }
+  engine: "CUDNN"
+}
+op {
+  input: "conv9_2"
+  output: "conv9_2"
+  type: "Relu"
+  device_option {
+    device_type: 1
+    cuda_gpu_id: 3
+  }
+  engine: "CUDNN"
+}
+op {
+  input: "conv4_3"
+  input: "conv4_3_norm_scale"
+  output: "conv4_3_norm"
+  type: "Norm"
+  arg {
+    name: "across_spatial"
+    i: 0
+  }
+  arg {
+    name: "eps"
+    f: 1.00000001335e-10
+  }
+  arg {
+    name: "channel_shared"
+    i: 0
+  }
+  arg {
+    name: "order"
+    s: "NCHW"
+  }
+  device_option {
+    device_type: 1
+    cuda_gpu_id: 3
+  }
+}
+op {
+  input: "conv4_3_norm"
+  input: "conv4_3_norm_mbox_loc_w"
+  input: "conv4_3_norm_mbox_loc_b"
+  output: "conv4_3_norm_mbox_loc"
+  type: "Conv"
+  arg {
+    name: "stride"
+    i: 1
+  }
+  arg {
+    name: "pad"
+    i: 1
+  }
+  arg {
+    name: "kernel"
+    i: 3
+  }
+  device_option {
+    device_type: 1
+    cuda_gpu_id: 3
+  }
+  engine: "CUDNN"
+}
+op {
+  input: "conv4_3_norm_mbox_loc"
+  output: "conv4_3_norm_mbox_loc_perm"
+  type: "Transpose"
+  arg {
+    name: "axes"
+    ints: 0
+    ints: 2
+    ints: 3
+    ints: 1
+  }
+  device_option {
+    device_type: 1
+    cuda_gpu_id: 3
+  }
+  engine: "CUDNN"
+}
+op {
+  input: "conv4_3_norm_mbox_loc_perm"
+  output: "conv4_3_norm_mbox_loc_flat"
+  type: "Flatten"
+  device_option {
+    device_type: 1
+    cuda_gpu_id: 3
+  }
+  engine: "CUDNN"
+}
+op {
+  input: "conv4_3_norm"
+  input: "conv4_3_norm_mbox_conf_w"
+  input: "conv4_3_norm_mbox_conf_b"
+  output: "conv4_3_norm_mbox_conf"
+  type: "Conv"
+  arg {
+    name: "stride"
+    i: 1
+  }
+  arg {
+    name: "pad"
+    i: 1
+  }
+  arg {
+    name: "kernel"
+    i: 3
+  }
+  device_option {
+    device_type: 1
+    cuda_gpu_id: 3
+  }
+  engine: "CUDNN"
+}
+op {
+  input: "conv4_3_norm_mbox_conf"
+  output: "conv4_3_norm_mbox_conf_perm"
+  type: "Transpose"
+  arg {
+    name: "axes"
+    ints: 0
+    ints: 2
+    ints: 3
+    ints: 1
+  }
+  device_option {
+    device_type: 1
+    cuda_gpu_id: 3
+  }
+  engine: "CUDNN"
+}
+op {
+  input: "conv4_3_norm_mbox_conf_perm"
+  output: "conv4_3_norm_mbox_conf_flat"
+  type: "Flatten"
+  device_option {
+    device_type: 1
+    cuda_gpu_id: 3
+  }
+  engine: "CUDNN"
+}
+op {
+  input: "conv4_3_norm"
+  input: "data"
+  output: "conv4_3_norm_mbox_priorbox"
+  type: "PriorBox"
+  arg {
+    name: "min_sizes"
+    floats: 21.0
+  }
+  arg {
+    name: "max_sizes"
+    floats: 45.0
+  }
+  arg {
+    name: "aspect_ratios"
+    floats: 2.0
+  }
+  arg {
+    name: "flip"
+    i: 1
+  }
+  arg {
+    name: "clip"
+    i: 0
+  }
+  arg {
+    name: "variance"
+    floats: 0.10000000149
+    floats: 0.10000000149
+    floats: 0.20000000298
+    floats: 0.20000000298
+  }
+  arg {
+    name: "img_size"
+    i: 0
+  }
+  arg {
+    name: "img_w"
+    i: 0
+  }
+  arg {
+    name: "img_h"
+    i: 0
+  }
+  arg {
+    name: "step"
+    f: 8.0
+  }
+  arg {
+    name: "step_h"
+    f: 0.0
+  }
+  arg {
+    name: "step_w"
+    f: 0.0
+  }
+  arg {
+    name: "offset"
+    f: 0.5
+  }
+  arg {
+    name: "order"
+    s: "NCHW"
+  }
+  device_option {
+    device_type: 1
+    cuda_gpu_id: 3
+  }
+}
+op {
+  input: "fc7"
+  input: "fc7_mbox_loc_w"
+  input: "fc7_mbox_loc_b"
+  output: "fc7_mbox_loc"
+  type: "Conv"
+  arg {
+    name: "stride"
+    i: 1
+  }
+  arg {
+    name: "pad"
+    i: 1
+  }
+  arg {
+    name: "kernel"
+    i: 3
+  }
+  device_option {
+    device_type: 1
+    cuda_gpu_id: 3
+  }
+  engine: "CUDNN"
+}
+op {
+  input: "fc7_mbox_loc"
+  output: "fc7_mbox_loc_perm"
+  type: "Transpose"
+  arg {
+    name: "axes"
+    ints: 0
+    ints: 2
+    ints: 3
+    ints: 1
+  }
+  device_option {
+    device_type: 1
+    cuda_gpu_id: 3
+  }
+  engine: "CUDNN"
+}
+op {
+  input: "fc7_mbox_loc_perm"
+  output: "fc7_mbox_loc_flat"
+  type: "Flatten"
+  device_option {
+    device_type: 1
+    cuda_gpu_id: 3
+  }
+  engine: "CUDNN"
+}
+op {
+  input: "fc7"
+  input: "fc7_mbox_conf_w"
+  input: "fc7_mbox_conf_b"
+  output: "fc7_mbox_conf"
+  type: "Conv"
+  arg {
+    name: "stride"
+    i: 1
+  }
+  arg {
+    name: "pad"
+    i: 1
+  }
+  arg {
+    name: "kernel"
+    i: 3
+  }
+  device_option {
+    device_type: 1
+    cuda_gpu_id: 3
+  }
+  engine: "CUDNN"
+}
+op {
+  input: "fc7_mbox_conf"
+  output: "fc7_mbox_conf_perm"
+  type: "Transpose"
+  arg {
+    name: "axes"
+    ints: 0
+    ints: 2
+    ints: 3
+    ints: 1
+  }
+  device_option {
+    device_type: 1
+    cuda_gpu_id: 3
+  }
+  engine: "CUDNN"
+}
+op {
+  input: "fc7_mbox_conf_perm"
+  output: "fc7_mbox_conf_flat"
+  type: "Flatten"
+  device_option {
+    device_type: 1
+    cuda_gpu_id: 3
+  }
+  engine: "CUDNN"
+}
+op {
+  input: "fc7"
+  input: "data"
+  output: "fc7_mbox_priorbox"
+  type: "PriorBox"
+  arg {
+    name: "min_sizes"
+    floats: 45.0
+  }
+  arg {
+    name: "max_sizes"
+    floats: 99.0
+  }
+  arg {
+    name: "aspect_ratios"
+    floats: 2.0
+    floats: 3.0
+  }
+  arg {
+    name: "flip"
+    i: 1
+  }
+  arg {
+    name: "clip"
+    i: 0
+  }
+  arg {
+    name: "variance"
+    floats: 0.10000000149
+    floats: 0.10000000149
+    floats: 0.20000000298
+    floats: 0.20000000298
+  }
+  arg {
+    name: "img_size"
+    i: 0
+  }
+  arg {
+    name: "img_w"
+    i: 0
+  }
+  arg {
+    name: "img_h"
+    i: 0
+  }
+  arg {
+    name: "step"
+    f: 16.0
+  }
+  arg {
+    name: "step_h"
+    f: 0.0
+  }
+  arg {
+    name: "step_w"
+    f: 0.0
+  }
+  arg {
+    name: "offset"
+    f: 0.5
+  }
+  arg {
+    name: "order"
+    s: "NCHW"
+  }
+  device_option {
+    device_type: 1
+    cuda_gpu_id: 3
+  }
+}
+op {
+  input: "conv6_2"
+  input: "conv6_2_mbox_loc_w"
+  input: "conv6_2_mbox_loc_b"
+  output: "conv6_2_mbox_loc"
+  type: "Conv"
+  arg {
+    name: "stride"
+    i: 1
+  }
+  arg {
+    name: "pad"
+    i: 1
+  }
+  arg {
+    name: "kernel"
+    i: 3
+  }
+  device_option {
+    device_type: 1
+    cuda_gpu_id: 3
+  }
+  engine: "CUDNN"
+}
+op {
+  input: "conv6_2_mbox_loc"
+  output: "conv6_2_mbox_loc_perm"
+  type: "Transpose"
+  arg {
+    name: "axes"
+    ints: 0
+    ints: 2
+    ints: 3
+    ints: 1
+  }
+  device_option {
+    device_type: 1
+    cuda_gpu_id: 3
+  }
+  engine: "CUDNN"
+}
+op {
+  input: "conv6_2_mbox_loc_perm"
+  output: "conv6_2_mbox_loc_flat"
+  type: "Flatten"
+  device_option {
+    device_type: 1
+    cuda_gpu_id: 3
+  }
+  engine: "CUDNN"
+}
+op {
+  input: "conv6_2"
+  input: "conv6_2_mbox_conf_w"
+  input: "conv6_2_mbox_conf_b"
+  output: "conv6_2_mbox_conf"
+  type: "Conv"
+  arg {
+    name: "stride"
+    i: 1
+  }
+  arg {
+    name: "pad"
+    i: 1
+  }
+  arg {
+    name: "kernel"
+    i: 3
+  }
+  device_option {
+    device_type: 1
+    cuda_gpu_id: 3
+  }
+  engine: "CUDNN"
+}
+op {
+  input: "conv6_2_mbox_conf"
+  output: "conv6_2_mbox_conf_perm"
+  type: "Transpose"
+  arg {
+    name: "axes"
+    ints: 0
+    ints: 2
+    ints: 3
+    ints: 1
+  }
+  device_option {
+    device_type: 1
+    cuda_gpu_id: 3
+  }
+  engine: "CUDNN"
+}
+op {
+  input: "conv6_2_mbox_conf_perm"
+  output: "conv6_2_mbox_conf_flat"
+  type: "Flatten"
+  device_option {
+    device_type: 1
+    cuda_gpu_id: 3
+  }
+  engine: "CUDNN"
+}
+op {
+  input: "conv6_2"
+  input: "data"
+  output: "conv6_2_mbox_priorbox"
+  type: "PriorBox"
+  arg {
+    name: "min_sizes"
+    floats: 99.0
+  }
+  arg {
+    name: "max_sizes"
+    floats: 153.0
+  }
+  arg {
+    name: "aspect_ratios"
+    floats: 2.0
+    floats: 3.0
+  }
+  arg {
+    name: "flip"
+    i: 1
+  }
+  arg {
+    name: "clip"
+    i: 0
+  }
+  arg {
+    name: "variance"
+    floats: 0.10000000149
+    floats: 0.10000000149
+    floats: 0.20000000298
+    floats: 0.20000000298
+  }
+  arg {
+    name: "img_size"
+    i: 0
+  }
+  arg {
+    name: "img_w"
+    i: 0
+  }
+  arg {
+    name: "img_h"
+    i: 0
+  }
+  arg {
+    name: "step"
+    f: 32.0
+  }
+  arg {
+    name: "step_h"
+    f: 0.0
+  }
+  arg {
+    name: "step_w"
+    f: 0.0
+  }
+  arg {
+    name: "offset"
+    f: 0.5
+  }
+  arg {
+    name: "order"
+    s: "NCHW"
+  }
+  device_option {
+    device_type: 1
+    cuda_gpu_id: 3
+  }
+}
+op {
+  input: "conv7_2"
+  input: "conv7_2_mbox_loc_w"
+  input: "conv7_2_mbox_loc_b"
+  output: "conv7_2_mbox_loc"
+  type: "Conv"
+  arg {
+    name: "stride"
+    i: 1
+  }
+  arg {
+    name: "pad"
+    i: 1
+  }
+  arg {
+    name: "kernel"
+    i: 3
+  }
+  device_option {
+    device_type: 1
+    cuda_gpu_id: 3
+  }
+  engine: "CUDNN"
+}
+op {
+  input: "conv7_2_mbox_loc"
+  output: "conv7_2_mbox_loc_perm"
+  type: "Transpose"
+  arg {
+    name: "axes"
+    ints: 0
+    ints: 2
+    ints: 3
+    ints: 1
+  }
+  device_option {
+    device_type: 1
+    cuda_gpu_id: 3
+  }
+  engine: "CUDNN"
+}
+op {
+  input: "conv7_2_mbox_loc_perm"
+  output: "conv7_2_mbox_loc_flat"
+  type: "Flatten"
+  device_option {
+    device_type: 1
+    cuda_gpu_id: 3
+  }
+  engine: "CUDNN"
+}
+op {
+  input: "conv7_2"
+  input: "conv7_2_mbox_conf_w"
+  input: "conv7_2_mbox_conf_b"
+  output: "conv7_2_mbox_conf"
+  type: "Conv"
+  arg {
+    name: "stride"
+    i: 1
+  }
+  arg {
+    name: "pad"
+    i: 1
+  }
+  arg {
+    name: "kernel"
+    i: 3
+  }
+  device_option {
+    device_type: 1
+    cuda_gpu_id: 3
+  }
+  engine: "CUDNN"
+}
+op {
+  input: "conv7_2_mbox_conf"
+  output: "conv7_2_mbox_conf_perm"
+  type: "Transpose"
+  arg {
+    name: "axes"
+    ints: 0
+    ints: 2
+    ints: 3
+    ints: 1
+  }
+  device_option {
+    device_type: 1
+    cuda_gpu_id: 3
+  }
+  engine: "CUDNN"
+}
+op {
+  input: "conv7_2_mbox_conf_perm"
+  output: "conv7_2_mbox_conf_flat"
+  type: "Flatten"
+  device_option {
+    device_type: 1
+    cuda_gpu_id: 3
+  }
+  engine: "CUDNN"
+}
+op {
+  input: "conv7_2"
+  input: "data"
+  output: "conv7_2_mbox_priorbox"
+  type: "PriorBox"
+  arg {
+    name: "min_sizes"
+    floats: 153.0
+  }
+  arg {
+    name: "max_sizes"
+    floats: 207.0
+  }
+  arg {
+    name: "aspect_ratios"
+    floats: 2.0
+    floats: 3.0
+  }
+  arg {
+    name: "flip"
+    i: 1
+  }
+  arg {
+    name: "clip"
+    i: 0
+  }
+  arg {
+    name: "variance"
+    floats: 0.10000000149
+    floats: 0.10000000149
+    floats: 0.20000000298
+    floats: 0.20000000298
+  }
+  arg {
+    name: "img_size"
+    i: 0
+  }
+  arg {
+    name: "img_w"
+    i: 0
+  }
+  arg {
+    name: "img_h"
+    i: 0
+  }
+  arg {
+    name: "step"
+    f: 64.0
+  }
+  arg {
+    name: "step_h"
+    f: 0.0
+  }
+  arg {
+    name: "step_w"
+    f: 0.0
+  }
+  arg {
+    name: "offset"
+    f: 0.5
+  }
+  arg {
+    name: "order"
+    s: "NCHW"
+  }
+  device_option {
+    device_type: 1
+    cuda_gpu_id: 3
+  }
+}
+op {
+  input: "conv8_2"
+  input: "conv8_2_mbox_loc_w"
+  input: "conv8_2_mbox_loc_b"
+  output: "conv8_2_mbox_loc"
+  type: "Conv"
+  arg {
+    name: "stride"
+    i: 1
+  }
+  arg {
+    name: "pad"
+    i: 1
+  }
+  arg {
+    name: "kernel"
+    i: 3
+  }
+  device_option {
+    device_type: 1
+    cuda_gpu_id: 3
+  }
+  engine: "CUDNN"
+}
+op {
+  input: "conv8_2_mbox_loc"
+  output: "conv8_2_mbox_loc_perm"
+  type: "Transpose"
+  arg {
+    name: "axes"
+    ints: 0
+    ints: 2
+    ints: 3
+    ints: 1
+  }
+  device_option {
+    device_type: 1
+    cuda_gpu_id: 3
+  }
+  engine: "CUDNN"
+}
+op {
+  input: "conv8_2_mbox_loc_perm"
+  output: "conv8_2_mbox_loc_flat"
+  type: "Flatten"
+  device_option {
+    device_type: 1
+    cuda_gpu_id: 3
+  }
+  engine: "CUDNN"
+}
+op {
+  input: "conv8_2"
+  input: "conv8_2_mbox_conf_w"
+  input: "conv8_2_mbox_conf_b"
+  output: "conv8_2_mbox_conf"
+  type: "Conv"
+  arg {
+    name: "stride"
+    i: 1
+  }
+  arg {
+    name: "pad"
+    i: 1
+  }
+  arg {
+    name: "kernel"
+    i: 3
+  }
+  device_option {
+    device_type: 1
+    cuda_gpu_id: 3
+  }
+  engine: "CUDNN"
+}
+op {
+  input: "conv8_2_mbox_conf"
+  output: "conv8_2_mbox_conf_perm"
+  type: "Transpose"
+  arg {
+    name: "axes"
+    ints: 0
+    ints: 2
+    ints: 3
+    ints: 1
+  }
+  device_option {
+    device_type: 1
+    cuda_gpu_id: 3
+  }
+  engine: "CUDNN"
+}
+op {
+  input: "conv8_2_mbox_conf_perm"
+  output: "conv8_2_mbox_conf_flat"
+  type: "Flatten"
+  device_option {
+    device_type: 1
+    cuda_gpu_id: 3
+  }
+  engine: "CUDNN"
+}
+op {
+  input: "conv8_2"
+  input: "data"
+  output: "conv8_2_mbox_priorbox"
+  type: "PriorBox"
+  arg {
+    name: "min_sizes"
+    floats: 207.0
+  }
+  arg {
+    name: "max_sizes"
+    floats: 261.0
+  }
+  arg {
+    name: "aspect_ratios"
+    floats: 2.0
+  }
+  arg {
+    name: "flip"
+    i: 1
+  }
+  arg {
+    name: "clip"
+    i: 0
+  }
+  arg {
+    name: "variance"
+    floats: 0.10000000149
+    floats: 0.10000000149
+    floats: 0.20000000298
+    floats: 0.20000000298
+  }
+  arg {
+    name: "img_size"
+    i: 0
+  }
+  arg {
+    name: "img_w"
+    i: 0
+  }
+  arg {
+    name: "img_h"
+    i: 0
+  }
+  arg {
+    name: "step"
+    f: 100.0
+  }
+  arg {
+    name: "step_h"
+    f: 0.0
+  }
+  arg {
+    name: "step_w"
+    f: 0.0
+  }
+  arg {
+    name: "offset"
+    f: 0.5
+  }
+  arg {
+    name: "order"
+    s: "NCHW"
+  }
+  device_option {
+    device_type: 1
+    cuda_gpu_id: 3
+  }
+}
+op {
+  input: "conv9_2"
+  input: "conv9_2_mbox_loc_w"
+  input: "conv9_2_mbox_loc_b"
+  output: "conv9_2_mbox_loc"
+  type: "Conv"
+  arg {
+    name: "stride"
+    i: 1
+  }
+  arg {
+    name: "pad"
+    i: 1
+  }
+  arg {
+    name: "kernel"
+    i: 3
+  }
+  device_option {
+    device_type: 1
+    cuda_gpu_id: 3
+  }
+  engine: "CUDNN"
+}
+op {
+  input: "conv9_2_mbox_loc"
+  output: "conv9_2_mbox_loc_perm"
+  type: "Transpose"
+  arg {
+    name: "axes"
+    ints: 0
+    ints: 2
+    ints: 3
+    ints: 1
+  }
+  device_option {
+    device_type: 1
+    cuda_gpu_id: 3
+  }
+  engine: "CUDNN"
+}
+op {
+  input: "conv9_2_mbox_loc_perm"
+  output: "conv9_2_mbox_loc_flat"
+  type: "Flatten"
+  device_option {
+    device_type: 1
+    cuda_gpu_id: 3
+  }
+  engine: "CUDNN"
+}
+op {
+  input: "conv9_2"
+  input: "conv9_2_mbox_conf_w"
+  input: "conv9_2_mbox_conf_b"
+  output: "conv9_2_mbox_conf"
+  type: "Conv"
+  arg {
+    name: "stride"
+    i: 1
+  }
+  arg {
+    name: "pad"
+    i: 1
+  }
+  arg {
+    name: "kernel"
+    i: 3
+  }
+  device_option {
+    device_type: 1
+    cuda_gpu_id: 3
+  }
+  engine: "CUDNN"
+}
+op {
+  input: "conv9_2_mbox_conf"
+  output: "conv9_2_mbox_conf_perm"
+  type: "Transpose"
+  arg {
+    name: "axes"
+    ints: 0
+    ints: 2
+    ints: 3
+    ints: 1
+  }
+  device_option {
+    device_type: 1
+    cuda_gpu_id: 3
+  }
+  engine: "CUDNN"
+}
+op {
+  input: "conv9_2_mbox_conf_perm"
+  output: "conv9_2_mbox_conf_flat"
+  type: "Flatten"
+  device_option {
+    device_type: 1
+    cuda_gpu_id: 3
+  }
+  engine: "CUDNN"
+}
+op {
+  input: "conv9_2"
+  input: "data"
+  output: "conv9_2_mbox_priorbox"
+  type: "PriorBox"
+  arg {
+    name: "min_sizes"
+    floats: 261.0
+  }
+  arg {
+    name: "max_sizes"
+    floats: 315.0
+  }
+  arg {
+    name: "aspect_ratios"
+    floats: 2.0
+  }
+  arg {
+    name: "flip"
+    i: 1
+  }
+  arg {
+    name: "clip"
+    i: 0
+  }
+  arg {
+    name: "variance"
+    floats: 0.10000000149
+    floats: 0.10000000149
+    floats: 0.20000000298
+    floats: 0.20000000298
+  }
+  arg {
+    name: "img_size"
+    i: 0
+  }
+  arg {
+    name: "img_w"
+    i: 0
+  }
+  arg {
+    name: "img_h"
+    i: 0
+  }
+  arg {
+    name: "step"
+    f: 300.0
+  }
+  arg {
+    name: "step_h"
+    f: 0.0
+  }
+  arg {
+    name: "step_w"
+    f: 0.0
+  }
+  arg {
+    name: "offset"
+    f: 0.5
+  }
+  arg {
+    name: "order"
+    s: "NCHW"
+  }
+  device_option {
+    device_type: 1
+    cuda_gpu_id: 3
+  }
+}
+op {
+  input: "conv4_3_norm_mbox_loc_flat"
+  input: "fc7_mbox_loc_flat"
+  input: "conv6_2_mbox_loc_flat"
+  input: "conv7_2_mbox_loc_flat"
+  input: "conv8_2_mbox_loc_flat"
+  input: "conv9_2_mbox_loc_flat"
+  output: "mbox_loc"
+  output: "_mbox_loc_dims"
+  type: "Concat"
+  arg {
+    name: "axis"
+    i: 1
+  }
+  device_option {
+    device_type: 1
+    cuda_gpu_id: 3
+  }
+  engine: "CUDNN"
+}
+op {
+  input: "conv4_3_norm_mbox_conf_flat"
+  input: "fc7_mbox_conf_flat"
+  input: "conv6_2_mbox_conf_flat"
+  input: "conv7_2_mbox_conf_flat"
+  input: "conv8_2_mbox_conf_flat"
+  input: "conv9_2_mbox_conf_flat"
+  output: "mbox_conf"
+  output: "_mbox_conf_dims"
+  type: "Concat"
+  arg {
+    name: "axis"
+    i: 1
+  }
+  device_option {
+    device_type: 1
+    cuda_gpu_id: 3
+  }
+  engine: "CUDNN"
+}
+op {
+  input: "conv4_3_norm_mbox_priorbox"
+  input: "fc7_mbox_priorbox"
+  input: "conv6_2_mbox_priorbox"
+  input: "conv7_2_mbox_priorbox"
+  input: "conv8_2_mbox_priorbox"
+  input: "conv9_2_mbox_priorbox"
+  output: "mbox_priorbox"
+  output: "_mbox_priorbox_dims"
+  type: "Concat"
+  arg {
+    name: "axis"
+    i: 2
+  }
+  device_option {
+    device_type: 0
+  }
+}
+op {
+  input: "mbox_conf"
+  output: "mbox_conf_reshape"
+  output: "_mbox_conf_dims"
+  type: "Reshape"
+  arg {
+    name: "shape"
+    ints: 0
+    ints: -1
+    ints: 21
+  }
+  device_option {
+    device_type: 1
+    cuda_gpu_id: 3
+  }
+  engine: "CUDNN"
+}
+op {
+  input: "mbox_conf_reshape"
+  output: "mbox_conf_softmax"
+  type: "Softmax"
+  arg {
+    name: "axis"
+    i: 2
+  }
+  device_option {
+    device_type: 1
+    cuda_gpu_id: 3
+  }
+  engine: "CUDNN"
+}
+op {
+  input: "mbox_conf_softmax"
+  output: "mbox_conf_flatten"
+  type: "Flatten"
+  device_option {
+    device_type: 1
+    cuda_gpu_id: 3
+  }
+  engine: "CUDNN"
+}
+op {
+  input: "mbox_loc"
+  input: "mbox_conf_flatten"
+  input: "mbox_priorbox"
+  output: "detection_out"
+  type: "DetectionOutput"
+  arg {
+    name: "num_classes"
+    i: 21
+  }
+  arg {
+    name: "share_location"
+    i: 1
+  }
+  arg {
+    name: "background_label_id"
+    i: 0
+  }
+  arg {
+    name: "nms_threshold"
+    f: 0.449999988079
+  }
+  arg {
+    name: "top_k"
+    i: 400
+  }
+  arg {
+    name: "eta"
+    f: 1.0
+  }
+  arg {
+    name: "code_type"
+    i: 2
+  }
+  arg {
+    name: "variance_encoded_in_target"
+    i: 0
+  }
+  arg {
+    name: "keep_top_k"
+    i: 200
+  }
+  arg {
+    name: "confidence_threshold"
+    f: 0.00999999977648
+  }
+  device_option {
+    device_type: 1
+    cuda_gpu_id: 3
+  }
+}
+external_input: "data"
+external_input: "conv1_1_w"
+external_input: "conv1_1_b"
+external_input: "conv1_2_w"
+external_input: "conv1_2_b"
+external_input: "conv2_1_w"
+external_input: "conv2_1_b"
+external_input: "conv2_2_w"
+external_input: "conv2_2_b"
+external_input: "conv3_1_w"
+external_input: "conv3_1_b"
+external_input: "conv3_2_w"
+external_input: "conv3_2_b"
+external_input: "conv3_3_w"
+external_input: "conv3_3_b"
+external_input: "conv4_1_w"
+external_input: "conv4_1_b"
+external_input: "conv4_2_w"
+external_input: "conv4_2_b"
+external_input: "conv4_3_w"
+external_input: "conv4_3_b"
+external_input: "conv5_1_w"
+external_input: "conv5_1_b"
+external_input: "conv5_2_w"
+external_input: "conv5_2_b"
+external_input: "conv5_3_w"
+external_input: "conv5_3_b"
+external_input: "fc6_w"
+external_input: "fc6_b"
+external_input: "fc7_w"
+external_input: "fc7_b"
+external_input: "conv6_1_w"
+external_input: "conv6_1_b"
+external_input: "conv6_2_w"
+external_input: "conv6_2_b"
+external_input: "conv7_1_w"
+external_input: "conv7_1_b"
+external_input: "conv7_2_w"
+external_input: "conv7_2_b"
+external_input: "conv8_1_w"
+external_input: "conv8_1_b"
+external_input: "conv8_2_w"
+external_input: "conv8_2_b"
+external_input: "conv9_1_w"
+external_input: "conv9_1_b"
+external_input: "conv9_2_w"
+external_input: "conv9_2_b"
+external_input: "conv4_3_norm_scale"
+external_input: "conv4_3_norm_mbox_loc_w"
+external_input: "conv4_3_norm_mbox_loc_b"
+external_input: "conv4_3_norm_mbox_conf_w"
+external_input: "conv4_3_norm_mbox_conf_b"
+external_input: "fc7_mbox_loc_w"
+external_input: "fc7_mbox_loc_b"
+external_input: "fc7_mbox_conf_w"
+external_input: "fc7_mbox_conf_b"
+external_input: "conv6_2_mbox_loc_w"
+external_input: "conv6_2_mbox_loc_b"
+external_input: "conv6_2_mbox_conf_w"
+external_input: "conv6_2_mbox_conf_b"
+external_input: "conv7_2_mbox_loc_w"
+external_input: "conv7_2_mbox_loc_b"
+external_input: "conv7_2_mbox_conf_w"
+external_input: "conv7_2_mbox_conf_b"
+external_input: "conv8_2_mbox_loc_w"
+external_input: "conv8_2_mbox_loc_b"
+external_input: "conv8_2_mbox_conf_w"
+external_input: "conv8_2_mbox_conf_b"
+external_input: "conv9_2_mbox_loc_w"
+external_input: "conv9_2_mbox_loc_b"
+external_input: "conv9_2_mbox_conf_w"
+external_input: "conv9_2_mbox_conf_b"
+external_output: "detection_out"
diff --git a/caffe2/python/ssd_test/norm_test.py b/caffe2/python/ssd_test/norm_test.py
new file mode 100644
index 000000000..af38c20d9
--- /dev/null
+++ b/caffe2/python/ssd_test/norm_test.py
@@ -0,0 +1,52 @@
+
+import sys
+import numpy as np
+'''
+sys.path.insert(0, '/data2/obj_detect/ssd/caffe/python')
+import caffe
+ssd_pt = '/home/ky/obj_detect/ssd/py-ssd/models/debug_norm_layer/debug.prototxt'
+ssd_md = '/home/ky/obj_detect/ssd/caffe/pretrain/models/VGGNet/VOC0712/SSD_300x300_ft/VGG_VOC0712_SSD_300x300_ft_iter_120000.caffemodel'
+ssd_net = caffe.Net(ssd_pt, ssd_md, caffe.TEST)
+data_blob = np.random.rand(1, 512, 38, 38).astype(np.float32)
+ssd_net.blobs['data'].data[...] = data_blob
+ssd_scale = ssd_net.params['conv4_3_norm'][0].data
+ssd_net.forward()
+norm_data = ssd_net.blobs['conv4_3_norm'].data
+np.save('./data.npy', data_blob)
+np.save('./scale.npy', ssd_scale)
+np.save('./conv4_3_norm_out.npy', norm_data)
+'''
+
+
+from caffe2.python import cnn, workspace, core
+from caffe2.proto import caffe2_pb2
+import numpy as np
+import time
+
+device_opts = caffe2_pb2.DeviceOption()
+device_opts.device_type = caffe2_pb2.CUDA
+device_opts.cuda_gpu_id = 0
+
+
+net = core.Net("norm_test")
+net.Norm(["data", "scale"], "norm_out", name="norm_layer")
+net.RunAllOnGPU(gpu_id=0)
+data = np.load('./data.npy')
+scale = np.load('./scale.npy')
+out = np.load('conv4_3_norm_out.npy')
+workspace.FeedBlob("data", data, device_opts)
+workspace.FeedBlob("scale", scale, device_opts)
+'''
+workspace.CreateNet(net.Proto())
+
+start = time.time()
+for i in range(1000):
+    workspace.RunNet("norm_test", 1)
+end = time.time()
+print (end - start) / 1000
+caffe2_out = workspace.FetchBlob("norm_out")
+
+print np.allclose(caffe2_out, out)
+'''
+print net.Proto()
+
diff --git a/caffe2/python/ssd_test/priorbox_test.py b/caffe2/python/ssd_test/priorbox_test.py
new file mode 100644
index 000000000..222389379
--- /dev/null
+++ b/caffe2/python/ssd_test/priorbox_test.py
@@ -0,0 +1,21 @@
+from caffe2.python import cnn, workspace, core
+from caffe2.proto import caffe2_pb2
+import numpy as np
+import time
+
+net = core.Net("prior_test")
+net.PriorBox(["conv4_3_norm", "data"], "prior_box", min_sizes=[30.0], max_sizes=[60.0],
+             aspect_ratios=[2.], flip=True, clip=False,
+             variance=[0.1, 0.1, 0.2, 0.2], step=8.)
+print net.Proto()
+
+workspace.FeedBlob("data", np.zeros([1, 3, 300, 300]).astype(np.float32))
+workspace.FeedBlob("conv4_3_norm", np.zeros([1, 512, 38, 38]).astype(np.float32))
+
+workspace.CreateNet(net.Proto())
+workspace.RunNet("prior_test", 1)
+
+caffe_out = np.load('./prior.npy')
+caffe2_out = workspace.FetchBlob("prior_box")
+import ipdb; ipdb.set_trace()
+print np.allclose(caffe_out, caffe2_out)
diff --git a/caffe2/python/ssd_test/ssd_conv.py b/caffe2/python/ssd_test/ssd_conv.py
new file mode 100644
index 000000000..59a1ae857
--- /dev/null
+++ b/caffe2/python/ssd_test/ssd_conv.py
@@ -0,0 +1,26 @@
+import sys
+import numpy as np
+sys.path.insert(0, '/data2/obj_detect/ssd/caffe/python')
+import caffe
+ssd_pt = '/data_shared/obj_det_models/ssd_leader_board/VGG_VOC0712_SSD_300x300_ft/deploy.prototxt'
+ssd_md = '/data_shared/obj_det_models/ssd_leader_board/VGG_VOC0712_SSD_300x300_ft/VGG_VOC0712_SSD_300x300_ft_iter_120000.caffemodel'
+ssd_net = caffe.Net(ssd_pt, ssd_md, caffe.TEST)
+#data_blob = np.random.rand(1, 3, 300, 300).astype(np.float32)
+data_blob = np.load('./input.npy')
+ssd_net.blobs['data'].data[...] = data_blob
+
+ssd_net.forward()
+
+ty = ['_w', '_b']
+
+for blob_name in ssd_net.blobs:
+    blob = ssd_net.blobs[blob_name].data
+    np.save('./{}.npy'.format(blob_name), blob)
+    
+    if blob_name in ssd_net.params:
+        params = ssd_net.params[blob_name]
+        for i in range(len(params)):
+            param = params[i].data
+            np.save('./{}.npy'.format(blob_name+ty[i]), param)
+
+
diff --git a/caffe2/python/ssd_test/ssd_preproc.py b/caffe2/python/ssd_test/ssd_preproc.py
new file mode 100644
index 000000000..5e6679d31
--- /dev/null
+++ b/caffe2/python/ssd_test/ssd_preproc.py
@@ -0,0 +1,27 @@
+import sys
+import numpy as np
+sys.path.insert(0, '/data2/obj_detect/ssd/caffe/python')
+import caffe
+ssd_pt = '/data_shared/obj_det_models/ssd_leader_board/VGG_VOC0712_SSD_300x300_ft/deploy.prototxt'
+ssd_md = '/data_shared/obj_det_models/ssd_leader_board/VGG_VOC0712_SSD_300x300_ft/VGG_VOC0712_SSD_300x300_ft_iter_120000.caffemodel'
+ssd_img = '/data2/obj_detect/ssd/caffe/examples/images/fish-bike.jpg'
+
+net = caffe.Net(ssd_pt, ssd_md, caffe.TEST)
+transformer = caffe.io.Transformer({'data': net.blobs['data'].data.shape})
+transformer.set_transpose('data', (2, 0, 1))
+transformer.set_mean('data', np.array([104,117,123])) # mean pixel
+transformer.set_raw_scale('data', 255)
+transformer.set_channel_swap('data', (2,1,0))
+image_resize = 300
+net.blobs['data'].reshape(1,3,image_resize,image_resize)
+image = caffe.io.load_image(ssd_img)
+transformed_image = transformer.preprocess('data', image)
+net.blobs['data'].data[...] = transformed_image
+
+detections = net.forward()['detection_out']
+
+
+np.save('./detections.npy', detections)
+np.save('./input.npy', transformed_image)
+
+
diff --git a/caffe2/python/ssd_test/ssd_prior.py b/caffe2/python/ssd_test/ssd_prior.py
new file mode 100644
index 000000000..8064143f0
--- /dev/null
+++ b/caffe2/python/ssd_test/ssd_prior.py
@@ -0,0 +1,18 @@
+import sys
+import numpy as np
+sys.path.insert(0, '/data2/obj_detect/ssd/caffe/python')
+import caffe
+ssd_pt = '/home/ky/obj_detect/ssd/py-ssd/models/debug_prior_layer/debug.prototxt'
+ssd_md = '/home/ky/obj_detect/ssd/caffe/pretrain/models/VGGNet/VOC0712/SSD_300x300_ft/VGG_VOC0712_SSD_300x300_ft_iter_120000.caffemodel'
+ssd_net = caffe.Net(ssd_pt, ssd_md, caffe.TEST)
+conv4_norm_blob = np.random.rand(1, 512, 38, 38).astype(np.float32)
+data_blob = np.random.rand(1, 3, 300, 300).astype(np.float32)
+
+ssd_net.blobs['data'].data[...] = data_blob
+ssd_net.blobs['conv4_norm'].data[...] = conv4_norm_blob
+
+ssd_net.forward()
+prior_data = ssd_net.blobs['conv4_3_norm_mbox_priorbox'].data
+np.save('./prior.npy', prior_data)
+
+
diff --git a/caffe2/python/ssd_test/visualize_caffe2_implementation_det.ipynb b/caffe2/python/ssd_test/visualize_caffe2_implementation_det.ipynb
new file mode 100644
index 000000000..07b9d1be5
--- /dev/null
+++ b/caffe2/python/ssd_test/visualize_caffe2_implementation_det.ipynb
@@ -0,0 +1,126 @@
+{
+ "cells": [
+  {
+   "cell_type": "code",
+   "execution_count": 12,
+   "metadata": {
+    "collapsed": true
+   },
+   "outputs": [],
+   "source": [
+    "import numpy as np\n",
+    "import sys\n",
+    "sys.path.insert(0, '/data2/obj_detect/ssd/caffe/python')\n",
+    "import caffe\n",
+    "import matplotlib.pyplot as plt\n",
+    "%matplotlib inline\n",
+    "plt.rcParams['figure.figsize'] = (10, 10)\n",
+    "plt.rcParams['image.interpolation'] = 'nearest'\n",
+    "plt.rcParams['image.cmap'] = 'gray'"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 6,
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "detections = np.load('/data2/obj_detect/learn/pybind11/learn/caffe2/caffe2/python/ssd_test/caffe2_det.npy')\n",
+    "# Parse the outputs.\n",
+    "det_label = detections[0,0,:,1]\n",
+    "det_conf = detections[0,0,:,2]\n",
+    "det_xmin = detections[0,0,:,3]\n",
+    "det_ymin = detections[0,0,:,4]\n",
+    "det_xmax = detections[0,0,:,5]\n",
+    "det_ymax = detections[0,0,:,6]\n",
+    "\n",
+    "# Get detections with confidence higher than 0.6.\n",
+    "top_indices = [i for i, conf in enumerate(det_conf) if conf >= 0.6]\n",
+    "\n",
+    "top_conf = det_conf[top_indices]\n",
+    "top_label_indices = det_label[top_indices].tolist()\n",
+    "top_xmin = det_xmin[top_indices]\n",
+    "top_ymin = det_ymin[top_indices]\n",
+    "top_xmax = det_xmax[top_indices]\n",
+    "top_ymax = det_ymax[top_indices]"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 18,
+   "metadata": {},
+   "outputs": [
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      "(323, 481, 3)\n",
+      "(4, 81, 470, 323)\n",
+      "(193, -4, 345, 180)\n"
+     ]
+    },
+    {
+     "data": {
+      "image/png": "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\nDU2HyW8FplqyAAAAAElFTkSuQmCC\n",
+      "text/plain": [
+       "<matplotlib.figure.Figure at 0x7f1bc990c650>"
+      ]
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    }
+   ],
+   "source": [
+    "image = caffe.io.load_image('/data2/obj_detect/ssd/caffe/examples/images/fish-bike.jpg')\n",
+    "print image.shape\n",
+    "plt.imshow(image)\n",
+    "currentAxis = plt.gca()\n",
+    "colors = plt.cm.hsv(np.linspace(0, 1, 21)).tolist()\n",
+    "\n",
+    "for i in xrange(top_conf.shape[0]):\n",
+    "    xmin = int(round(top_xmin[i] * image.shape[1]))\n",
+    "    ymin = int(round(top_ymin[i] * image.shape[0]))\n",
+    "    xmax = int(round(top_xmax[i] * image.shape[1]))\n",
+    "    ymax = int(round(top_ymax[i] * image.shape[0]))\n",
+    "    print (xmin, ymin, xmax, ymax)\n",
+    "    score = top_conf[i]\n",
+    "    label = int(top_label_indices[i])\n",
+    "    display_txt = '%s: %.2f'%(str(label), score)\n",
+    "    coords = (xmin, ymin), xmax-xmin+1, ymax-ymin+1\n",
+    "    color = colors[label]\n",
+    "    currentAxis.add_patch(plt.Rectangle(*coords, fill=False, edgecolor=color, linewidth=2))\n",
+    "    currentAxis.text(xmin, ymin, display_txt, bbox={'facecolor':color, 'alpha':0.5})"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": null,
+   "metadata": {
+    "collapsed": true
+   },
+   "outputs": [],
+   "source": []
+  }
+ ],
+ "metadata": {
+  "kernelspec": {
+   "display_name": "Python 2",
+   "language": "python",
+   "name": "python2"
+  },
+  "language_info": {
+   "codemirror_mode": {
+    "name": "ipython",
+    "version": 2
+   },
+   "file_extension": ".py",
+   "mimetype": "text/x-python",
+   "name": "python",
+   "nbconvert_exporter": "python",
+   "pygments_lexer": "ipython2",
+   "version": "2.7.12"
+  }
+ },
+ "nbformat": 4,
+ "nbformat_minor": 2
+}
diff --git a/caffe2/python/tutorials/ResNet-152-deploy.prototxt b/caffe2/python/tutorials/ResNet-152-deploy.prototxt
new file mode 100644
index 000000000..74e2ca5ab
--- /dev/null
+++ b/caffe2/python/tutorials/ResNet-152-deploy.prototxt
@@ -0,0 +1,6778 @@
+# Enter your network definition here.
+# Use Shift+Enter to update the visualization.
+
+name: "ResNet-152"
+input: "data"
+input_dim: 1
+input_dim: 3
+input_dim: 224
+input_dim: 224
+
+layer {
+	bottom: "data"
+	top: "conv1"
+	name: "conv1"
+	type: "Convolution"
+	convolution_param {
+		num_output: 64
+		kernel_size: 7
+		pad: 3
+		stride: 2
+		bias_term: false
+	}
+}
+
+layer {
+	bottom: "conv1"
+	top: "bn_conv1"
+	name: "bn_conv1"
+	type: "BatchNorm"
+	batch_norm_param {
+		use_global_stats: true
+	}
+}
+
+layer {
+	bottom: "bn_conv1"
+	top: "bn_conv1"
+	name: "scale_conv1"
+	type: "Scale"
+	scale_param {
+		bias_term: true
+	}
+}
+
+layer {
+	top: "bn_conv1"
+	bottom: "bn_conv1"
+	name: "conv1_relu"
+	type: "ReLU"
+}
+
+layer {
+	bottom: "bn_conv1"
+	top: "pool1"
+	name: "pool1"
+	type: "Pooling"
+	pooling_param {
+		kernel_size: 3
+		stride: 2
+		pool: MAX
+	}
+}
+
+layer {
+	bottom: "pool1"
+	top: "res2a_branch1"
+	name: "res2a_branch1"
+	type: "Convolution"
+	convolution_param {
+		num_output: 256
+		kernel_size: 1
+		pad: 0
+		stride: 1
+		bias_term: false
+	}
+}
+
+layer {
+	bottom: "res2a_branch1"
+	top: "bn2a_branch1"
+	name: "bn2a_branch1"
+	type: "BatchNorm"
+	batch_norm_param {
+		use_global_stats: true
+	}
+}
+
+layer {
+	bottom: "bn2a_branch1"
+	top: "bn2a_branch1"
+	name: "scale2a_branch1"
+	type: "Scale"
+	scale_param {
+		bias_term: true
+	}
+}
+
+layer {
+	bottom: "pool1"
+	top: "res2a_branch2a"
+	name: "res2a_branch2a"
+	type: "Convolution"
+	convolution_param {
+		num_output: 64
+		kernel_size: 1
+		pad: 0
+		stride: 1
+		bias_term: false
+	}
+}
+
+layer {
+	bottom: "res2a_branch2a"
+	top: "bn2a_branch2a"
+	name: "bn2a_branch2a"
+	type: "BatchNorm"
+	batch_norm_param {
+		use_global_stats: true
+	}
+}
+
+layer {
+	bottom: "bn2a_branch2a"
+	top: "bn2a_branch2a"
+	name: "scale2a_branch2a"
+	type: "Scale"
+	scale_param {
+		bias_term: true
+	}
+}
+
+layer {
+	top: "bn2a_branch2a"
+	bottom: "bn2a_branch2a"
+	name: "res2a_branch2a_relu"
+	type: "ReLU"
+}
+
+layer {
+	bottom: "bn2a_branch2a"
+	top: "res2a_branch2b"
+	name: "res2a_branch2b"
+	type: "Convolution"
+	convolution_param {
+		num_output: 64
+		kernel_size: 3
+		pad: 1
+		stride: 1
+		bias_term: false
+	}
+}
+
+layer {
+	bottom: "res2a_branch2b"
+	top: "bn2a_branch2b"
+	name: "bn2a_branch2b"
+	type: "BatchNorm"
+	batch_norm_param {
+		use_global_stats: true
+	}
+}
+
+layer {
+	bottom: "bn2a_branch2b"
+	top: "bn2a_branch2b"
+	name: "scale2a_branch2b"
+	type: "Scale"
+	scale_param {
+		bias_term: true
+	}
+}
+
+layer {
+	top: "bn2a_branch2b"
+	bottom: "bn2a_branch2b"
+	name: "res2a_branch2b_relu"
+	type: "ReLU"
+}
+
+layer {
+	bottom: "bn2a_branch2b"
+	top: "res2a_branch2c"
+	name: "res2a_branch2c"
+	type: "Convolution"
+	convolution_param {
+		num_output: 256
+		kernel_size: 1
+		pad: 0
+		stride: 1
+		bias_term: false
+	}
+}
+
+layer {
+	bottom: "res2a_branch2c"
+	top: "bn2a_branch2c"
+	name: "bn2a_branch2c"
+	type: "BatchNorm"
+	batch_norm_param {
+		use_global_stats: true
+	}
+}
+
+layer {
+	bottom: "bn2a_branch2c"
+	top: "bn2a_branch2c"
+	name: "scale2a_branch2c"
+	type: "Scale"
+	scale_param {
+		bias_term: true
+	}
+}
+
+layer {
+	bottom: "bn2a_branch1"
+	bottom: "bn2a_branch2c"
+	top: "res2a"
+	name: "res2a"
+	type: "Eltwise"
+}
+
+layer {
+	bottom: "res2a"
+	top: "res2a"
+	name: "res2a_relu"
+	type: "ReLU"
+}
+
+layer {
+	bottom: "res2a"
+	top: "res2b_branch2a"
+	name: "res2b_branch2a"
+	type: "Convolution"
+	convolution_param {
+		num_output: 64
+		kernel_size: 1
+		pad: 0
+		stride: 1
+		bias_term: false
+	}
+}
+
+layer {
+	bottom: "res2b_branch2a"
+	top: "bn2b_branch2a"
+	name: "bn2b_branch2a"
+	type: "BatchNorm"
+	batch_norm_param {
+		use_global_stats: true
+	}
+}
+
+layer {
+	bottom: "bn2b_branch2a"
+	top: "bn2b_branch2a"
+	name: "scale2b_branch2a"
+	type: "Scale"
+	scale_param {
+		bias_term: true
+	}
+}
+
+layer {
+	top: "bn2b_branch2a"
+	bottom: "bn2b_branch2a"
+	name: "res2b_branch2a_relu"
+	type: "ReLU"
+}
+
+layer {
+	bottom: "bn2b_branch2a"
+	top: "res2b_branch2b"
+	name: "res2b_branch2b"
+	type: "Convolution"
+	convolution_param {
+		num_output: 64
+		kernel_size: 3
+		pad: 1
+		stride: 1
+		bias_term: false
+	}
+}
+
+layer {
+	bottom: "res2b_branch2b"
+	top: "bn2b_branch2b"
+	name: "bn2b_branch2b"
+	type: "BatchNorm"
+	batch_norm_param {
+		use_global_stats: true
+	}
+}
+
+layer {
+	bottom: "bn2b_branch2b"
+	top: "bn2b_branch2b"
+	name: "scale2b_branch2b"
+	type: "Scale"
+	scale_param {
+		bias_term: true
+	}
+}
+
+layer {
+	top: "bn2b_branch2b"
+	bottom: "bn2b_branch2b"
+	name: "res2b_branch2b_relu"
+	type: "ReLU"
+}
+
+layer {
+	bottom: "bn2b_branch2b"
+	top: "res2b_branch2c"
+	name: "res2b_branch2c"
+	type: "Convolution"
+	convolution_param {
+		num_output: 256
+		kernel_size: 1
+		pad: 0
+		stride: 1
+		bias_term: false
+	}
+}
+
+layer {
+	bottom: "res2b_branch2c"
+	top: "bn2b_branch2c"
+	name: "bn2b_branch2c"
+	type: "BatchNorm"
+	batch_norm_param {
+		use_global_stats: true
+	}
+}
+
+layer {
+	bottom: "bn2b_branch2c"
+	top: "bn2b_branch2c"
+	name: "scale2b_branch2c"
+	type: "Scale"
+	scale_param {
+		bias_term: true
+	}
+}
+
+layer {
+	bottom: "res2a"
+	bottom: "bn2b_branch2c"
+	top: "res2b"
+	name: "res2b"
+	type: "Eltwise"
+}
+
+layer {
+	bottom: "res2b"
+	top: "res2b"
+	name: "res2b_relu"
+	type: "ReLU"
+}
+
+layer {
+	bottom: "res2b"
+	top: "res2c_branch2a"
+	name: "res2c_branch2a"
+	type: "Convolution"
+	convolution_param {
+		num_output: 64
+		kernel_size: 1
+		pad: 0
+		stride: 1
+		bias_term: false
+	}
+}
+
+layer {
+	bottom: "res2c_branch2a"
+	top: "bn2c_branch2a"
+	name: "bn2c_branch2a"
+	type: "BatchNorm"
+	batch_norm_param {
+		use_global_stats: true
+	}
+}
+
+layer {
+	bottom: "bn2c_branch2a"
+	top: "bn2c_branch2a"
+	name: "scale2c_branch2a"
+	type: "Scale"
+	scale_param {
+		bias_term: true
+	}
+}
+
+layer {
+	top: "bn2c_branch2a"
+	bottom: "bn2c_branch2a"
+	name: "res2c_branch2a_relu"
+	type: "ReLU"
+}
+
+layer {
+	bottom: "bn2c_branch2a"
+	top: "res2c_branch2b"
+	name: "res2c_branch2b"
+	type: "Convolution"
+	convolution_param {
+		num_output: 64
+		kernel_size: 3
+		pad: 1
+		stride: 1
+		bias_term: false
+	}
+}
+
+layer {
+	bottom: "res2c_branch2b"
+	top: "bn2c_branch2b"
+	name: "bn2c_branch2b"
+	type: "BatchNorm"
+	batch_norm_param {
+		use_global_stats: true
+	}
+}
+
+layer {
+	bottom: "bn2c_branch2b"
+	top: "bn2c_branch2b"
+	name: "scale2c_branch2b"
+	type: "Scale"
+	scale_param {
+		bias_term: true
+	}
+}
+
+layer {
+	top: "bn2c_branch2b"
+	bottom: "bn2c_branch2b"
+	name: "res2c_branch2b_relu"
+	type: "ReLU"
+}
+
+layer {
+	bottom: "bn2c_branch2b"
+	top: "res2c_branch2c"
+	name: "res2c_branch2c"
+	type: "Convolution"
+	convolution_param {
+		num_output: 256
+		kernel_size: 1
+		pad: 0
+		stride: 1
+		bias_term: false
+	}
+}
+
+layer {
+	bottom: "res2c_branch2c"
+	top: "bn2c_branch2c"
+	name: "bn2c_branch2c"
+	type: "BatchNorm"
+	batch_norm_param {
+		use_global_stats: true
+	}
+}
+
+layer {
+	bottom: "bn2c_branch2c"
+	top: "bn2c_branch2c"
+	name: "scale2c_branch2c"
+	type: "Scale"
+	scale_param {
+		bias_term: true
+	}
+}
+
+layer {
+	bottom: "res2b"
+	bottom: "bn2c_branch2c"
+	top: "res2c"
+	name: "res2c"
+	type: "Eltwise"
+}
+
+layer {
+	bottom: "res2c"
+	top: "res2c"
+	name: "res2c_relu"
+	type: "ReLU"
+}
+
+layer {
+	bottom: "res2c"
+	top: "res3a_branch1"
+	name: "res3a_branch1"
+	type: "Convolution"
+	convolution_param {
+		num_output: 512
+		kernel_size: 1
+		pad: 0
+		stride: 2
+		bias_term: false
+	}
+}
+
+layer {
+	bottom: "res3a_branch1"
+	top: "bn3a_branch1"
+	name: "bn3a_branch1"
+	type: "BatchNorm"
+	batch_norm_param {
+		use_global_stats: true
+	}
+}
+
+layer {
+	bottom: "bn3a_branch1"
+	top: "bn3a_branch1"
+	name: "scale3a_branch1"
+	type: "Scale"
+	scale_param {
+		bias_term: true
+	}
+}
+
+layer {
+	bottom: "res2c"
+	top: "res3a_branch2a"
+	name: "res3a_branch2a"
+	type: "Convolution"
+	convolution_param {
+		num_output: 128
+		kernel_size: 1
+		pad: 0
+		stride: 2
+		bias_term: false
+	}
+}
+
+layer {
+	bottom: "res3a_branch2a"
+	top: "bn3a_branch2a"
+	name: "bn3a_branch2a"
+	type: "BatchNorm"
+	batch_norm_param {
+		use_global_stats: true
+	}
+}
+
+layer {
+	bottom: "bn3a_branch2a"
+	top: "bn3a_branch2a"
+	name: "scale3a_branch2a"
+	type: "Scale"
+	scale_param {
+		bias_term: true
+	}
+}
+
+layer {
+	top: "bn3a_branch2a"
+	bottom: "bn3a_branch2a"
+	name: "res3a_branch2a_relu"
+	type: "ReLU"
+}
+
+layer {
+	bottom: "bn3a_branch2a"
+	top: "res3a_branch2b"
+	name: "res3a_branch2b"
+	type: "Convolution"
+	convolution_param {
+		num_output: 128
+		kernel_size: 3
+		pad: 1
+		stride: 1
+		bias_term: false
+	}
+}
+
+layer {
+	bottom: "res3a_branch2b"
+	top: "bn3a_branch2b"
+	name: "bn3a_branch2b"
+	type: "BatchNorm"
+	batch_norm_param {
+		use_global_stats: true
+	}
+}
+
+layer {
+	bottom: "bn3a_branch2b"
+	top: "bn3a_branch2b"
+	name: "scale3a_branch2b"
+	type: "Scale"
+	scale_param {
+		bias_term: true
+	}
+}
+
+layer {
+	top: "bn3a_branch2b"
+	bottom: "bn3a_branch2b"
+	name: "res3a_branch2b_relu"
+	type: "ReLU"
+}
+
+layer {
+	bottom: "bn3a_branch2b"
+	top: "res3a_branch2c"
+	name: "res3a_branch2c"
+	type: "Convolution"
+	convolution_param {
+		num_output: 512
+		kernel_size: 1
+		pad: 0
+		stride: 1
+		bias_term: false
+	}
+}
+
+layer {
+	bottom: "res3a_branch2c"
+	top: "bn3a_branch2c"
+	name: "bn3a_branch2c"
+	type: "BatchNorm"
+	batch_norm_param {
+		use_global_stats: true
+	}
+}
+
+layer {
+	bottom: "bn3a_branch2c"
+	top: "bn3a_branch2c"
+	name: "scale3a_branch2c"
+	type: "Scale"
+	scale_param {
+		bias_term: true
+	}
+}
+
+layer {
+	bottom: "bn3a_branch1"
+	bottom: "bn3a_branch2c"
+	top: "res3a"
+	name: "res3a"
+	type: "Eltwise"
+}
+
+layer {
+	bottom: "res3a"
+	top: "res3a"
+	name: "res3a_relu"
+	type: "ReLU"
+}
+
+layer {
+	bottom: "res3a"
+	top: "res3b1_branch2a"
+	name: "res3b1_branch2a"
+	type: "Convolution"
+	convolution_param {
+		num_output: 128
+		kernel_size: 1
+		pad: 0
+		stride: 1
+		bias_term: false
+	}
+}
+
+layer {
+	bottom: "res3b1_branch2a"
+	top: "bn3b1_branch2a"
+	name: "bn3b1_branch2a"
+	type: "BatchNorm"
+	batch_norm_param {
+		use_global_stats: true
+	}
+}
+
+layer {
+	bottom: "bn3b1_branch2a"
+	top: "bn3b1_branch2a"
+	name: "scale3b1_branch2a"
+	type: "Scale"
+	scale_param {
+		bias_term: true
+	}
+}
+
+layer {
+	top: "bn3b1_branch2a"
+	bottom: "bn3b1_branch2a"
+	name: "res3b1_branch2a_relu"
+	type: "ReLU"
+}
+
+layer {
+	bottom: "bn3b1_branch2a"
+	top: "res3b1_branch2b"
+	name: "res3b1_branch2b"
+	type: "Convolution"
+	convolution_param {
+		num_output: 128
+		kernel_size: 3
+		pad: 1
+		stride: 1
+		bias_term: false
+	}
+}
+
+layer {
+	bottom: "res3b1_branch2b"
+	top: "bn3b1_branch2b"
+	name: "bn3b1_branch2b"
+	type: "BatchNorm"
+	batch_norm_param {
+		use_global_stats: true
+	}
+}
+
+layer {
+	bottom: "bn3b1_branch2b"
+	top: "bn3b1_branch2b"
+	name: "scale3b1_branch2b"
+	type: "Scale"
+	scale_param {
+		bias_term: true
+	}
+}
+
+layer {
+	top: "bn3b1_branch2b"
+	bottom: "bn3b1_branch2b"
+	name: "res3b1_branch2b_relu"
+	type: "ReLU"
+}
+
+layer {
+	bottom: "bn3b1_branch2b"
+	top: "res3b1_branch2c"
+	name: "res3b1_branch2c"
+	type: "Convolution"
+	convolution_param {
+		num_output: 512
+		kernel_size: 1
+		pad: 0
+		stride: 1
+		bias_term: false
+	}
+}
+
+layer {
+	bottom: "res3b1_branch2c"
+	top: "bn3b1_branch2c"
+	name: "bn3b1_branch2c"
+	type: "BatchNorm"
+	batch_norm_param {
+		use_global_stats: true
+	}
+}
+
+layer {
+	bottom: "bn3b1_branch2c"
+	top: "bn3b1_branch2c"
+	name: "scale3b1_branch2c"
+	type: "Scale"
+	scale_param {
+		bias_term: true
+	}
+}
+
+layer {
+	bottom: "res3a"
+	bottom: "bn3b1_branch2c"
+	top: "res3b1"
+	name: "res3b1"
+	type: "Eltwise"
+}
+
+layer {
+	bottom: "res3b1"
+	top: "res3b1"
+	name: "res3b1_relu"
+	type: "ReLU"
+}
+
+layer {
+	bottom: "res3b1"
+	top: "res3b2_branch2a"
+	name: "res3b2_branch2a"
+	type: "Convolution"
+	convolution_param {
+		num_output: 128
+		kernel_size: 1
+		pad: 0
+		stride: 1
+		bias_term: false
+	}
+}
+
+layer {
+	bottom: "res3b2_branch2a"
+	top: "bn3b2_branch2a"
+	name: "bn3b2_branch2a"
+	type: "BatchNorm"
+	batch_norm_param {
+		use_global_stats: true
+	}
+}
+
+layer {
+	bottom: "bn3b2_branch2a"
+	top: "bn3b2_branch2a"
+	name: "scale3b2_branch2a"
+	type: "Scale"
+	scale_param {
+		bias_term: true
+	}
+}
+
+layer {
+	top: "bn3b2_branch2a"
+	bottom: "bn3b2_branch2a"
+	name: "res3b2_branch2a_relu"
+	type: "ReLU"
+}
+
+layer {
+	bottom: "bn3b2_branch2a"
+	top: "res3b2_branch2b"
+	name: "res3b2_branch2b"
+	type: "Convolution"
+	convolution_param {
+		num_output: 128
+		kernel_size: 3
+		pad: 1
+		stride: 1
+		bias_term: false
+	}
+}
+
+layer {
+	bottom: "res3b2_branch2b"
+	top: "bn3b2_branch2b"
+	name: "bn3b2_branch2b"
+	type: "BatchNorm"
+	batch_norm_param {
+		use_global_stats: true
+	}
+}
+
+layer {
+	bottom: "bn3b2_branch2b"
+	top: "bn3b2_branch2b"
+	name: "scale3b2_branch2b"
+	type: "Scale"
+	scale_param {
+		bias_term: true
+	}
+}
+
+layer {
+	top: "bn3b2_branch2b"
+	bottom: "bn3b2_branch2b"
+	name: "res3b2_branch2b_relu"
+	type: "ReLU"
+}
+
+layer {
+	bottom: "bn3b2_branch2b"
+	top: "res3b2_branch2c"
+	name: "res3b2_branch2c"
+	type: "Convolution"
+	convolution_param {
+		num_output: 512
+		kernel_size: 1
+		pad: 0
+		stride: 1
+		bias_term: false
+	}
+}
+
+layer {
+	bottom: "res3b2_branch2c"
+	top: "bn3b2_branch2c"
+	name: "bn3b2_branch2c"
+	type: "BatchNorm"
+	batch_norm_param {
+		use_global_stats: true
+	}
+}
+
+layer {
+	bottom: "bn3b2_branch2c"
+	top: "bn3b2_branch2c"
+	name: "scale3b2_branch2c"
+	type: "Scale"
+	scale_param {
+		bias_term: true
+	}
+}
+
+layer {
+	bottom: "res3b1"
+	bottom: "bn3b2_branch2c"
+	top: "res3b2"
+	name: "res3b2"
+	type: "Eltwise"
+}
+
+layer {
+	bottom: "res3b2"
+	top: "res3b2"
+	name: "res3b2_relu"
+	type: "ReLU"
+}
+
+layer {
+	bottom: "res3b2"
+	top: "res3b3_branch2a"
+	name: "res3b3_branch2a"
+	type: "Convolution"
+	convolution_param {
+		num_output: 128
+		kernel_size: 1
+		pad: 0
+		stride: 1
+		bias_term: false
+	}
+}
+
+layer {
+	bottom: "res3b3_branch2a"
+	top: "bn3b3_branch2a"
+	name: "bn3b3_branch2a"
+	type: "BatchNorm"
+	batch_norm_param {
+		use_global_stats: true
+	}
+}
+
+layer {
+	bottom: "bn3b3_branch2a"
+	top: "bn3b3_branch2a"
+	name: "scale3b3_branch2a"
+	type: "Scale"
+	scale_param {
+		bias_term: true
+	}
+}
+
+layer {
+	top: "bn3b3_branch2a"
+	bottom: "bn3b3_branch2a"
+	name: "res3b3_branch2a_relu"
+	type: "ReLU"
+}
+
+layer {
+	bottom: "bn3b3_branch2a"
+	top: "res3b3_branch2b"
+	name: "res3b3_branch2b"
+	type: "Convolution"
+	convolution_param {
+		num_output: 128
+		kernel_size: 3
+		pad: 1
+		stride: 1
+		bias_term: false
+	}
+}
+
+layer {
+	bottom: "res3b3_branch2b"
+	top: "bn3b3_branch2b"
+	name: "bn3b3_branch2b"
+	type: "BatchNorm"
+	batch_norm_param {
+		use_global_stats: true
+	}
+}
+
+layer {
+	bottom: "bn3b3_branch2b"
+	top: "bn3b3_branch2b"
+	name: "scale3b3_branch2b"
+	type: "Scale"
+	scale_param {
+		bias_term: true
+	}
+}
+
+layer {
+	top: "bn3b3_branch2b"
+	bottom: "bn3b3_branch2b"
+	name: "res3b3_branch2b_relu"
+	type: "ReLU"
+}
+
+layer {
+	bottom: "bn3b3_branch2b"
+	top: "res3b3_branch2c"
+	name: "res3b3_branch2c"
+	type: "Convolution"
+	convolution_param {
+		num_output: 512
+		kernel_size: 1
+		pad: 0
+		stride: 1
+		bias_term: false
+	}
+}
+
+layer {
+	bottom: "res3b3_branch2c"
+	top: "bn3b3_branch2c"
+	name: "bn3b3_branch2c"
+	type: "BatchNorm"
+	batch_norm_param {
+		use_global_stats: true
+	}
+}
+
+layer {
+	bottom: "bn3b3_branch2c"
+	top: "bn3b3_branch2c"
+	name: "scale3b3_branch2c"
+	type: "Scale"
+	scale_param {
+		bias_term: true
+	}
+}
+
+layer {
+	bottom: "res3b2"
+	bottom: "bn3b3_branch2c"
+	top: "res3b3"
+	name: "res3b3"
+	type: "Eltwise"
+}
+
+layer {
+	bottom: "res3b3"
+	top: "res3b3"
+	name: "res3b3_relu"
+	type: "ReLU"
+}
+
+layer {
+	bottom: "res3b3"
+	top: "res3b4_branch2a"
+	name: "res3b4_branch2a"
+	type: "Convolution"
+	convolution_param {
+		num_output: 128
+		kernel_size: 1
+		pad: 0
+		stride: 1
+		bias_term: false
+	}
+}
+
+layer {
+	bottom: "res3b4_branch2a"
+	top: "bn3b4_branch2a"
+	name: "bn3b4_branch2a"
+	type: "BatchNorm"
+	batch_norm_param {
+		use_global_stats: true
+	}
+}
+
+layer {
+	bottom: "bn3b4_branch2a"
+	top: "bn3b4_branch2a"
+	name: "scale3b4_branch2a"
+	type: "Scale"
+	scale_param {
+		bias_term: true
+	}
+}
+
+layer {
+	top: "bn3b4_branch2a"
+	bottom: "bn3b4_branch2a"
+	name: "res3b4_branch2a_relu"
+	type: "ReLU"
+}
+
+layer {
+	bottom: "bn3b4_branch2a"
+	top: "res3b4_branch2b"
+	name: "res3b4_branch2b"
+	type: "Convolution"
+	convolution_param {
+		num_output: 128
+		kernel_size: 3
+		pad: 1
+		stride: 1
+		bias_term: false
+	}
+}
+
+layer {
+	bottom: "res3b4_branch2b"
+	top: "bn3b4_branch2b"
+	name: "bn3b4_branch2b"
+	type: "BatchNorm"
+	batch_norm_param {
+		use_global_stats: true
+	}
+}
+
+layer {
+	bottom: "bn3b4_branch2b"
+	top: "bn3b4_branch2b"
+	name: "scale3b4_branch2b"
+	type: "Scale"
+	scale_param {
+		bias_term: true
+	}
+}
+
+layer {
+	top: "bn3b4_branch2b"
+	bottom: "bn3b4_branch2b"
+	name: "res3b4_branch2b_relu"
+	type: "ReLU"
+}
+
+layer {
+	bottom: "bn3b4_branch2b"
+	top: "res3b4_branch2c"
+	name: "res3b4_branch2c"
+	type: "Convolution"
+	convolution_param {
+		num_output: 512
+		kernel_size: 1
+		pad: 0
+		stride: 1
+		bias_term: false
+	}
+}
+
+layer {
+	bottom: "res3b4_branch2c"
+	top: "bn3b4_branch2c"
+	name: "bn3b4_branch2c"
+	type: "BatchNorm"
+	batch_norm_param {
+		use_global_stats: true
+	}
+}
+
+layer {
+	bottom: "bn3b4_branch2c"
+	top: "bn3b4_branch2c"
+	name: "scale3b4_branch2c"
+	type: "Scale"
+	scale_param {
+		bias_term: true
+	}
+}
+
+layer {
+	bottom: "res3b3"
+	bottom: "bn3b4_branch2c"
+	top: "res3b4"
+	name: "res3b4"
+	type: "Eltwise"
+}
+
+layer {
+	bottom: "res3b4"
+	top: "res3b4"
+	name: "res3b4_relu"
+	type: "ReLU"
+}
+
+layer {
+	bottom: "res3b4"
+	top: "res3b5_branch2a"
+	name: "res3b5_branch2a"
+	type: "Convolution"
+	convolution_param {
+		num_output: 128
+		kernel_size: 1
+		pad: 0
+		stride: 1
+		bias_term: false
+	}
+}
+
+layer {
+	bottom: "res3b5_branch2a"
+	top: "bn3b5_branch2a"
+	name: "bn3b5_branch2a"
+	type: "BatchNorm"
+	batch_norm_param {
+		use_global_stats: true
+	}
+}
+
+layer {
+	bottom: "bn3b5_branch2a"
+	top: "bn3b5_branch2a"
+	name: "scale3b5_branch2a"
+	type: "Scale"
+	scale_param {
+		bias_term: true
+	}
+}
+
+layer {
+	top: "bn3b5_branch2a"
+	bottom: "bn3b5_branch2a"
+	name: "res3b5_branch2a_relu"
+	type: "ReLU"
+}
+
+layer {
+	bottom: "bn3b5_branch2a"
+	top: "res3b5_branch2b"
+	name: "res3b5_branch2b"
+	type: "Convolution"
+	convolution_param {
+		num_output: 128
+		kernel_size: 3
+		pad: 1
+		stride: 1
+		bias_term: false
+	}
+}
+
+layer {
+	bottom: "res3b5_branch2b"
+	top: "bn3b5_branch2b"
+	name: "bn3b5_branch2b"
+	type: "BatchNorm"
+	batch_norm_param {
+		use_global_stats: true
+	}
+}
+
+layer {
+	bottom: "bn3b5_branch2b"
+	top: "bn3b5_branch2b"
+	name: "scale3b5_branch2b"
+	type: "Scale"
+	scale_param {
+		bias_term: true
+	}
+}
+
+layer {
+	top: "bn3b5_branch2b"
+	bottom: "bn3b5_branch2b"
+	name: "res3b5_branch2b_relu"
+	type: "ReLU"
+}
+
+layer {
+	bottom: "bn3b5_branch2b"
+	top: "res3b5_branch2c"
+	name: "res3b5_branch2c"
+	type: "Convolution"
+	convolution_param {
+		num_output: 512
+		kernel_size: 1
+		pad: 0
+		stride: 1
+		bias_term: false
+	}
+}
+
+layer {
+	bottom: "res3b5_branch2c"
+	top: "bn3b5_branch2c"
+	name: "bn3b5_branch2c"
+	type: "BatchNorm"
+	batch_norm_param {
+		use_global_stats: true
+	}
+}
+
+layer {
+	bottom: "bn3b5_branch2c"
+	top: "bn3b5_branch2c"
+	name: "scale3b5_branch2c"
+	type: "Scale"
+	scale_param {
+		bias_term: true
+	}
+}
+
+layer {
+	bottom: "res3b4"
+	bottom: "bn3b5_branch2c"
+	top: "res3b5"
+	name: "res3b5"
+	type: "Eltwise"
+}
+
+layer {
+	bottom: "res3b5"
+	top: "res3b5"
+	name: "res3b5_relu"
+	type: "ReLU"
+}
+
+layer {
+	bottom: "res3b5"
+	top: "res3b6_branch2a"
+	name: "res3b6_branch2a"
+	type: "Convolution"
+	convolution_param {
+		num_output: 128
+		kernel_size: 1
+		pad: 0
+		stride: 1
+		bias_term: false
+	}
+}
+
+layer {
+	bottom: "res3b6_branch2a"
+	top: "bn3b6_branch2a"
+	name: "bn3b6_branch2a"
+	type: "BatchNorm"
+	batch_norm_param {
+		use_global_stats: true
+	}
+}
+
+layer {
+	bottom: "bn3b6_branch2a"
+	top: "bn3b6_branch2a"
+	name: "scale3b6_branch2a"
+	type: "Scale"
+	scale_param {
+		bias_term: true
+	}
+}
+
+layer {
+	top: "bn3b6_branch2a"
+	bottom: "bn3b6_branch2a"
+	name: "res3b6_branch2a_relu"
+	type: "ReLU"
+}
+
+layer {
+	bottom: "bn3b6_branch2a"
+	top: "res3b6_branch2b"
+	name: "res3b6_branch2b"
+	type: "Convolution"
+	convolution_param {
+		num_output: 128
+		kernel_size: 3
+		pad: 1
+		stride: 1
+		bias_term: false
+	}
+}
+
+layer {
+	bottom: "res3b6_branch2b"
+	top: "bn3b6_branch2b"
+	name: "bn3b6_branch2b"
+	type: "BatchNorm"
+	batch_norm_param {
+		use_global_stats: true
+	}
+}
+
+layer {
+	bottom: "bn3b6_branch2b"
+	top: "bn3b6_branch2b"
+	name: "scale3b6_branch2b"
+	type: "Scale"
+	scale_param {
+		bias_term: true
+	}
+}
+
+layer {
+	top: "bn3b6_branch2b"
+	bottom: "bn3b6_branch2b"
+	name: "res3b6_branch2b_relu"
+	type: "ReLU"
+}
+
+layer {
+	bottom: "bn3b6_branch2b"
+	top: "res3b6_branch2c"
+	name: "res3b6_branch2c"
+	type: "Convolution"
+	convolution_param {
+		num_output: 512
+		kernel_size: 1
+		pad: 0
+		stride: 1
+		bias_term: false
+	}
+}
+
+layer {
+	bottom: "res3b6_branch2c"
+	top: "bn3b6_branch2c"
+	name: "bn3b6_branch2c"
+	type: "BatchNorm"
+	batch_norm_param {
+		use_global_stats: true
+	}
+}
+
+layer {
+	bottom: "bn3b6_branch2c"
+	top: "bn3b6_branch2c"
+	name: "scale3b6_branch2c"
+	type: "Scale"
+	scale_param {
+		bias_term: true
+	}
+}
+
+layer {
+	bottom: "res3b5"
+	bottom: "bn3b6_branch2c"
+	top: "res3b6"
+	name: "res3b6"
+	type: "Eltwise"
+}
+
+layer {
+	bottom: "res3b6"
+	top: "res3b6"
+	name: "res3b6_relu"
+	type: "ReLU"
+}
+
+layer {
+	bottom: "res3b6"
+	top: "res3b7_branch2a"
+	name: "res3b7_branch2a"
+	type: "Convolution"
+	convolution_param {
+		num_output: 128
+		kernel_size: 1
+		pad: 0
+		stride: 1
+		bias_term: false
+	}
+}
+
+layer {
+	bottom: "res3b7_branch2a"
+	top: "bn3b7_branch2a"
+	name: "bn3b7_branch2a"
+	type: "BatchNorm"
+	batch_norm_param {
+		use_global_stats: true
+	}
+}
+
+layer {
+	bottom: "bn3b7_branch2a"
+	top: "bn3b7_branch2a"
+	name: "scale3b7_branch2a"
+	type: "Scale"
+	scale_param {
+		bias_term: true
+	}
+}
+
+layer {
+	top: "bn3b7_branch2a"
+	bottom: "bn3b7_branch2a"
+	name: "res3b7_branch2a_relu"
+	type: "ReLU"
+}
+
+layer {
+	bottom: "bn3b7_branch2a"
+	top: "res3b7_branch2b"
+	name: "res3b7_branch2b"
+	type: "Convolution"
+	convolution_param {
+		num_output: 128
+		kernel_size: 3
+		pad: 1
+		stride: 1
+		bias_term: false
+	}
+}
+
+layer {
+	bottom: "res3b7_branch2b"
+	top: "bn3b7_branch2b"
+	name: "bn3b7_branch2b"
+	type: "BatchNorm"
+	batch_norm_param {
+		use_global_stats: true
+	}
+}
+
+layer {
+	bottom: "bn3b7_branch2b"
+	top: "bn3b7_branch2b"
+	name: "scale3b7_branch2b"
+	type: "Scale"
+	scale_param {
+		bias_term: true
+	}
+}
+
+layer {
+	top: "bn3b7_branch2b"
+	bottom: "bn3b7_branch2b"
+	name: "res3b7_branch2b_relu"
+	type: "ReLU"
+}
+
+layer {
+	bottom: "bn3b7_branch2b"
+	top: "res3b7_branch2c"
+	name: "res3b7_branch2c"
+	type: "Convolution"
+	convolution_param {
+		num_output: 512
+		kernel_size: 1
+		pad: 0
+		stride: 1
+		bias_term: false
+	}
+}
+
+layer {
+	bottom: "res3b7_branch2c"
+	top: "bn3b7_branch2c"
+	name: "bn3b7_branch2c"
+	type: "BatchNorm"
+	batch_norm_param {
+		use_global_stats: true
+	}
+}
+
+layer {
+	bottom: "bn3b7_branch2c"
+	top: "bn3b7_branch2c"
+	name: "scale3b7_branch2c"
+	type: "Scale"
+	scale_param {
+		bias_term: true
+	}
+}
+
+layer {
+	bottom: "res3b6"
+	bottom: "bn3b7_branch2c"
+	top: "res3b7"
+	name: "res3b7"
+	type: "Eltwise"
+}
+
+layer {
+	bottom: "res3b7"
+	top: "res3b7"
+	name: "res3b7_relu"
+	type: "ReLU"
+}
+
+layer {
+	bottom: "res3b7"
+	top: "res4a_branch1"
+	name: "res4a_branch1"
+	type: "Convolution"
+	convolution_param {
+		num_output: 1024
+		kernel_size: 1
+		pad: 0
+		stride: 2
+		bias_term: false
+	}
+}
+
+layer {
+	bottom: "res4a_branch1"
+	top: "bn4a_branch1"
+	name: "bn4a_branch1"
+	type: "BatchNorm"
+	batch_norm_param {
+		use_global_stats: true
+	}
+}
+
+layer {
+	bottom: "bn4a_branch1"
+	top: "bn4a_branch1"
+	name: "scale4a_branch1"
+	type: "Scale"
+	scale_param {
+		bias_term: true
+	}
+}
+
+layer {
+	bottom: "res3b7"
+	top: "res4a_branch2a"
+	name: "res4a_branch2a"
+	type: "Convolution"
+	convolution_param {
+		num_output: 256
+		kernel_size: 1
+		pad: 0
+		stride: 2
+		bias_term: false
+	}
+}
+
+layer {
+	bottom: "res4a_branch2a"
+	top: "bn4a_branch2a"
+	name: "bn4a_branch2a"
+	type: "BatchNorm"
+	batch_norm_param {
+		use_global_stats: true
+	}
+}
+
+layer {
+	bottom: "bn4a_branch2a"
+	top: "bn4a_branch2a"
+	name: "scale4a_branch2a"
+	type: "Scale"
+	scale_param {
+		bias_term: true
+	}
+}
+
+layer {
+	top: "bn4a_branch2a"
+	bottom: "bn4a_branch2a"
+	name: "res4a_branch2a_relu"
+	type: "ReLU"
+}
+
+layer {
+	bottom: "bn4a_branch2a"
+	top: "res4a_branch2b"
+	name: "res4a_branch2b"
+	type: "Convolution"
+	convolution_param {
+		num_output: 256
+		kernel_size: 3
+		pad: 1
+		stride: 1
+		bias_term: false
+	}
+}
+
+layer {
+	bottom: "res4a_branch2b"
+	top: "bn4a_branch2b"
+	name: "bn4a_branch2b"
+	type: "BatchNorm"
+	batch_norm_param {
+		use_global_stats: true
+	}
+}
+
+layer {
+	bottom: "bn4a_branch2b"
+	top: "bn4a_branch2b"
+	name: "scale4a_branch2b"
+	type: "Scale"
+	scale_param {
+		bias_term: true
+	}
+}
+
+layer {
+	top: "bn4a_branch2b"
+	bottom: "bn4a_branch2b"
+	name: "res4a_branch2b_relu"
+	type: "ReLU"
+}
+
+layer {
+	bottom: "bn4a_branch2b"
+	top: "res4a_branch2c"
+	name: "res4a_branch2c"
+	type: "Convolution"
+	convolution_param {
+		num_output: 1024
+		kernel_size: 1
+		pad: 0
+		stride: 1
+		bias_term: false
+	}
+}
+
+layer {
+	bottom: "res4a_branch2c"
+	top: "bn4a_branch2c"
+	name: "bn4a_branch2c"
+	type: "BatchNorm"
+	batch_norm_param {
+		use_global_stats: true
+	}
+}
+
+layer {
+	bottom: "bn4a_branch2c"
+	top: "bn4a_branch2c"
+	name: "scale4a_branch2c"
+	type: "Scale"
+	scale_param {
+		bias_term: true
+	}
+}
+
+layer {
+	bottom: "bn4a_branch1"
+	bottom: "bn4a_branch2c"
+	top: "res4a"
+	name: "res4a"
+	type: "Eltwise"
+}
+
+layer {
+	bottom: "res4a"
+	top: "res4a"
+	name: "res4a_relu"
+	type: "ReLU"
+}
+
+layer {
+	bottom: "res4a"
+	top: "res4b1_branch2a"
+	name: "res4b1_branch2a"
+	type: "Convolution"
+	convolution_param {
+		num_output: 256
+		kernel_size: 1
+		pad: 0
+		stride: 1
+		bias_term: false
+	}
+}
+
+layer {
+	bottom: "res4b1_branch2a"
+	top: "bn4b1_branch2a"
+	name: "bn4b1_branch2a"
+	type: "BatchNorm"
+	batch_norm_param {
+		use_global_stats: true
+	}
+}
+
+layer {
+	bottom: "bn4b1_branch2a"
+	top: "bn4b1_branch2a"
+	name: "scale4b1_branch2a"
+	type: "Scale"
+	scale_param {
+		bias_term: true
+	}
+}
+
+layer {
+	top: "bn4b1_branch2a"
+	bottom: "bn4b1_branch2a"
+	name: "res4b1_branch2a_relu"
+	type: "ReLU"
+}
+
+layer {
+	bottom: "bn4b1_branch2a"
+	top: "res4b1_branch2b"
+	name: "res4b1_branch2b"
+	type: "Convolution"
+	convolution_param {
+		num_output: 256
+		kernel_size: 3
+		pad: 1
+		stride: 1
+		bias_term: false
+	}
+}
+
+layer {
+	bottom: "res4b1_branch2b"
+	top: "bn4b1_branch2b"
+	name: "bn4b1_branch2b"
+	type: "BatchNorm"
+	batch_norm_param {
+		use_global_stats: true
+	}
+}
+
+layer {
+	bottom: "bn4b1_branch2b"
+	top: "bn4b1_branch2b"
+	name: "scale4b1_branch2b"
+	type: "Scale"
+	scale_param {
+		bias_term: true
+	}
+}
+
+layer {
+	top: "bn4b1_branch2b"
+	bottom: "bn4b1_branch2b"
+	name: "res4b1_branch2b_relu"
+	type: "ReLU"
+}
+
+layer {
+	bottom: "bn4b1_branch2b"
+	top: "res4b1_branch2c"
+	name: "res4b1_branch2c"
+	type: "Convolution"
+	convolution_param {
+		num_output: 1024
+		kernel_size: 1
+		pad: 0
+		stride: 1
+		bias_term: false
+	}
+}
+
+layer {
+	bottom: "res4b1_branch2c"
+	top: "bn4b1_branch2c"
+	name: "bn4b1_branch2c"
+	type: "BatchNorm"
+	batch_norm_param {
+		use_global_stats: true
+	}
+}
+
+layer {
+	bottom: "bn4b1_branch2c"
+	top: "bn4b1_branch2c"
+	name: "scale4b1_branch2c"
+	type: "Scale"
+	scale_param {
+		bias_term: true
+	}
+}
+
+layer {
+	bottom: "res4a"
+	bottom: "bn4b1_branch2c"
+	top: "res4b1"
+	name: "res4b1"
+	type: "Eltwise"
+}
+
+layer {
+	bottom: "res4b1"
+	top: "res4b1"
+	name: "res4b1_relu"
+	type: "ReLU"
+}
+
+layer {
+	bottom: "res4b1"
+	top: "res4b2_branch2a"
+	name: "res4b2_branch2a"
+	type: "Convolution"
+	convolution_param {
+		num_output: 256
+		kernel_size: 1
+		pad: 0
+		stride: 1
+		bias_term: false
+	}
+}
+
+layer {
+	bottom: "res4b2_branch2a"
+	top: "bn4b2_branch2a"
+	name: "bn4b2_branch2a"
+	type: "BatchNorm"
+	batch_norm_param {
+		use_global_stats: true
+	}
+}
+
+layer {
+	bottom: "bn4b2_branch2a"
+	top: "bn4b2_branch2a"
+	name: "scale4b2_branch2a"
+	type: "Scale"
+	scale_param {
+		bias_term: true
+	}
+}
+
+layer {
+	top: "bn4b2_branch2a"
+	bottom: "bn4b2_branch2a"
+	name: "res4b2_branch2a_relu"
+	type: "ReLU"
+}
+
+layer {
+	bottom: "bn4b2_branch2a"
+	top: "res4b2_branch2b"
+	name: "res4b2_branch2b"
+	type: "Convolution"
+	convolution_param {
+		num_output: 256
+		kernel_size: 3
+		pad: 1
+		stride: 1
+		bias_term: false
+	}
+}
+
+layer {
+	bottom: "res4b2_branch2b"
+	top: "bn4b2_branch2b"
+	name: "bn4b2_branch2b"
+	type: "BatchNorm"
+	batch_norm_param {
+		use_global_stats: true
+	}
+}
+
+layer {
+	bottom: "bn4b2_branch2b"
+	top: "bn4b2_branch2b"
+	name: "scale4b2_branch2b"
+	type: "Scale"
+	scale_param {
+		bias_term: true
+	}
+}
+
+layer {
+	top: "bn4b2_branch2b"
+	bottom: "bn4b2_branch2b"
+	name: "res4b2_branch2b_relu"
+	type: "ReLU"
+}
+
+layer {
+	bottom: "bn4b2_branch2b"
+	top: "res4b2_branch2c"
+	name: "res4b2_branch2c"
+	type: "Convolution"
+	convolution_param {
+		num_output: 1024
+		kernel_size: 1
+		pad: 0
+		stride: 1
+		bias_term: false
+	}
+}
+
+layer {
+	bottom: "res4b2_branch2c"
+	top: "bn4b2_branch2c"
+	name: "bn4b2_branch2c"
+	type: "BatchNorm"
+	batch_norm_param {
+		use_global_stats: true
+	}
+}
+
+layer {
+	bottom: "bn4b2_branch2c"
+	top: "bn4b2_branch2c"
+	name: "scale4b2_branch2c"
+	type: "Scale"
+	scale_param {
+		bias_term: true
+	}
+}
+
+layer {
+	bottom: "res4b1"
+	bottom: "bn4b2_branch2c"
+	top: "res4b2"
+	name: "res4b2"
+	type: "Eltwise"
+}
+
+layer {
+	bottom: "res4b2"
+	top: "res4b2"
+	name: "res4b2_relu"
+	type: "ReLU"
+}
+
+layer {
+	bottom: "res4b2"
+	top: "res4b3_branch2a"
+	name: "res4b3_branch2a"
+	type: "Convolution"
+	convolution_param {
+		num_output: 256
+		kernel_size: 1
+		pad: 0
+		stride: 1
+		bias_term: false
+	}
+}
+
+layer {
+	bottom: "res4b3_branch2a"
+	top: "bn4b3_branch2a"
+	name: "bn4b3_branch2a"
+	type: "BatchNorm"
+	batch_norm_param {
+		use_global_stats: true
+	}
+}
+
+layer {
+	bottom: "bn4b3_branch2a"
+	top: "bn4b3_branch2a"
+	name: "scale4b3_branch2a"
+	type: "Scale"
+	scale_param {
+		bias_term: true
+	}
+}
+
+layer {
+	top: "bn4b3_branch2a"
+	bottom: "bn4b3_branch2a"
+	name: "res4b3_branch2a_relu"
+	type: "ReLU"
+}
+
+layer {
+	bottom: "bn4b3_branch2a"
+	top: "res4b3_branch2b"
+	name: "res4b3_branch2b"
+	type: "Convolution"
+	convolution_param {
+		num_output: 256
+		kernel_size: 3
+		pad: 1
+		stride: 1
+		bias_term: false
+	}
+}
+
+layer {
+	bottom: "res4b3_branch2b"
+	top: "bn4b3_branch2b"
+	name: "bn4b3_branch2b"
+	type: "BatchNorm"
+	batch_norm_param {
+		use_global_stats: true
+	}
+}
+
+layer {
+	bottom: "bn4b3_branch2b"
+	top: "bn4b3_branch2b"
+	name: "scale4b3_branch2b"
+	type: "Scale"
+	scale_param {
+		bias_term: true
+	}
+}
+
+layer {
+	top: "bn4b3_branch2b"
+	bottom: "bn4b3_branch2b"
+	name: "res4b3_branch2b_relu"
+	type: "ReLU"
+}
+
+layer {
+	bottom: "bn4b3_branch2b"
+	top: "res4b3_branch2c"
+	name: "res4b3_branch2c"
+	type: "Convolution"
+	convolution_param {
+		num_output: 1024
+		kernel_size: 1
+		pad: 0
+		stride: 1
+		bias_term: false
+	}
+}
+
+layer {
+	bottom: "res4b3_branch2c"
+	top: "bn4b3_branch2c"
+	name: "bn4b3_branch2c"
+	type: "BatchNorm"
+	batch_norm_param {
+		use_global_stats: true
+	}
+}
+
+layer {
+	bottom: "bn4b3_branch2c"
+	top: "bn4b3_branch2c"
+	name: "scale4b3_branch2c"
+	type: "Scale"
+	scale_param {
+		bias_term: true
+	}
+}
+
+layer {
+	bottom: "res4b2"
+	bottom: "bn4b3_branch2c"
+	top: "res4b3"
+	name: "res4b3"
+	type: "Eltwise"
+}
+
+layer {
+	bottom: "res4b3"
+	top: "res4b3"
+	name: "res4b3_relu"
+	type: "ReLU"
+}
+
+layer {
+	bottom: "res4b3"
+	top: "res4b4_branch2a"
+	name: "res4b4_branch2a"
+	type: "Convolution"
+	convolution_param {
+		num_output: 256
+		kernel_size: 1
+		pad: 0
+		stride: 1
+		bias_term: false
+	}
+}
+
+layer {
+	bottom: "res4b4_branch2a"
+	top: "bn4b4_branch2a"
+	name: "bn4b4_branch2a"
+	type: "BatchNorm"
+	batch_norm_param {
+		use_global_stats: true
+	}
+}
+
+layer {
+	bottom: "bn4b4_branch2a"
+	top: "bn4b4_branch2a"
+	name: "scale4b4_branch2a"
+	type: "Scale"
+	scale_param {
+		bias_term: true
+	}
+}
+
+layer {
+	top: "bn4b4_branch2a"
+	bottom: "bn4b4_branch2a"
+	name: "res4b4_branch2a_relu"
+	type: "ReLU"
+}
+
+layer {
+	bottom: "bn4b4_branch2a"
+	top: "res4b4_branch2b"
+	name: "res4b4_branch2b"
+	type: "Convolution"
+	convolution_param {
+		num_output: 256
+		kernel_size: 3
+		pad: 1
+		stride: 1
+		bias_term: false
+	}
+}
+
+layer {
+	bottom: "res4b4_branch2b"
+	top: "bn4b4_branch2b"
+	name: "bn4b4_branch2b"
+	type: "BatchNorm"
+	batch_norm_param {
+		use_global_stats: true
+	}
+}
+
+layer {
+	bottom: "bn4b4_branch2b"
+	top: "bn4b4_branch2b"
+	name: "scale4b4_branch2b"
+	type: "Scale"
+	scale_param {
+		bias_term: true
+	}
+}
+
+layer {
+	top: "bn4b4_branch2b"
+	bottom: "bn4b4_branch2b"
+	name: "res4b4_branch2b_relu"
+	type: "ReLU"
+}
+
+layer {
+	bottom: "bn4b4_branch2b"
+	top: "res4b4_branch2c"
+	name: "res4b4_branch2c"
+	type: "Convolution"
+	convolution_param {
+		num_output: 1024
+		kernel_size: 1
+		pad: 0
+		stride: 1
+		bias_term: false
+	}
+}
+
+layer {
+	bottom: "res4b4_branch2c"
+	top: "bn4b4_branch2c"
+	name: "bn4b4_branch2c"
+	type: "BatchNorm"
+	batch_norm_param {
+		use_global_stats: true
+	}
+}
+
+layer {
+	bottom: "bn4b4_branch2c"
+	top: "bn4b4_branch2c"
+	name: "scale4b4_branch2c"
+	type: "Scale"
+	scale_param {
+		bias_term: true
+	}
+}
+
+layer {
+	bottom: "res4b3"
+	bottom: "bn4b4_branch2c"
+	top: "res4b4"
+	name: "res4b4"
+	type: "Eltwise"
+}
+
+layer {
+	bottom: "res4b4"
+	top: "res4b4"
+	name: "res4b4_relu"
+	type: "ReLU"
+}
+
+layer {
+	bottom: "res4b4"
+	top: "res4b5_branch2a"
+	name: "res4b5_branch2a"
+	type: "Convolution"
+	convolution_param {
+		num_output: 256
+		kernel_size: 1
+		pad: 0
+		stride: 1
+		bias_term: false
+	}
+}
+
+layer {
+	bottom: "res4b5_branch2a"
+	top: "bn4b5_branch2a"
+	name: "bn4b5_branch2a"
+	type: "BatchNorm"
+	batch_norm_param {
+		use_global_stats: true
+	}
+}
+
+layer {
+	bottom: "bn4b5_branch2a"
+	top: "bn4b5_branch2a"
+	name: "scale4b5_branch2a"
+	type: "Scale"
+	scale_param {
+		bias_term: true
+	}
+}
+
+layer {
+	top: "bn4b5_branch2a"
+	bottom: "bn4b5_branch2a"
+	name: "res4b5_branch2a_relu"
+	type: "ReLU"
+}
+
+layer {
+	bottom: "bn4b5_branch2a"
+	top: "res4b5_branch2b"
+	name: "res4b5_branch2b"
+	type: "Convolution"
+	convolution_param {
+		num_output: 256
+		kernel_size: 3
+		pad: 1
+		stride: 1
+		bias_term: false
+	}
+}
+
+layer {
+	bottom: "res4b5_branch2b"
+	top: "bn4b5_branch2b"
+	name: "bn4b5_branch2b"
+	type: "BatchNorm"
+	batch_norm_param {
+		use_global_stats: true
+	}
+}
+
+layer {
+	bottom: "bn4b5_branch2b"
+	top: "bn4b5_branch2b"
+	name: "scale4b5_branch2b"
+	type: "Scale"
+	scale_param {
+		bias_term: true
+	}
+}
+
+layer {
+	top: "bn4b5_branch2b"
+	bottom: "bn4b5_branch2b"
+	name: "res4b5_branch2b_relu"
+	type: "ReLU"
+}
+
+layer {
+	bottom: "bn4b5_branch2b"
+	top: "res4b5_branch2c"
+	name: "res4b5_branch2c"
+	type: "Convolution"
+	convolution_param {
+		num_output: 1024
+		kernel_size: 1
+		pad: 0
+		stride: 1
+		bias_term: false
+	}
+}
+
+layer {
+	bottom: "res4b5_branch2c"
+	top: "bn4b5_branch2c"
+	name: "bn4b5_branch2c"
+	type: "BatchNorm"
+	batch_norm_param {
+		use_global_stats: true
+	}
+}
+
+layer {
+	bottom: "bn4b5_branch2c"
+	top: "bn4b5_branch2c"
+	name: "scale4b5_branch2c"
+	type: "Scale"
+	scale_param {
+		bias_term: true
+	}
+}
+
+layer {
+	bottom: "res4b4"
+	bottom: "bn4b5_branch2c"
+	top: "res4b5"
+	name: "res4b5"
+	type: "Eltwise"
+}
+
+layer {
+	bottom: "res4b5"
+	top: "res4b5"
+	name: "res4b5_relu"
+	type: "ReLU"
+}
+
+layer {
+	bottom: "res4b5"
+	top: "res4b6_branch2a"
+	name: "res4b6_branch2a"
+	type: "Convolution"
+	convolution_param {
+		num_output: 256
+		kernel_size: 1
+		pad: 0
+		stride: 1
+		bias_term: false
+	}
+}
+
+layer {
+	bottom: "res4b6_branch2a"
+	top: "bn4b6_branch2a"
+	name: "bn4b6_branch2a"
+	type: "BatchNorm"
+	batch_norm_param {
+		use_global_stats: true
+	}
+}
+
+layer {
+	bottom: "bn4b6_branch2a"
+	top: "bn4b6_branch2a"
+	name: "scale4b6_branch2a"
+	type: "Scale"
+	scale_param {
+		bias_term: true
+	}
+}
+
+layer {
+	top: "bn4b6_branch2a"
+	bottom: "bn4b6_branch2a"
+	name: "res4b6_branch2a_relu"
+	type: "ReLU"
+}
+
+layer {
+	bottom: "bn4b6_branch2a"
+	top: "res4b6_branch2b"
+	name: "res4b6_branch2b"
+	type: "Convolution"
+	convolution_param {
+		num_output: 256
+		kernel_size: 3
+		pad: 1
+		stride: 1
+		bias_term: false
+	}
+}
+
+layer {
+	bottom: "res4b6_branch2b"
+	top: "bn4b6_branch2b"
+	name: "bn4b6_branch2b"
+	type: "BatchNorm"
+	batch_norm_param {
+		use_global_stats: true
+	}
+}
+
+layer {
+	bottom: "bn4b6_branch2b"
+	top: "bn4b6_branch2b"
+	name: "scale4b6_branch2b"
+	type: "Scale"
+	scale_param {
+		bias_term: true
+	}
+}
+
+layer {
+	top: "bn4b6_branch2b"
+	bottom: "bn4b6_branch2b"
+	name: "res4b6_branch2b_relu"
+	type: "ReLU"
+}
+
+layer {
+	bottom: "bn4b6_branch2b"
+	top: "res4b6_branch2c"
+	name: "res4b6_branch2c"
+	type: "Convolution"
+	convolution_param {
+		num_output: 1024
+		kernel_size: 1
+		pad: 0
+		stride: 1
+		bias_term: false
+	}
+}
+
+layer {
+	bottom: "res4b6_branch2c"
+	top: "bn4b6_branch2c"
+	name: "bn4b6_branch2c"
+	type: "BatchNorm"
+	batch_norm_param {
+		use_global_stats: true
+	}
+}
+
+layer {
+	bottom: "bn4b6_branch2c"
+	top: "bn4b6_branch2c"
+	name: "scale4b6_branch2c"
+	type: "Scale"
+	scale_param {
+		bias_term: true
+	}
+}
+
+layer {
+	bottom: "res4b5"
+	bottom: "bn4b6_branch2c"
+	top: "res4b6"
+	name: "res4b6"
+	type: "Eltwise"
+}
+
+layer {
+	bottom: "res4b6"
+	top: "res4b6"
+	name: "res4b6_relu"
+	type: "ReLU"
+}
+
+layer {
+	bottom: "res4b6"
+	top: "res4b7_branch2a"
+	name: "res4b7_branch2a"
+	type: "Convolution"
+	convolution_param {
+		num_output: 256
+		kernel_size: 1
+		pad: 0
+		stride: 1
+		bias_term: false
+	}
+}
+
+layer {
+	bottom: "res4b7_branch2a"
+	top: "bn4b7_branch2a"
+	name: "bn4b7_branch2a"
+	type: "BatchNorm"
+	batch_norm_param {
+		use_global_stats: true
+	}
+}
+
+layer {
+	bottom: "bn4b7_branch2a"
+	top: "bn4b7_branch2a"
+	name: "scale4b7_branch2a"
+	type: "Scale"
+	scale_param {
+		bias_term: true
+	}
+}
+
+layer {
+	top: "bn4b7_branch2a"
+	bottom: "bn4b7_branch2a"
+	name: "res4b7_branch2a_relu"
+	type: "ReLU"
+}
+
+layer {
+	bottom: "bn4b7_branch2a"
+	top: "res4b7_branch2b"
+	name: "res4b7_branch2b"
+	type: "Convolution"
+	convolution_param {
+		num_output: 256
+		kernel_size: 3
+		pad: 1
+		stride: 1
+		bias_term: false
+	}
+}
+
+layer {
+	bottom: "res4b7_branch2b"
+	top: "bn4b7_branch2b"
+	name: "bn4b7_branch2b"
+	type: "BatchNorm"
+	batch_norm_param {
+		use_global_stats: true
+	}
+}
+
+layer {
+	bottom: "bn4b7_branch2b"
+	top: "bn4b7_branch2b"
+	name: "scale4b7_branch2b"
+	type: "Scale"
+	scale_param {
+		bias_term: true
+	}
+}
+
+layer {
+	top: "bn4b7_branch2b"
+	bottom: "bn4b7_branch2b"
+	name: "res4b7_branch2b_relu"
+	type: "ReLU"
+}
+
+layer {
+	bottom: "bn4b7_branch2b"
+	top: "res4b7_branch2c"
+	name: "res4b7_branch2c"
+	type: "Convolution"
+	convolution_param {
+		num_output: 1024
+		kernel_size: 1
+		pad: 0
+		stride: 1
+		bias_term: false
+	}
+}
+
+layer {
+	bottom: "res4b7_branch2c"
+	top: "bn4b7_branch2c"
+	name: "bn4b7_branch2c"
+	type: "BatchNorm"
+	batch_norm_param {
+		use_global_stats: true
+	}
+}
+
+layer {
+	bottom: "bn4b7_branch2c"
+	top: "bn4b7_branch2c"
+	name: "scale4b7_branch2c"
+	type: "Scale"
+	scale_param {
+		bias_term: true
+	}
+}
+
+layer {
+	bottom: "res4b6"
+	bottom: "bn4b7_branch2c"
+	top: "res4b7"
+	name: "res4b7"
+	type: "Eltwise"
+}
+
+layer {
+	bottom: "res4b7"
+	top: "res4b7"
+	name: "res4b7_relu"
+	type: "ReLU"
+}
+
+layer {
+	bottom: "res4b7"
+	top: "res4b8_branch2a"
+	name: "res4b8_branch2a"
+	type: "Convolution"
+	convolution_param {
+		num_output: 256
+		kernel_size: 1
+		pad: 0
+		stride: 1
+		bias_term: false
+	}
+}
+
+layer {
+	bottom: "res4b8_branch2a"
+	top: "bn4b8_branch2a"
+	name: "bn4b8_branch2a"
+	type: "BatchNorm"
+	batch_norm_param {
+		use_global_stats: true
+	}
+}
+
+layer {
+	bottom: "bn4b8_branch2a"
+	top: "bn4b8_branch2a"
+	name: "scale4b8_branch2a"
+	type: "Scale"
+	scale_param {
+		bias_term: true
+	}
+}
+
+layer {
+	top: "bn4b8_branch2a"
+	bottom: "bn4b8_branch2a"
+	name: "res4b8_branch2a_relu"
+	type: "ReLU"
+}
+
+layer {
+	bottom: "bn4b8_branch2a"
+	top: "res4b8_branch2b"
+	name: "res4b8_branch2b"
+	type: "Convolution"
+	convolution_param {
+		num_output: 256
+		kernel_size: 3
+		pad: 1
+		stride: 1
+		bias_term: false
+	}
+}
+
+layer {
+	bottom: "res4b8_branch2b"
+	top: "bn4b8_branch2b"
+	name: "bn4b8_branch2b"
+	type: "BatchNorm"
+	batch_norm_param {
+		use_global_stats: true
+	}
+}
+
+layer {
+	bottom: "bn4b8_branch2b"
+	top: "bn4b8_branch2b"
+	name: "scale4b8_branch2b"
+	type: "Scale"
+	scale_param {
+		bias_term: true
+	}
+}
+
+layer {
+	top: "bn4b8_branch2b"
+	bottom: "bn4b8_branch2b"
+	name: "res4b8_branch2b_relu"
+	type: "ReLU"
+}
+
+layer {
+	bottom: "bn4b8_branch2b"
+	top: "res4b8_branch2c"
+	name: "res4b8_branch2c"
+	type: "Convolution"
+	convolution_param {
+		num_output: 1024
+		kernel_size: 1
+		pad: 0
+		stride: 1
+		bias_term: false
+	}
+}
+
+layer {
+	bottom: "res4b8_branch2c"
+	top: "bn4b8_branch2c"
+	name: "bn4b8_branch2c"
+	type: "BatchNorm"
+	batch_norm_param {
+		use_global_stats: true
+	}
+}
+
+layer {
+	bottom: "bn4b8_branch2c"
+	top: "bn4b8_branch2c"
+	name: "scale4b8_branch2c"
+	type: "Scale"
+	scale_param {
+		bias_term: true
+	}
+}
+
+layer {
+	bottom: "res4b7"
+	bottom: "bn4b8_branch2c"
+	top: "res4b8"
+	name: "res4b8"
+	type: "Eltwise"
+}
+
+layer {
+	bottom: "res4b8"
+	top: "res4b8"
+	name: "res4b8_relu"
+	type: "ReLU"
+}
+
+layer {
+	bottom: "res4b8"
+	top: "res4b9_branch2a"
+	name: "res4b9_branch2a"
+	type: "Convolution"
+	convolution_param {
+		num_output: 256
+		kernel_size: 1
+		pad: 0
+		stride: 1
+		bias_term: false
+	}
+}
+
+layer {
+	bottom: "res4b9_branch2a"
+	top: "bn4b9_branch2a"
+	name: "bn4b9_branch2a"
+	type: "BatchNorm"
+	batch_norm_param {
+		use_global_stats: true
+	}
+}
+
+layer {
+	bottom: "bn4b9_branch2a"
+	top: "bn4b9_branch2a"
+	name: "scale4b9_branch2a"
+	type: "Scale"
+	scale_param {
+		bias_term: true
+	}
+}
+
+layer {
+	top: "bn4b9_branch2a"
+	bottom: "bn4b9_branch2a"
+	name: "res4b9_branch2a_relu"
+	type: "ReLU"
+}
+
+layer {
+	bottom: "bn4b9_branch2a"
+	top: "res4b9_branch2b"
+	name: "res4b9_branch2b"
+	type: "Convolution"
+	convolution_param {
+		num_output: 256
+		kernel_size: 3
+		pad: 1
+		stride: 1
+		bias_term: false
+	}
+}
+
+layer {
+	bottom: "res4b9_branch2b"
+	top: "bn4b9_branch2b"
+	name: "bn4b9_branch2b"
+	type: "BatchNorm"
+	batch_norm_param {
+		use_global_stats: true
+	}
+}
+
+layer {
+	bottom: "bn4b9_branch2b"
+	top: "bn4b9_branch2b"
+	name: "scale4b9_branch2b"
+	type: "Scale"
+	scale_param {
+		bias_term: true
+	}
+}
+
+layer {
+	top: "bn4b9_branch2b"
+	bottom: "bn4b9_branch2b"
+	name: "res4b9_branch2b_relu"
+	type: "ReLU"
+}
+
+layer {
+	bottom: "bn4b9_branch2b"
+	top: "res4b9_branch2c"
+	name: "res4b9_branch2c"
+	type: "Convolution"
+	convolution_param {
+		num_output: 1024
+		kernel_size: 1
+		pad: 0
+		stride: 1
+		bias_term: false
+	}
+}
+
+layer {
+	bottom: "res4b9_branch2c"
+	top: "bn4b9_branch2c"
+	name: "bn4b9_branch2c"
+	type: "BatchNorm"
+	batch_norm_param {
+		use_global_stats: true
+	}
+}
+
+layer {
+	bottom: "bn4b9_branch2c"
+	top: "bn4b9_branch2c"
+	name: "scale4b9_branch2c"
+	type: "Scale"
+	scale_param {
+		bias_term: true
+	}
+}
+
+layer {
+	bottom: "res4b8"
+	bottom: "bn4b9_branch2c"
+	top: "res4b9"
+	name: "res4b9"
+	type: "Eltwise"
+}
+
+layer {
+	bottom: "res4b9"
+	top: "res4b9"
+	name: "res4b9_relu"
+	type: "ReLU"
+}
+
+layer {
+	bottom: "res4b9"
+	top: "res4b10_branch2a"
+	name: "res4b10_branch2a"
+	type: "Convolution"
+	convolution_param {
+		num_output: 256
+		kernel_size: 1
+		pad: 0
+		stride: 1
+		bias_term: false
+	}
+}
+
+layer {
+	bottom: "res4b10_branch2a"
+	top: "bn4b10_branch2a"
+	name: "bn4b10_branch2a"
+	type: "BatchNorm"
+	batch_norm_param {
+		use_global_stats: true
+	}
+}
+
+layer {
+	bottom: "bn4b10_branch2a"
+	top: "bn4b10_branch2a"
+	name: "scale4b10_branch2a"
+	type: "Scale"
+	scale_param {
+		bias_term: true
+	}
+}
+
+layer {
+	top: "bn4b10_branch2a"
+	bottom: "bn4b10_branch2a"
+	name: "res4b10_branch2a_relu"
+	type: "ReLU"
+}
+
+layer {
+	bottom: "bn4b10_branch2a"
+	top: "res4b10_branch2b"
+	name: "res4b10_branch2b"
+	type: "Convolution"
+	convolution_param {
+		num_output: 256
+		kernel_size: 3
+		pad: 1
+		stride: 1
+		bias_term: false
+	}
+}
+
+layer {
+	bottom: "res4b10_branch2b"
+	top: "bn4b10_branch2b"
+	name: "bn4b10_branch2b"
+	type: "BatchNorm"
+	batch_norm_param {
+		use_global_stats: true
+	}
+}
+
+layer {
+	bottom: "bn4b10_branch2b"
+	top: "bn4b10_branch2b"
+	name: "scale4b10_branch2b"
+	type: "Scale"
+	scale_param {
+		bias_term: true
+	}
+}
+
+layer {
+	top: "bn4b10_branch2b"
+	bottom: "bn4b10_branch2b"
+	name: "res4b10_branch2b_relu"
+	type: "ReLU"
+}
+
+layer {
+	bottom: "bn4b10_branch2b"
+	top: "res4b10_branch2c"
+	name: "res4b10_branch2c"
+	type: "Convolution"
+	convolution_param {
+		num_output: 1024
+		kernel_size: 1
+		pad: 0
+		stride: 1
+		bias_term: false
+	}
+}
+
+layer {
+	bottom: "res4b10_branch2c"
+	top: "bn4b10_branch2c"
+	name: "bn4b10_branch2c"
+	type: "BatchNorm"
+	batch_norm_param {
+		use_global_stats: true
+	}
+}
+
+layer {
+	bottom: "bn4b10_branch2c"
+	top: "bn4b10_branch2c"
+	name: "scale4b10_branch2c"
+	type: "Scale"
+	scale_param {
+		bias_term: true
+	}
+}
+
+layer {
+	bottom: "res4b9"
+	bottom: "bn4b10_branch2c"
+	top: "res4b10"
+	name: "res4b10"
+	type: "Eltwise"
+}
+
+layer {
+	bottom: "res4b10"
+	top: "res4b10"
+	name: "res4b10_relu"
+	type: "ReLU"
+}
+
+layer {
+	bottom: "res4b10"
+	top: "res4b11_branch2a"
+	name: "res4b11_branch2a"
+	type: "Convolution"
+	convolution_param {
+		num_output: 256
+		kernel_size: 1
+		pad: 0
+		stride: 1
+		bias_term: false
+	}
+}
+
+layer {
+	bottom: "res4b11_branch2a"
+	top: "bn4b11_branch2a"
+	name: "bn4b11_branch2a"
+	type: "BatchNorm"
+	batch_norm_param {
+		use_global_stats: true
+	}
+}
+
+layer {
+	bottom: "bn4b11_branch2a"
+	top: "bn4b11_branch2a"
+	name: "scale4b11_branch2a"
+	type: "Scale"
+	scale_param {
+		bias_term: true
+	}
+}
+
+layer {
+	top: "bn4b11_branch2a"
+	bottom: "bn4b11_branch2a"
+	name: "res4b11_branch2a_relu"
+	type: "ReLU"
+}
+
+layer {
+	bottom: "bn4b11_branch2a"
+	top: "res4b11_branch2b"
+	name: "res4b11_branch2b"
+	type: "Convolution"
+	convolution_param {
+		num_output: 256
+		kernel_size: 3
+		pad: 1
+		stride: 1
+		bias_term: false
+	}
+}
+
+layer {
+	bottom: "res4b11_branch2b"
+	top: "bn4b11_branch2b"
+	name: "bn4b11_branch2b"
+	type: "BatchNorm"
+	batch_norm_param {
+		use_global_stats: true
+	}
+}
+
+layer {
+	bottom: "bn4b11_branch2b"
+	top: "bn4b11_branch2b"
+	name: "scale4b11_branch2b"
+	type: "Scale"
+	scale_param {
+		bias_term: true
+	}
+}
+
+layer {
+	top: "bn4b11_branch2b"
+	bottom: "bn4b11_branch2b"
+	name: "res4b11_branch2b_relu"
+	type: "ReLU"
+}
+
+layer {
+	bottom: "bn4b11_branch2b"
+	top: "res4b11_branch2c"
+	name: "res4b11_branch2c"
+	type: "Convolution"
+	convolution_param {
+		num_output: 1024
+		kernel_size: 1
+		pad: 0
+		stride: 1
+		bias_term: false
+	}
+}
+
+layer {
+	bottom: "res4b11_branch2c"
+	top: "bn4b11_branch2c"
+	name: "bn4b11_branch2c"
+	type: "BatchNorm"
+	batch_norm_param {
+		use_global_stats: true
+	}
+}
+
+layer {
+	bottom: "bn4b11_branch2c"
+	top: "bn4b11_branch2c"
+	name: "scale4b11_branch2c"
+	type: "Scale"
+	scale_param {
+		bias_term: true
+	}
+}
+
+layer {
+	bottom: "res4b10"
+	bottom: "bn4b11_branch2c"
+	top: "res4b11"
+	name: "res4b11"
+	type: "Eltwise"
+}
+
+layer {
+	bottom: "res4b11"
+	top: "res4b11"
+	name: "res4b11_relu"
+	type: "ReLU"
+}
+
+layer {
+	bottom: "res4b11"
+	top: "res4b12_branch2a"
+	name: "res4b12_branch2a"
+	type: "Convolution"
+	convolution_param {
+		num_output: 256
+		kernel_size: 1
+		pad: 0
+		stride: 1
+		bias_term: false
+	}
+}
+
+layer {
+	bottom: "res4b12_branch2a"
+	top: "bn4b12_branch2a"
+	name: "bn4b12_branch2a"
+	type: "BatchNorm"
+	batch_norm_param {
+		use_global_stats: true
+	}
+}
+
+layer {
+	bottom: "bn4b12_branch2a"
+	top: "bn4b12_branch2a"
+	name: "scale4b12_branch2a"
+	type: "Scale"
+	scale_param {
+		bias_term: true
+	}
+}
+
+layer {
+	top: "bn4b12_branch2a"
+	bottom: "bn4b12_branch2a"
+	name: "res4b12_branch2a_relu"
+	type: "ReLU"
+}
+
+layer {
+	bottom: "bn4b12_branch2a"
+	top: "res4b12_branch2b"
+	name: "res4b12_branch2b"
+	type: "Convolution"
+	convolution_param {
+		num_output: 256
+		kernel_size: 3
+		pad: 1
+		stride: 1
+		bias_term: false
+	}
+}
+
+layer {
+	bottom: "res4b12_branch2b"
+	top: "bn4b12_branch2b"
+	name: "bn4b12_branch2b"
+	type: "BatchNorm"
+	batch_norm_param {
+		use_global_stats: true
+	}
+}
+
+layer {
+	bottom: "bn4b12_branch2b"
+	top: "bn4b12_branch2b"
+	name: "scale4b12_branch2b"
+	type: "Scale"
+	scale_param {
+		bias_term: true
+	}
+}
+
+layer {
+	top: "bn4b12_branch2b"
+	bottom: "bn4b12_branch2b"
+	name: "res4b12_branch2b_relu"
+	type: "ReLU"
+}
+
+layer {
+	bottom: "bn4b12_branch2b"
+	top: "res4b12_branch2c"
+	name: "res4b12_branch2c"
+	type: "Convolution"
+	convolution_param {
+		num_output: 1024
+		kernel_size: 1
+		pad: 0
+		stride: 1
+		bias_term: false
+	}
+}
+
+layer {
+	bottom: "res4b12_branch2c"
+	top: "bn4b12_branch2c"
+	name: "bn4b12_branch2c"
+	type: "BatchNorm"
+	batch_norm_param {
+		use_global_stats: true
+	}
+}
+
+layer {
+	bottom: "bn4b12_branch2c"
+	top: "bn4b12_branch2c"
+	name: "scale4b12_branch2c"
+	type: "Scale"
+	scale_param {
+		bias_term: true
+	}
+}
+
+layer {
+	bottom: "res4b11"
+	bottom: "bn4b12_branch2c"
+	top: "res4b12"
+	name: "res4b12"
+	type: "Eltwise"
+}
+
+layer {
+	bottom: "res4b12"
+	top: "res4b12"
+	name: "res4b12_relu"
+	type: "ReLU"
+}
+
+layer {
+	bottom: "res4b12"
+	top: "res4b13_branch2a"
+	name: "res4b13_branch2a"
+	type: "Convolution"
+	convolution_param {
+		num_output: 256
+		kernel_size: 1
+		pad: 0
+		stride: 1
+		bias_term: false
+	}
+}
+
+layer {
+	bottom: "res4b13_branch2a"
+	top: "bn4b13_branch2a"
+	name: "bn4b13_branch2a"
+	type: "BatchNorm"
+	batch_norm_param {
+		use_global_stats: true
+	}
+}
+
+layer {
+	bottom: "bn4b13_branch2a"
+	top: "bn4b13_branch2a"
+	name: "scale4b13_branch2a"
+	type: "Scale"
+	scale_param {
+		bias_term: true
+	}
+}
+
+layer {
+	top: "bn4b13_branch2a"
+	bottom: "bn4b13_branch2a"
+	name: "res4b13_branch2a_relu"
+	type: "ReLU"
+}
+
+layer {
+	bottom: "bn4b13_branch2a"
+	top: "res4b13_branch2b"
+	name: "res4b13_branch2b"
+	type: "Convolution"
+	convolution_param {
+		num_output: 256
+		kernel_size: 3
+		pad: 1
+		stride: 1
+		bias_term: false
+	}
+}
+
+layer {
+	bottom: "res4b13_branch2b"
+	top: "bn4b13_branch2b"
+	name: "bn4b13_branch2b"
+	type: "BatchNorm"
+	batch_norm_param {
+		use_global_stats: true
+	}
+}
+
+layer {
+	bottom: "bn4b13_branch2b"
+	top: "bn4b13_branch2b"
+	name: "scale4b13_branch2b"
+	type: "Scale"
+	scale_param {
+		bias_term: true
+	}
+}
+
+layer {
+	top: "bn4b13_branch2b"
+	bottom: "bn4b13_branch2b"
+	name: "res4b13_branch2b_relu"
+	type: "ReLU"
+}
+
+layer {
+	bottom: "bn4b13_branch2b"
+	top: "res4b13_branch2c"
+	name: "res4b13_branch2c"
+	type: "Convolution"
+	convolution_param {
+		num_output: 1024
+		kernel_size: 1
+		pad: 0
+		stride: 1
+		bias_term: false
+	}
+}
+
+layer {
+	bottom: "res4b13_branch2c"
+	top: "bn4b13_branch2c"
+	name: "bn4b13_branch2c"
+	type: "BatchNorm"
+	batch_norm_param {
+		use_global_stats: true
+	}
+}
+
+layer {
+	bottom: "bn4b13_branch2c"
+	top: "bn4b13_branch2c"
+	name: "scale4b13_branch2c"
+	type: "Scale"
+	scale_param {
+		bias_term: true
+	}
+}
+
+layer {
+	bottom: "res4b12"
+	bottom: "bn4b13_branch2c"
+	top: "res4b13"
+	name: "res4b13"
+	type: "Eltwise"
+}
+
+layer {
+	bottom: "res4b13"
+	top: "res4b13"
+	name: "res4b13_relu"
+	type: "ReLU"
+}
+
+layer {
+	bottom: "res4b13"
+	top: "res4b14_branch2a"
+	name: "res4b14_branch2a"
+	type: "Convolution"
+	convolution_param {
+		num_output: 256
+		kernel_size: 1
+		pad: 0
+		stride: 1
+		bias_term: false
+	}
+}
+
+layer {
+	bottom: "res4b14_branch2a"
+	top: "bn4b14_branch2a"
+	name: "bn4b14_branch2a"
+	type: "BatchNorm"
+	batch_norm_param {
+		use_global_stats: true
+	}
+}
+
+layer {
+	bottom: "bn4b14_branch2a"
+	top: "bn4b14_branch2a"
+	name: "scale4b14_branch2a"
+	type: "Scale"
+	scale_param {
+		bias_term: true
+	}
+}
+
+layer {
+	top: "bn4b14_branch2a"
+	bottom: "bn4b14_branch2a"
+	name: "res4b14_branch2a_relu"
+	type: "ReLU"
+}
+
+layer {
+	bottom: "bn4b14_branch2a"
+	top: "res4b14_branch2b"
+	name: "res4b14_branch2b"
+	type: "Convolution"
+	convolution_param {
+		num_output: 256
+		kernel_size: 3
+		pad: 1
+		stride: 1
+		bias_term: false
+	}
+}
+
+layer {
+	bottom: "res4b14_branch2b"
+	top: "bn4b14_branch2b"
+	name: "bn4b14_branch2b"
+	type: "BatchNorm"
+	batch_norm_param {
+		use_global_stats: true
+	}
+}
+
+layer {
+	bottom: "bn4b14_branch2b"
+	top: "bn4b14_branch2b"
+	name: "scale4b14_branch2b"
+	type: "Scale"
+	scale_param {
+		bias_term: true
+	}
+}
+
+layer {
+	top: "bn4b14_branch2b"
+	bottom: "bn4b14_branch2b"
+	name: "res4b14_branch2b_relu"
+	type: "ReLU"
+}
+
+layer {
+	bottom: "bn4b14_branch2b"
+	top: "res4b14_branch2c"
+	name: "res4b14_branch2c"
+	type: "Convolution"
+	convolution_param {
+		num_output: 1024
+		kernel_size: 1
+		pad: 0
+		stride: 1
+		bias_term: false
+	}
+}
+
+layer {
+	bottom: "res4b14_branch2c"
+	top: "bn4b14_branch2c"
+	name: "bn4b14_branch2c"
+	type: "BatchNorm"
+	batch_norm_param {
+		use_global_stats: true
+	}
+}
+
+layer {
+	bottom: "bn4b14_branch2c"
+	top: "bn4b14_branch2c"
+	name: "scale4b14_branch2c"
+	type: "Scale"
+	scale_param {
+		bias_term: true
+	}
+}
+
+layer {
+	bottom: "res4b13"
+	bottom: "bn4b14_branch2c"
+	top: "res4b14"
+	name: "res4b14"
+	type: "Eltwise"
+}
+
+layer {
+	bottom: "res4b14"
+	top: "res4b14"
+	name: "res4b14_relu"
+	type: "ReLU"
+}
+
+layer {
+	bottom: "res4b14"
+	top: "res4b15_branch2a"
+	name: "res4b15_branch2a"
+	type: "Convolution"
+	convolution_param {
+		num_output: 256
+		kernel_size: 1
+		pad: 0
+		stride: 1
+		bias_term: false
+	}
+}
+
+layer {
+	bottom: "res4b15_branch2a"
+	top: "bn4b15_branch2a"
+	name: "bn4b15_branch2a"
+	type: "BatchNorm"
+	batch_norm_param {
+		use_global_stats: true
+	}
+}
+
+layer {
+	bottom: "bn4b15_branch2a"
+	top: "bn4b15_branch2a"
+	name: "scale4b15_branch2a"
+	type: "Scale"
+	scale_param {
+		bias_term: true
+	}
+}
+
+layer {
+	top: "bn4b15_branch2a"
+	bottom: "bn4b15_branch2a"
+	name: "res4b15_branch2a_relu"
+	type: "ReLU"
+}
+
+layer {
+	bottom: "bn4b15_branch2a"
+	top: "res4b15_branch2b"
+	name: "res4b15_branch2b"
+	type: "Convolution"
+	convolution_param {
+		num_output: 256
+		kernel_size: 3
+		pad: 1
+		stride: 1
+		bias_term: false
+	}
+}
+
+layer {
+	bottom: "res4b15_branch2b"
+	top: "bn4b15_branch2b"
+	name: "bn4b15_branch2b"
+	type: "BatchNorm"
+	batch_norm_param {
+		use_global_stats: true
+	}
+}
+
+layer {
+	bottom: "bn4b15_branch2b"
+	top: "bn4b15_branch2b"
+	name: "scale4b15_branch2b"
+	type: "Scale"
+	scale_param {
+		bias_term: true
+	}
+}
+
+layer {
+	top: "bn4b15_branch2b"
+	bottom: "bn4b15_branch2b"
+	name: "res4b15_branch2b_relu"
+	type: "ReLU"
+}
+
+layer {
+	bottom: "bn4b15_branch2b"
+	top: "res4b15_branch2c"
+	name: "res4b15_branch2c"
+	type: "Convolution"
+	convolution_param {
+		num_output: 1024
+		kernel_size: 1
+		pad: 0
+		stride: 1
+		bias_term: false
+	}
+}
+
+layer {
+	bottom: "res4b15_branch2c"
+	top: "bn4b15_branch2c"
+	name: "bn4b15_branch2c"
+	type: "BatchNorm"
+	batch_norm_param {
+		use_global_stats: true
+	}
+}
+
+layer {
+	bottom: "bn4b15_branch2c"
+	top: "bn4b15_branch2c"
+	name: "scale4b15_branch2c"
+	type: "Scale"
+	scale_param {
+		bias_term: true
+	}
+}
+
+layer {
+	bottom: "res4b14"
+	bottom: "bn4b15_branch2c"
+	top: "res4b15"
+	name: "res4b15"
+	type: "Eltwise"
+}
+
+layer {
+	bottom: "res4b15"
+	top: "res4b15"
+	name: "res4b15_relu"
+	type: "ReLU"
+}
+
+layer {
+	bottom: "res4b15"
+	top: "res4b16_branch2a"
+	name: "res4b16_branch2a"
+	type: "Convolution"
+	convolution_param {
+		num_output: 256
+		kernel_size: 1
+		pad: 0
+		stride: 1
+		bias_term: false
+	}
+}
+
+layer {
+	bottom: "res4b16_branch2a"
+	top: "bn4b16_branch2a"
+	name: "bn4b16_branch2a"
+	type: "BatchNorm"
+	batch_norm_param {
+		use_global_stats: true
+	}
+}
+
+layer {
+	bottom: "bn4b16_branch2a"
+	top: "bn4b16_branch2a"
+	name: "scale4b16_branch2a"
+	type: "Scale"
+	scale_param {
+		bias_term: true
+	}
+}
+
+layer {
+	top: "bn4b16_branch2a"
+	bottom: "bn4b16_branch2a"
+	name: "res4b16_branch2a_relu"
+	type: "ReLU"
+}
+
+layer {
+	bottom: "bn4b16_branch2a"
+	top: "res4b16_branch2b"
+	name: "res4b16_branch2b"
+	type: "Convolution"
+	convolution_param {
+		num_output: 256
+		kernel_size: 3
+		pad: 1
+		stride: 1
+		bias_term: false
+	}
+}
+
+layer {
+	bottom: "res4b16_branch2b"
+	top: "bn4b16_branch2b"
+	name: "bn4b16_branch2b"
+	type: "BatchNorm"
+	batch_norm_param {
+		use_global_stats: true
+	}
+}
+
+layer {
+	bottom: "bn4b16_branch2b"
+	top: "bn4b16_branch2b"
+	name: "scale4b16_branch2b"
+	type: "Scale"
+	scale_param {
+		bias_term: true
+	}
+}
+
+layer {
+	top: "bn4b16_branch2b"
+	bottom: "bn4b16_branch2b"
+	name: "res4b16_branch2b_relu"
+	type: "ReLU"
+}
+
+layer {
+	bottom: "bn4b16_branch2b"
+	top: "res4b16_branch2c"
+	name: "res4b16_branch2c"
+	type: "Convolution"
+	convolution_param {
+		num_output: 1024
+		kernel_size: 1
+		pad: 0
+		stride: 1
+		bias_term: false
+	}
+}
+
+layer {
+	bottom: "res4b16_branch2c"
+	top: "bn4b16_branch2c"
+	name: "bn4b16_branch2c"
+	type: "BatchNorm"
+	batch_norm_param {
+		use_global_stats: true
+	}
+}
+
+layer {
+	bottom: "bn4b16_branch2c"
+	top: "bn4b16_branch2c"
+	name: "scale4b16_branch2c"
+	type: "Scale"
+	scale_param {
+		bias_term: true
+	}
+}
+
+layer {
+	bottom: "res4b15"
+	bottom: "bn4b16_branch2c"
+	top: "res4b16"
+	name: "res4b16"
+	type: "Eltwise"
+}
+
+layer {
+	bottom: "res4b16"
+	top: "res4b16"
+	name: "res4b16_relu"
+	type: "ReLU"
+}
+
+layer {
+	bottom: "res4b16"
+	top: "res4b17_branch2a"
+	name: "res4b17_branch2a"
+	type: "Convolution"
+	convolution_param {
+		num_output: 256
+		kernel_size: 1
+		pad: 0
+		stride: 1
+		bias_term: false
+	}
+}
+
+layer {
+	bottom: "res4b17_branch2a"
+	top: "bn4b17_branch2a"
+	name: "bn4b17_branch2a"
+	type: "BatchNorm"
+	batch_norm_param {
+		use_global_stats: true
+	}
+}
+
+layer {
+	bottom: "bn4b17_branch2a"
+	top: "bn4b17_branch2a"
+	name: "scale4b17_branch2a"
+	type: "Scale"
+	scale_param {
+		bias_term: true
+	}
+}
+
+layer {
+	top: "bn4b17_branch2a"
+	bottom: "bn4b17_branch2a"
+	name: "res4b17_branch2a_relu"
+	type: "ReLU"
+}
+
+layer {
+	bottom: "bn4b17_branch2a"
+	top: "res4b17_branch2b"
+	name: "res4b17_branch2b"
+	type: "Convolution"
+	convolution_param {
+		num_output: 256
+		kernel_size: 3
+		pad: 1
+		stride: 1
+		bias_term: false
+	}
+}
+
+layer {
+	bottom: "res4b17_branch2b"
+	top: "bn4b17_branch2b"
+	name: "bn4b17_branch2b"
+	type: "BatchNorm"
+	batch_norm_param {
+		use_global_stats: true
+	}
+}
+
+layer {
+	bottom: "bn4b17_branch2b"
+	top: "bn4b17_branch2b"
+	name: "scale4b17_branch2b"
+	type: "Scale"
+	scale_param {
+		bias_term: true
+	}
+}
+
+layer {
+	top: "bn4b17_branch2b"
+	bottom: "bn4b17_branch2b"
+	name: "res4b17_branch2b_relu"
+	type: "ReLU"
+}
+
+layer {
+	bottom: "bn4b17_branch2b"
+	top: "res4b17_branch2c"
+	name: "res4b17_branch2c"
+	type: "Convolution"
+	convolution_param {
+		num_output: 1024
+		kernel_size: 1
+		pad: 0
+		stride: 1
+		bias_term: false
+	}
+}
+
+layer {
+	bottom: "res4b17_branch2c"
+	top: "bn4b17_branch2c"
+	name: "bn4b17_branch2c"
+	type: "BatchNorm"
+	batch_norm_param {
+		use_global_stats: true
+	}
+}
+
+layer {
+	bottom: "bn4b17_branch2c"
+	top: "bn4b17_branch2c"
+	name: "scale4b17_branch2c"
+	type: "Scale"
+	scale_param {
+		bias_term: true
+	}
+}
+
+layer {
+	bottom: "res4b16"
+	bottom: "bn4b17_branch2c"
+	top: "res4b17"
+	name: "res4b17"
+	type: "Eltwise"
+}
+
+layer {
+	bottom: "res4b17"
+	top: "res4b17"
+	name: "res4b17_relu"
+	type: "ReLU"
+}
+
+layer {
+	bottom: "res4b17"
+	top: "res4b18_branch2a"
+	name: "res4b18_branch2a"
+	type: "Convolution"
+	convolution_param {
+		num_output: 256
+		kernel_size: 1
+		pad: 0
+		stride: 1
+		bias_term: false
+	}
+}
+
+layer {
+	bottom: "res4b18_branch2a"
+	top: "bn4b18_branch2a"
+	name: "bn4b18_branch2a"
+	type: "BatchNorm"
+	batch_norm_param {
+		use_global_stats: true
+	}
+}
+
+layer {
+	bottom: "bn4b18_branch2a"
+	top: "bn4b18_branch2a"
+	name: "scale4b18_branch2a"
+	type: "Scale"
+	scale_param {
+		bias_term: true
+	}
+}
+
+layer {
+	top: "bn4b18_branch2a"
+	bottom: "bn4b18_branch2a"
+	name: "res4b18_branch2a_relu"
+	type: "ReLU"
+}
+
+layer {
+	bottom: "bn4b18_branch2a"
+	top: "res4b18_branch2b"
+	name: "res4b18_branch2b"
+	type: "Convolution"
+	convolution_param {
+		num_output: 256
+		kernel_size: 3
+		pad: 1
+		stride: 1
+		bias_term: false
+	}
+}
+
+layer {
+	bottom: "res4b18_branch2b"
+	top: "bn4b18_branch2b"
+	name: "bn4b18_branch2b"
+	type: "BatchNorm"
+	batch_norm_param {
+		use_global_stats: true
+	}
+}
+
+layer {
+	bottom: "bn4b18_branch2b"
+	top: "bn4b18_branch2b"
+	name: "scale4b18_branch2b"
+	type: "Scale"
+	scale_param {
+		bias_term: true
+	}
+}
+
+layer {
+	top: "bn4b18_branch2b"
+	bottom: "bn4b18_branch2b"
+	name: "res4b18_branch2b_relu"
+	type: "ReLU"
+}
+
+layer {
+	bottom: "bn4b18_branch2b"
+	top: "res4b18_branch2c"
+	name: "res4b18_branch2c"
+	type: "Convolution"
+	convolution_param {
+		num_output: 1024
+		kernel_size: 1
+		pad: 0
+		stride: 1
+		bias_term: false
+	}
+}
+
+layer {
+	bottom: "res4b18_branch2c"
+	top: "bn4b18_branch2c"
+	name: "bn4b18_branch2c"
+	type: "BatchNorm"
+	batch_norm_param {
+		use_global_stats: true
+	}
+}
+
+layer {
+	bottom: "bn4b18_branch2c"
+	top: "bn4b18_branch2c"
+	name: "scale4b18_branch2c"
+	type: "Scale"
+	scale_param {
+		bias_term: true
+	}
+}
+
+layer {
+	bottom: "res4b17"
+	bottom: "bn4b18_branch2c"
+	top: "res4b18"
+	name: "res4b18"
+	type: "Eltwise"
+}
+
+layer {
+	bottom: "res4b18"
+	top: "res4b18"
+	name: "res4b18_relu"
+	type: "ReLU"
+}
+
+layer {
+	bottom: "res4b18"
+	top: "res4b19_branch2a"
+	name: "res4b19_branch2a"
+	type: "Convolution"
+	convolution_param {
+		num_output: 256
+		kernel_size: 1
+		pad: 0
+		stride: 1
+		bias_term: false
+	}
+}
+
+layer {
+	bottom: "res4b19_branch2a"
+	top: "bn4b19_branch2a"
+	name: "bn4b19_branch2a"
+	type: "BatchNorm"
+	batch_norm_param {
+		use_global_stats: true
+	}
+}
+
+layer {
+	bottom: "bn4b19_branch2a"
+	top: "bn4b19_branch2a"
+	name: "scale4b19_branch2a"
+	type: "Scale"
+	scale_param {
+		bias_term: true
+	}
+}
+
+layer {
+	top: "bn4b19_branch2a"
+	bottom: "bn4b19_branch2a"
+	name: "res4b19_branch2a_relu"
+	type: "ReLU"
+}
+
+layer {
+	bottom: "bn4b19_branch2a"
+	top: "res4b19_branch2b"
+	name: "res4b19_branch2b"
+	type: "Convolution"
+	convolution_param {
+		num_output: 256
+		kernel_size: 3
+		pad: 1
+		stride: 1
+		bias_term: false
+	}
+}
+
+layer {
+	bottom: "res4b19_branch2b"
+	top: "bn4b19_branch2b"
+	name: "bn4b19_branch2b"
+	type: "BatchNorm"
+	batch_norm_param {
+		use_global_stats: true
+	}
+}
+
+layer {
+	bottom: "bn4b19_branch2b"
+	top: "bn4b19_branch2b"
+	name: "scale4b19_branch2b"
+	type: "Scale"
+	scale_param {
+		bias_term: true
+	}
+}
+
+layer {
+	top: "bn4b19_branch2b"
+	bottom: "bn4b19_branch2b"
+	name: "res4b19_branch2b_relu"
+	type: "ReLU"
+}
+
+layer {
+	bottom: "bn4b19_branch2b"
+	top: "res4b19_branch2c"
+	name: "res4b19_branch2c"
+	type: "Convolution"
+	convolution_param {
+		num_output: 1024
+		kernel_size: 1
+		pad: 0
+		stride: 1
+		bias_term: false
+	}
+}
+
+layer {
+	bottom: "res4b19_branch2c"
+	top: "bn4b19_branch2c"
+	name: "bn4b19_branch2c"
+	type: "BatchNorm"
+	batch_norm_param {
+		use_global_stats: true
+	}
+}
+
+layer {
+	bottom: "bn4b19_branch2c"
+	top: "bn4b19_branch2c"
+	name: "scale4b19_branch2c"
+	type: "Scale"
+	scale_param {
+		bias_term: true
+	}
+}
+
+layer {
+	bottom: "res4b18"
+	bottom: "bn4b19_branch2c"
+	top: "res4b19"
+	name: "res4b19"
+	type: "Eltwise"
+}
+
+layer {
+	bottom: "res4b19"
+	top: "res4b19"
+	name: "res4b19_relu"
+	type: "ReLU"
+}
+
+layer {
+	bottom: "res4b19"
+	top: "res4b20_branch2a"
+	name: "res4b20_branch2a"
+	type: "Convolution"
+	convolution_param {
+		num_output: 256
+		kernel_size: 1
+		pad: 0
+		stride: 1
+		bias_term: false
+	}
+}
+
+layer {
+	bottom: "res4b20_branch2a"
+	top: "bn4b20_branch2a"
+	name: "bn4b20_branch2a"
+	type: "BatchNorm"
+	batch_norm_param {
+		use_global_stats: true
+	}
+}
+
+layer {
+	bottom: "bn4b20_branch2a"
+	top: "bn4b20_branch2a"
+	name: "scale4b20_branch2a"
+	type: "Scale"
+	scale_param {
+		bias_term: true
+	}
+}
+
+layer {
+	top: "bn4b20_branch2a"
+	bottom: "bn4b20_branch2a"
+	name: "res4b20_branch2a_relu"
+	type: "ReLU"
+}
+
+layer {
+	bottom: "bn4b20_branch2a"
+	top: "res4b20_branch2b"
+	name: "res4b20_branch2b"
+	type: "Convolution"
+	convolution_param {
+		num_output: 256
+		kernel_size: 3
+		pad: 1
+		stride: 1
+		bias_term: false
+	}
+}
+
+layer {
+	bottom: "res4b20_branch2b"
+	top: "bn4b20_branch2b"
+	name: "bn4b20_branch2b"
+	type: "BatchNorm"
+	batch_norm_param {
+		use_global_stats: true
+	}
+}
+
+layer {
+	bottom: "bn4b20_branch2b"
+	top: "bn4b20_branch2b"
+	name: "scale4b20_branch2b"
+	type: "Scale"
+	scale_param {
+		bias_term: true
+	}
+}
+
+layer {
+	top: "bn4b20_branch2b"
+	bottom: "bn4b20_branch2b"
+	name: "res4b20_branch2b_relu"
+	type: "ReLU"
+}
+
+layer {
+	bottom: "bn4b20_branch2b"
+	top: "res4b20_branch2c"
+	name: "res4b20_branch2c"
+	type: "Convolution"
+	convolution_param {
+		num_output: 1024
+		kernel_size: 1
+		pad: 0
+		stride: 1
+		bias_term: false
+	}
+}
+
+layer {
+	bottom: "res4b20_branch2c"
+	top: "bn4b20_branch2c"
+	name: "bn4b20_branch2c"
+	type: "BatchNorm"
+	batch_norm_param {
+		use_global_stats: true
+	}
+}
+
+layer {
+	bottom: "bn4b20_branch2c"
+	top: "bn4b20_branch2c"
+	name: "scale4b20_branch2c"
+	type: "Scale"
+	scale_param {
+		bias_term: true
+	}
+}
+
+layer {
+	bottom: "res4b19"
+	bottom: "bn4b20_branch2c"
+	top: "res4b20"
+	name: "res4b20"
+	type: "Eltwise"
+}
+
+layer {
+	bottom: "res4b20"
+	top: "res4b20"
+	name: "res4b20_relu"
+	type: "ReLU"
+}
+
+layer {
+	bottom: "res4b20"
+	top: "res4b21_branch2a"
+	name: "res4b21_branch2a"
+	type: "Convolution"
+	convolution_param {
+		num_output: 256
+		kernel_size: 1
+		pad: 0
+		stride: 1
+		bias_term: false
+	}
+}
+
+layer {
+	bottom: "res4b21_branch2a"
+	top: "bn4b21_branch2a"
+	name: "bn4b21_branch2a"
+	type: "BatchNorm"
+	batch_norm_param {
+		use_global_stats: true
+	}
+}
+
+layer {
+	bottom: "bn4b21_branch2a"
+	top: "bn4b21_branch2a"
+	name: "scale4b21_branch2a"
+	type: "Scale"
+	scale_param {
+		bias_term: true
+	}
+}
+
+layer {
+	top: "bn4b21_branch2a"
+	bottom: "bn4b21_branch2a"
+	name: "res4b21_branch2a_relu"
+	type: "ReLU"
+}
+
+layer {
+	bottom: "bn4b21_branch2a"
+	top: "res4b21_branch2b"
+	name: "res4b21_branch2b"
+	type: "Convolution"
+	convolution_param {
+		num_output: 256
+		kernel_size: 3
+		pad: 1
+		stride: 1
+		bias_term: false
+	}
+}
+
+layer {
+	bottom: "res4b21_branch2b"
+	top: "bn4b21_branch2b"
+	name: "bn4b21_branch2b"
+	type: "BatchNorm"
+	batch_norm_param {
+		use_global_stats: true
+	}
+}
+
+layer {
+	bottom: "bn4b21_branch2b"
+	top: "bn4b21_branch2b"
+	name: "scale4b21_branch2b"
+	type: "Scale"
+	scale_param {
+		bias_term: true
+	}
+}
+
+layer {
+	top: "bn4b21_branch2b"
+	bottom: "bn4b21_branch2b"
+	name: "res4b21_branch2b_relu"
+	type: "ReLU"
+}
+
+layer {
+	bottom: "bn4b21_branch2b"
+	top: "res4b21_branch2c"
+	name: "res4b21_branch2c"
+	type: "Convolution"
+	convolution_param {
+		num_output: 1024
+		kernel_size: 1
+		pad: 0
+		stride: 1
+		bias_term: false
+	}
+}
+
+layer {
+	bottom: "res4b21_branch2c"
+	top: "bn4b21_branch2c"
+	name: "bn4b21_branch2c"
+	type: "BatchNorm"
+	batch_norm_param {
+		use_global_stats: true
+	}
+}
+
+layer {
+	bottom: "bn4b21_branch2c"
+	top: "bn4b21_branch2c"
+	name: "scale4b21_branch2c"
+	type: "Scale"
+	scale_param {
+		bias_term: true
+	}
+}
+
+layer {
+	bottom: "res4b20"
+	bottom: "bn4b21_branch2c"
+	top: "res4b21"
+	name: "res4b21"
+	type: "Eltwise"
+}
+
+layer {
+	bottom: "res4b21"
+	top: "res4b21"
+	name: "res4b21_relu"
+	type: "ReLU"
+}
+
+layer {
+	bottom: "res4b21"
+	top: "res4b22_branch2a"
+	name: "res4b22_branch2a"
+	type: "Convolution"
+	convolution_param {
+		num_output: 256
+		kernel_size: 1
+		pad: 0
+		stride: 1
+		bias_term: false
+	}
+}
+
+layer {
+	bottom: "res4b22_branch2a"
+	top: "bn4b22_branch2a"
+	name: "bn4b22_branch2a"
+	type: "BatchNorm"
+	batch_norm_param {
+		use_global_stats: true
+	}
+}
+
+layer {
+	bottom: "bn4b22_branch2a"
+	top: "bn4b22_branch2a"
+	name: "scale4b22_branch2a"
+	type: "Scale"
+	scale_param {
+		bias_term: true
+	}
+}
+
+layer {
+	top: "bn4b22_branch2a"
+	bottom: "bn4b22_branch2a"
+	name: "res4b22_branch2a_relu"
+	type: "ReLU"
+}
+
+layer {
+	bottom: "bn4b22_branch2a"
+	top: "res4b22_branch2b"
+	name: "res4b22_branch2b"
+	type: "Convolution"
+	convolution_param {
+		num_output: 256
+		kernel_size: 3
+		pad: 1
+		stride: 1
+		bias_term: false
+	}
+}
+
+layer {
+	bottom: "res4b22_branch2b"
+	top: "bn4b22_branch2b"
+	name: "bn4b22_branch2b"
+	type: "BatchNorm"
+	batch_norm_param {
+		use_global_stats: true
+	}
+}
+
+layer {
+	bottom: "bn4b22_branch2b"
+	top: "bn4b22_branch2b"
+	name: "scale4b22_branch2b"
+	type: "Scale"
+	scale_param {
+		bias_term: true
+	}
+}
+
+layer {
+	top: "bn4b22_branch2b"
+	bottom: "bn4b22_branch2b"
+	name: "res4b22_branch2b_relu"
+	type: "ReLU"
+}
+
+layer {
+	bottom: "bn4b22_branch2b"
+	top: "res4b22_branch2c"
+	name: "res4b22_branch2c"
+	type: "Convolution"
+	convolution_param {
+		num_output: 1024
+		kernel_size: 1
+		pad: 0
+		stride: 1
+		bias_term: false
+	}
+}
+
+layer {
+	bottom: "res4b22_branch2c"
+	top: "bn4b22_branch2c"
+	name: "bn4b22_branch2c"
+	type: "BatchNorm"
+	batch_norm_param {
+		use_global_stats: true
+	}
+}
+
+layer {
+	bottom: "bn4b22_branch2c"
+	top: "bn4b22_branch2c"
+	name: "scale4b22_branch2c"
+	type: "Scale"
+	scale_param {
+		bias_term: true
+	}
+}
+
+layer {
+	bottom: "res4b21"
+	bottom: "bn4b22_branch2c"
+	top: "res4b22"
+	name: "res4b22"
+	type: "Eltwise"
+}
+
+layer {
+	bottom: "res4b22"
+	top: "res4b22"
+	name: "res4b22_relu"
+	type: "ReLU"
+}
+
+layer {
+	bottom: "res4b22"
+	top: "res4b23_branch2a"
+	name: "res4b23_branch2a"
+	type: "Convolution"
+	convolution_param {
+		num_output: 256
+		kernel_size: 1
+		pad: 0
+		stride: 1
+		bias_term: false
+	}
+}
+
+layer {
+	bottom: "res4b23_branch2a"
+	top: "bn4b23_branch2a"
+	name: "bn4b23_branch2a"
+	type: "BatchNorm"
+	batch_norm_param {
+		use_global_stats: true
+	}
+}
+
+layer {
+	bottom: "bn4b23_branch2a"
+	top: "bn4b23_branch2a"
+	name: "scale4b23_branch2a"
+	type: "Scale"
+	scale_param {
+		bias_term: true
+	}
+}
+
+layer {
+	top: "bn4b23_branch2a"
+	bottom: "bn4b23_branch2a"
+	name: "res4b23_branch2a_relu"
+	type: "ReLU"
+}
+
+layer {
+	bottom: "bn4b23_branch2a"
+	top: "res4b23_branch2b"
+	name: "res4b23_branch2b"
+	type: "Convolution"
+	convolution_param {
+		num_output: 256
+		kernel_size: 3
+		pad: 1
+		stride: 1
+		bias_term: false
+	}
+}
+
+layer {
+	bottom: "res4b23_branch2b"
+	top: "bn4b23_branch2b"
+	name: "bn4b23_branch2b"
+	type: "BatchNorm"
+	batch_norm_param {
+		use_global_stats: true
+	}
+}
+
+layer {
+	bottom: "bn4b23_branch2b"
+	top: "bn4b23_branch2b"
+	name: "scale4b23_branch2b"
+	type: "Scale"
+	scale_param {
+		bias_term: true
+	}
+}
+
+layer {
+	top: "bn4b23_branch2b"
+	bottom: "bn4b23_branch2b"
+	name: "res4b23_branch2b_relu"
+	type: "ReLU"
+}
+
+layer {
+	bottom: "bn4b23_branch2b"
+	top: "res4b23_branch2c"
+	name: "res4b23_branch2c"
+	type: "Convolution"
+	convolution_param {
+		num_output: 1024
+		kernel_size: 1
+		pad: 0
+		stride: 1
+		bias_term: false
+	}
+}
+
+layer {
+	bottom: "res4b23_branch2c"
+	top: "bn4b23_branch2c"
+	name: "bn4b23_branch2c"
+	type: "BatchNorm"
+	batch_norm_param {
+		use_global_stats: true
+	}
+}
+
+layer {
+	bottom: "bn4b23_branch2c"
+	top: "bn4b23_branch2c"
+	name: "scale4b23_branch2c"
+	type: "Scale"
+	scale_param {
+		bias_term: true
+	}
+}
+
+layer {
+	bottom: "res4b22"
+	bottom: "bn4b23_branch2c"
+	top: "res4b23"
+	name: "res4b23"
+	type: "Eltwise"
+}
+
+layer {
+	bottom: "res4b23"
+	top: "res4b23"
+	name: "res4b23_relu"
+	type: "ReLU"
+}
+
+layer {
+	bottom: "res4b23"
+	top: "res4b24_branch2a"
+	name: "res4b24_branch2a"
+	type: "Convolution"
+	convolution_param {
+		num_output: 256
+		kernel_size: 1
+		pad: 0
+		stride: 1
+		bias_term: false
+	}
+}
+
+layer {
+	bottom: "res4b24_branch2a"
+	top: "bn4b24_branch2a"
+	name: "bn4b24_branch2a"
+	type: "BatchNorm"
+	batch_norm_param {
+		use_global_stats: true
+	}
+}
+
+layer {
+	bottom: "bn4b24_branch2a"
+	top: "bn4b24_branch2a"
+	name: "scale4b24_branch2a"
+	type: "Scale"
+	scale_param {
+		bias_term: true
+	}
+}
+
+layer {
+	top: "bn4b24_branch2a"
+	bottom: "bn4b24_branch2a"
+	name: "res4b24_branch2a_relu"
+	type: "ReLU"
+}
+
+layer {
+	bottom: "bn4b24_branch2a"
+	top: "res4b24_branch2b"
+	name: "res4b24_branch2b"
+	type: "Convolution"
+	convolution_param {
+		num_output: 256
+		kernel_size: 3
+		pad: 1
+		stride: 1
+		bias_term: false
+	}
+}
+
+layer {
+	bottom: "res4b24_branch2b"
+	top: "bn4b24_branch2b"
+	name: "bn4b24_branch2b"
+	type: "BatchNorm"
+	batch_norm_param {
+		use_global_stats: true
+	}
+}
+
+layer {
+	bottom: "bn4b24_branch2b"
+	top: "bn4b24_branch2b"
+	name: "scale4b24_branch2b"
+	type: "Scale"
+	scale_param {
+		bias_term: true
+	}
+}
+
+layer {
+	top: "bn4b24_branch2b"
+	bottom: "bn4b24_branch2b"
+	name: "res4b24_branch2b_relu"
+	type: "ReLU"
+}
+
+layer {
+	bottom: "bn4b24_branch2b"
+	top: "res4b24_branch2c"
+	name: "res4b24_branch2c"
+	type: "Convolution"
+	convolution_param {
+		num_output: 1024
+		kernel_size: 1
+		pad: 0
+		stride: 1
+		bias_term: false
+	}
+}
+
+layer {
+	bottom: "res4b24_branch2c"
+	top: "bn4b24_branch2c"
+	name: "bn4b24_branch2c"
+	type: "BatchNorm"
+	batch_norm_param {
+		use_global_stats: true
+	}
+}
+
+layer {
+	bottom: "bn4b24_branch2c"
+	top: "bn4b24_branch2c"
+	name: "scale4b24_branch2c"
+	type: "Scale"
+	scale_param {
+		bias_term: true
+	}
+}
+
+layer {
+	bottom: "res4b23"
+	bottom: "bn4b24_branch2c"
+	top: "res4b24"
+	name: "res4b24"
+	type: "Eltwise"
+}
+
+layer {
+	bottom: "res4b24"
+	top: "res4b24"
+	name: "res4b24_relu"
+	type: "ReLU"
+}
+
+layer {
+	bottom: "res4b24"
+	top: "res4b25_branch2a"
+	name: "res4b25_branch2a"
+	type: "Convolution"
+	convolution_param {
+		num_output: 256
+		kernel_size: 1
+		pad: 0
+		stride: 1
+		bias_term: false
+	}
+}
+
+layer {
+	bottom: "res4b25_branch2a"
+	top: "bn4b25_branch2a"
+	name: "bn4b25_branch2a"
+	type: "BatchNorm"
+	batch_norm_param {
+		use_global_stats: true
+	}
+}
+
+layer {
+	bottom: "bn4b25_branch2a"
+	top: "bn4b25_branch2a"
+	name: "scale4b25_branch2a"
+	type: "Scale"
+	scale_param {
+		bias_term: true
+	}
+}
+
+layer {
+	top: "bn4b25_branch2a"
+	bottom: "bn4b25_branch2a"
+	name: "res4b25_branch2a_relu"
+	type: "ReLU"
+}
+
+layer {
+	bottom: "bn4b25_branch2a"
+	top: "res4b25_branch2b"
+	name: "res4b25_branch2b"
+	type: "Convolution"
+	convolution_param {
+		num_output: 256
+		kernel_size: 3
+		pad: 1
+		stride: 1
+		bias_term: false
+	}
+}
+
+layer {
+	bottom: "res4b25_branch2b"
+	top: "bn4b25_branch2b"
+	name: "bn4b25_branch2b"
+	type: "BatchNorm"
+	batch_norm_param {
+		use_global_stats: true
+	}
+}
+
+layer {
+	bottom: "bn4b25_branch2b"
+	top: "bn4b25_branch2b"
+	name: "scale4b25_branch2b"
+	type: "Scale"
+	scale_param {
+		bias_term: true
+	}
+}
+
+layer {
+	top: "bn4b25_branch2b"
+	bottom: "bn4b25_branch2b"
+	name: "res4b25_branch2b_relu"
+	type: "ReLU"
+}
+
+layer {
+	bottom: "bn4b25_branch2b"
+	top: "res4b25_branch2c"
+	name: "res4b25_branch2c"
+	type: "Convolution"
+	convolution_param {
+		num_output: 1024
+		kernel_size: 1
+		pad: 0
+		stride: 1
+		bias_term: false
+	}
+}
+
+layer {
+	bottom: "res4b25_branch2c"
+	top: "bn4b25_branch2c"
+	name: "bn4b25_branch2c"
+	type: "BatchNorm"
+	batch_norm_param {
+		use_global_stats: true
+	}
+}
+
+layer {
+	bottom: "bn4b25_branch2c"
+	top: "bn4b25_branch2c"
+	name: "scale4b25_branch2c"
+	type: "Scale"
+	scale_param {
+		bias_term: true
+	}
+}
+
+layer {
+	bottom: "res4b24"
+	bottom: "bn4b25_branch2c"
+	top: "res4b25"
+	name: "res4b25"
+	type: "Eltwise"
+}
+
+layer {
+	bottom: "res4b25"
+	top: "res4b25"
+	name: "res4b25_relu"
+	type: "ReLU"
+}
+
+layer {
+	bottom: "res4b25"
+	top: "res4b26_branch2a"
+	name: "res4b26_branch2a"
+	type: "Convolution"
+	convolution_param {
+		num_output: 256
+		kernel_size: 1
+		pad: 0
+		stride: 1
+		bias_term: false
+	}
+}
+
+layer {
+	bottom: "res4b26_branch2a"
+	top: "bn4b26_branch2a"
+	name: "bn4b26_branch2a"
+	type: "BatchNorm"
+	batch_norm_param {
+		use_global_stats: true
+	}
+}
+
+layer {
+	bottom: "bn4b26_branch2a"
+	top: "bn4b26_branch2a"
+	name: "scale4b26_branch2a"
+	type: "Scale"
+	scale_param {
+		bias_term: true
+	}
+}
+
+layer {
+	top: "bn4b26_branch2a"
+	bottom: "bn4b26_branch2a"
+	name: "res4b26_branch2a_relu"
+	type: "ReLU"
+}
+
+layer {
+	bottom: "bn4b26_branch2a"
+	top: "res4b26_branch2b"
+	name: "res4b26_branch2b"
+	type: "Convolution"
+	convolution_param {
+		num_output: 256
+		kernel_size: 3
+		pad: 1
+		stride: 1
+		bias_term: false
+	}
+}
+
+layer {
+	bottom: "res4b26_branch2b"
+	top: "bn4b26_branch2b"
+	name: "bn4b26_branch2b"
+	type: "BatchNorm"
+	batch_norm_param {
+		use_global_stats: true
+	}
+}
+
+layer {
+	bottom: "bn4b26_branch2b"
+	top: "bn4b26_branch2b"
+	name: "scale4b26_branch2b"
+	type: "Scale"
+	scale_param {
+		bias_term: true
+	}
+}
+
+layer {
+	top: "bn4b26_branch2b"
+	bottom: "bn4b26_branch2b"
+	name: "res4b26_branch2b_relu"
+	type: "ReLU"
+}
+
+layer {
+	bottom: "bn4b26_branch2b"
+	top: "res4b26_branch2c"
+	name: "res4b26_branch2c"
+	type: "Convolution"
+	convolution_param {
+		num_output: 1024
+		kernel_size: 1
+		pad: 0
+		stride: 1
+		bias_term: false
+	}
+}
+
+layer {
+	bottom: "res4b26_branch2c"
+	top: "bn4b26_branch2c"
+	name: "bn4b26_branch2c"
+	type: "BatchNorm"
+	batch_norm_param {
+		use_global_stats: true
+	}
+}
+
+layer {
+	bottom: "bn4b26_branch2c"
+	top: "bn4b26_branch2c"
+	name: "scale4b26_branch2c"
+	type: "Scale"
+	scale_param {
+		bias_term: true
+	}
+}
+
+layer {
+	bottom: "res4b25"
+	bottom: "bn4b26_branch2c"
+	top: "res4b26"
+	name: "res4b26"
+	type: "Eltwise"
+}
+
+layer {
+	bottom: "res4b26"
+	top: "res4b26"
+	name: "res4b26_relu"
+	type: "ReLU"
+}
+
+layer {
+	bottom: "res4b26"
+	top: "res4b27_branch2a"
+	name: "res4b27_branch2a"
+	type: "Convolution"
+	convolution_param {
+		num_output: 256
+		kernel_size: 1
+		pad: 0
+		stride: 1
+		bias_term: false
+	}
+}
+
+layer {
+	bottom: "res4b27_branch2a"
+	top: "bn4b27_branch2a"
+	name: "bn4b27_branch2a"
+	type: "BatchNorm"
+	batch_norm_param {
+		use_global_stats: true
+	}
+}
+
+layer {
+	bottom: "bn4b27_branch2a"
+	top: "bn4b27_branch2a"
+	name: "scale4b27_branch2a"
+	type: "Scale"
+	scale_param {
+		bias_term: true
+	}
+}
+
+layer {
+	top: "bn4b27_branch2a"
+	bottom: "bn4b27_branch2a"
+	name: "res4b27_branch2a_relu"
+	type: "ReLU"
+}
+
+layer {
+	bottom: "bn4b27_branch2a"
+	top: "res4b27_branch2b"
+	name: "res4b27_branch2b"
+	type: "Convolution"
+	convolution_param {
+		num_output: 256
+		kernel_size: 3
+		pad: 1
+		stride: 1
+		bias_term: false
+	}
+}
+
+layer {
+	bottom: "res4b27_branch2b"
+	top: "bn4b27_branch2b"
+	name: "bn4b27_branch2b"
+	type: "BatchNorm"
+	batch_norm_param {
+		use_global_stats: true
+	}
+}
+
+layer {
+	bottom: "bn4b27_branch2b"
+	top: "bn4b27_branch2b"
+	name: "scale4b27_branch2b"
+	type: "Scale"
+	scale_param {
+		bias_term: true
+	}
+}
+
+layer {
+	top: "bn4b27_branch2b"
+	bottom: "bn4b27_branch2b"
+	name: "res4b27_branch2b_relu"
+	type: "ReLU"
+}
+
+layer {
+	bottom: "bn4b27_branch2b"
+	top: "res4b27_branch2c"
+	name: "res4b27_branch2c"
+	type: "Convolution"
+	convolution_param {
+		num_output: 1024
+		kernel_size: 1
+		pad: 0
+		stride: 1
+		bias_term: false
+	}
+}
+
+layer {
+	bottom: "res4b27_branch2c"
+	top: "bn4b27_branch2c"
+	name: "bn4b27_branch2c"
+	type: "BatchNorm"
+	batch_norm_param {
+		use_global_stats: true
+	}
+}
+
+layer {
+	bottom: "bn4b27_branch2c"
+	top: "bn4b27_branch2c"
+	name: "scale4b27_branch2c"
+	type: "Scale"
+	scale_param {
+		bias_term: true
+	}
+}
+
+layer {
+	bottom: "res4b26"
+	bottom: "bn4b27_branch2c"
+	top: "res4b27"
+	name: "res4b27"
+	type: "Eltwise"
+}
+
+layer {
+	bottom: "res4b27"
+	top: "res4b27"
+	name: "res4b27_relu"
+	type: "ReLU"
+}
+
+layer {
+	bottom: "res4b27"
+	top: "res4b28_branch2a"
+	name: "res4b28_branch2a"
+	type: "Convolution"
+	convolution_param {
+		num_output: 256
+		kernel_size: 1
+		pad: 0
+		stride: 1
+		bias_term: false
+	}
+}
+
+layer {
+	bottom: "res4b28_branch2a"
+	top: "bn4b28_branch2a"
+	name: "bn4b28_branch2a"
+	type: "BatchNorm"
+	batch_norm_param {
+		use_global_stats: true
+	}
+}
+
+layer {
+	bottom: "bn4b28_branch2a"
+	top: "bn4b28_branch2a"
+	name: "scale4b28_branch2a"
+	type: "Scale"
+	scale_param {
+		bias_term: true
+	}
+}
+
+layer {
+	top: "bn4b28_branch2a"
+	bottom: "bn4b28_branch2a"
+	name: "res4b28_branch2a_relu"
+	type: "ReLU"
+}
+
+layer {
+	bottom: "bn4b28_branch2a"
+	top: "res4b28_branch2b"
+	name: "res4b28_branch2b"
+	type: "Convolution"
+	convolution_param {
+		num_output: 256
+		kernel_size: 3
+		pad: 1
+		stride: 1
+		bias_term: false
+	}
+}
+
+layer {
+	bottom: "res4b28_branch2b"
+	top: "bn4b28_branch2b"
+	name: "bn4b28_branch2b"
+	type: "BatchNorm"
+	batch_norm_param {
+		use_global_stats: true
+	}
+}
+
+layer {
+	bottom: "bn4b28_branch2b"
+	top: "bn4b28_branch2b"
+	name: "scale4b28_branch2b"
+	type: "Scale"
+	scale_param {
+		bias_term: true
+	}
+}
+
+layer {
+	top: "bn4b28_branch2b"
+	bottom: "bn4b28_branch2b"
+	name: "res4b28_branch2b_relu"
+	type: "ReLU"
+}
+
+layer {
+	bottom: "bn4b28_branch2b"
+	top: "res4b28_branch2c"
+	name: "res4b28_branch2c"
+	type: "Convolution"
+	convolution_param {
+		num_output: 1024
+		kernel_size: 1
+		pad: 0
+		stride: 1
+		bias_term: false
+	}
+}
+
+layer {
+	bottom: "res4b28_branch2c"
+	top: "bn4b28_branch2c"
+	name: "bn4b28_branch2c"
+	type: "BatchNorm"
+	batch_norm_param {
+		use_global_stats: true
+	}
+}
+
+layer {
+	bottom: "bn4b28_branch2c"
+	top: "bn4b28_branch2c"
+	name: "scale4b28_branch2c"
+	type: "Scale"
+	scale_param {
+		bias_term: true
+	}
+}
+
+layer {
+	bottom: "res4b27"
+	bottom: "bn4b28_branch2c"
+	top: "res4b28"
+	name: "res4b28"
+	type: "Eltwise"
+}
+
+layer {
+	bottom: "res4b28"
+	top: "res4b28"
+	name: "res4b28_relu"
+	type: "ReLU"
+}
+
+layer {
+	bottom: "res4b28"
+	top: "res4b29_branch2a"
+	name: "res4b29_branch2a"
+	type: "Convolution"
+	convolution_param {
+		num_output: 256
+		kernel_size: 1
+		pad: 0
+		stride: 1
+		bias_term: false
+	}
+}
+
+layer {
+	bottom: "res4b29_branch2a"
+	top: "bn4b29_branch2a"
+	name: "bn4b29_branch2a"
+	type: "BatchNorm"
+	batch_norm_param {
+		use_global_stats: true
+	}
+}
+
+layer {
+	bottom: "bn4b29_branch2a"
+	top: "bn4b29_branch2a"
+	name: "scale4b29_branch2a"
+	type: "Scale"
+	scale_param {
+		bias_term: true
+	}
+}
+
+layer {
+	top: "bn4b29_branch2a"
+	bottom: "bn4b29_branch2a"
+	name: "res4b29_branch2a_relu"
+	type: "ReLU"
+}
+
+layer {
+	bottom: "bn4b29_branch2a"
+	top: "res4b29_branch2b"
+	name: "res4b29_branch2b"
+	type: "Convolution"
+	convolution_param {
+		num_output: 256
+		kernel_size: 3
+		pad: 1
+		stride: 1
+		bias_term: false
+	}
+}
+
+layer {
+	bottom: "res4b29_branch2b"
+	top: "bn4b29_branch2b"
+	name: "bn4b29_branch2b"
+	type: "BatchNorm"
+	batch_norm_param {
+		use_global_stats: true
+	}
+}
+
+layer {
+	bottom: "bn4b29_branch2b"
+	top: "bn4b29_branch2b"
+	name: "scale4b29_branch2b"
+	type: "Scale"
+	scale_param {
+		bias_term: true
+	}
+}
+
+layer {
+	top: "bn4b29_branch2b"
+	bottom: "bn4b29_branch2b"
+	name: "res4b29_branch2b_relu"
+	type: "ReLU"
+}
+
+layer {
+	bottom: "bn4b29_branch2b"
+	top: "res4b29_branch2c"
+	name: "res4b29_branch2c"
+	type: "Convolution"
+	convolution_param {
+		num_output: 1024
+		kernel_size: 1
+		pad: 0
+		stride: 1
+		bias_term: false
+	}
+}
+
+layer {
+	bottom: "res4b29_branch2c"
+	top: "bn4b29_branch2c"
+	name: "bn4b29_branch2c"
+	type: "BatchNorm"
+	batch_norm_param {
+		use_global_stats: true
+	}
+}
+
+layer {
+	bottom: "bn4b29_branch2c"
+	top: "bn4b29_branch2c"
+	name: "scale4b29_branch2c"
+	type: "Scale"
+	scale_param {
+		bias_term: true
+	}
+}
+
+layer {
+	bottom: "res4b28"
+	bottom: "bn4b29_branch2c"
+	top: "res4b29"
+	name: "res4b29"
+	type: "Eltwise"
+}
+
+layer {
+	bottom: "res4b29"
+	top: "res4b29"
+	name: "res4b29_relu"
+	type: "ReLU"
+}
+
+layer {
+	bottom: "res4b29"
+	top: "res4b30_branch2a"
+	name: "res4b30_branch2a"
+	type: "Convolution"
+	convolution_param {
+		num_output: 256
+		kernel_size: 1
+		pad: 0
+		stride: 1
+		bias_term: false
+	}
+}
+
+layer {
+	bottom: "res4b30_branch2a"
+	top: "bn4b30_branch2a"
+	name: "bn4b30_branch2a"
+	type: "BatchNorm"
+	batch_norm_param {
+		use_global_stats: true
+	}
+}
+
+layer {
+	bottom: "bn4b30_branch2a"
+	top: "bn4b30_branch2a"
+	name: "scale4b30_branch2a"
+	type: "Scale"
+	scale_param {
+		bias_term: true
+	}
+}
+
+layer {
+	top: "bn4b30_branch2a"
+	bottom: "bn4b30_branch2a"
+	name: "res4b30_branch2a_relu"
+	type: "ReLU"
+}
+
+layer {
+	bottom: "bn4b30_branch2a"
+	top: "res4b30_branch2b"
+	name: "res4b30_branch2b"
+	type: "Convolution"
+	convolution_param {
+		num_output: 256
+		kernel_size: 3
+		pad: 1
+		stride: 1
+		bias_term: false
+	}
+}
+
+layer {
+	bottom: "res4b30_branch2b"
+	top: "bn4b30_branch2b"
+	name: "bn4b30_branch2b"
+	type: "BatchNorm"
+	batch_norm_param {
+		use_global_stats: true
+	}
+}
+
+layer {
+	bottom: "bn4b30_branch2b"
+	top: "bn4b30_branch2b"
+	name: "scale4b30_branch2b"
+	type: "Scale"
+	scale_param {
+		bias_term: true
+	}
+}
+
+layer {
+	top: "bn4b30_branch2b"
+	bottom: "bn4b30_branch2b"
+	name: "res4b30_branch2b_relu"
+	type: "ReLU"
+}
+
+layer {
+	bottom: "bn4b30_branch2b"
+	top: "res4b30_branch2c"
+	name: "res4b30_branch2c"
+	type: "Convolution"
+	convolution_param {
+		num_output: 1024
+		kernel_size: 1
+		pad: 0
+		stride: 1
+		bias_term: false
+	}
+}
+
+layer {
+	bottom: "res4b30_branch2c"
+	top: "bn4b30_branch2c"
+	name: "bn4b30_branch2c"
+	type: "BatchNorm"
+	batch_norm_param {
+		use_global_stats: true
+	}
+}
+
+layer {
+	bottom: "bn4b30_branch2c"
+	top: "bn4b30_branch2c"
+	name: "scale4b30_branch2c"
+	type: "Scale"
+	scale_param {
+		bias_term: true
+	}
+}
+
+layer {
+	bottom: "res4b29"
+	bottom: "bn4b30_branch2c"
+	top: "res4b30"
+	name: "res4b30"
+	type: "Eltwise"
+}
+
+layer {
+	bottom: "res4b30"
+	top: "res4b30"
+	name: "res4b30_relu"
+	type: "ReLU"
+}
+
+layer {
+	bottom: "res4b30"
+	top: "res4b31_branch2a"
+	name: "res4b31_branch2a"
+	type: "Convolution"
+	convolution_param {
+		num_output: 256
+		kernel_size: 1
+		pad: 0
+		stride: 1
+		bias_term: false
+	}
+}
+
+layer {
+	bottom: "res4b31_branch2a"
+	top: "bn4b31_branch2a"
+	name: "bn4b31_branch2a"
+	type: "BatchNorm"
+	batch_norm_param {
+		use_global_stats: true
+	}
+}
+
+layer {
+	bottom: "bn4b31_branch2a"
+	top: "bn4b31_branch2a"
+	name: "scale4b31_branch2a"
+	type: "Scale"
+	scale_param {
+		bias_term: true
+	}
+}
+
+layer {
+	top: "bn4b31_branch2a"
+	bottom: "bn4b31_branch2a"
+	name: "res4b31_branch2a_relu"
+	type: "ReLU"
+}
+
+layer {
+	bottom: "bn4b31_branch2a"
+	top: "res4b31_branch2b"
+	name: "res4b31_branch2b"
+	type: "Convolution"
+	convolution_param {
+		num_output: 256
+		kernel_size: 3
+		pad: 1
+		stride: 1
+		bias_term: false
+	}
+}
+
+layer {
+	bottom: "res4b31_branch2b"
+	top: "bn4b31_branch2b"
+	name: "bn4b31_branch2b"
+	type: "BatchNorm"
+	batch_norm_param {
+		use_global_stats: true
+	}
+}
+
+layer {
+	bottom: "bn4b31_branch2b"
+	top: "bn4b31_branch2b"
+	name: "scale4b31_branch2b"
+	type: "Scale"
+	scale_param {
+		bias_term: true
+	}
+}
+
+layer {
+	top: "bn4b31_branch2b"
+	bottom: "bn4b31_branch2b"
+	name: "res4b31_branch2b_relu"
+	type: "ReLU"
+}
+
+layer {
+	bottom: "bn4b31_branch2b"
+	top: "res4b31_branch2c"
+	name: "res4b31_branch2c"
+	type: "Convolution"
+	convolution_param {
+		num_output: 1024
+		kernel_size: 1
+		pad: 0
+		stride: 1
+		bias_term: false
+	}
+}
+
+layer {
+	bottom: "res4b31_branch2c"
+	top: "bn4b31_branch2c"
+	name: "bn4b31_branch2c"
+	type: "BatchNorm"
+	batch_norm_param {
+		use_global_stats: true
+	}
+}
+
+layer {
+	bottom: "bn4b31_branch2c"
+	top: "bn4b31_branch2c"
+	name: "scale4b31_branch2c"
+	type: "Scale"
+	scale_param {
+		bias_term: true
+	}
+}
+
+layer {
+	bottom: "res4b30"
+	bottom: "bn4b31_branch2c"
+	top: "res4b31"
+	name: "res4b31"
+	type: "Eltwise"
+}
+
+layer {
+	bottom: "res4b31"
+	top: "res4b31"
+	name: "res4b31_relu"
+	type: "ReLU"
+}
+
+layer {
+	bottom: "res4b31"
+	top: "res4b32_branch2a"
+	name: "res4b32_branch2a"
+	type: "Convolution"
+	convolution_param {
+		num_output: 256
+		kernel_size: 1
+		pad: 0
+		stride: 1
+		bias_term: false
+	}
+}
+
+layer {
+	bottom: "res4b32_branch2a"
+	top: "bn4b32_branch2a"
+	name: "bn4b32_branch2a"
+	type: "BatchNorm"
+	batch_norm_param {
+		use_global_stats: true
+	}
+}
+
+layer {
+	bottom: "bn4b32_branch2a"
+	top: "bn4b32_branch2a"
+	name: "scale4b32_branch2a"
+	type: "Scale"
+	scale_param {
+		bias_term: true
+	}
+}
+
+layer {
+	top: "bn4b32_branch2a"
+	bottom: "bn4b32_branch2a"
+	name: "res4b32_branch2a_relu"
+	type: "ReLU"
+}
+
+layer {
+	bottom: "bn4b32_branch2a"
+	top: "res4b32_branch2b"
+	name: "res4b32_branch2b"
+	type: "Convolution"
+	convolution_param {
+		num_output: 256
+		kernel_size: 3
+		pad: 1
+		stride: 1
+		bias_term: false
+	}
+}
+
+layer {
+	bottom: "res4b32_branch2b"
+	top: "bn4b32_branch2b"
+	name: "bn4b32_branch2b"
+	type: "BatchNorm"
+	batch_norm_param {
+		use_global_stats: true
+	}
+}
+
+layer {
+	bottom: "bn4b32_branch2b"
+	top: "bn4b32_branch2b"
+	name: "scale4b32_branch2b"
+	type: "Scale"
+	scale_param {
+		bias_term: true
+	}
+}
+
+layer {
+	top: "bn4b32_branch2b"
+	bottom: "bn4b32_branch2b"
+	name: "res4b32_branch2b_relu"
+	type: "ReLU"
+}
+
+layer {
+	bottom: "bn4b32_branch2b"
+	top: "res4b32_branch2c"
+	name: "res4b32_branch2c"
+	type: "Convolution"
+	convolution_param {
+		num_output: 1024
+		kernel_size: 1
+		pad: 0
+		stride: 1
+		bias_term: false
+	}
+}
+
+layer {
+	bottom: "res4b32_branch2c"
+	top: "bn4b32_branch2c"
+	name: "bn4b32_branch2c"
+	type: "BatchNorm"
+	batch_norm_param {
+		use_global_stats: true
+	}
+}
+
+layer {
+	bottom: "bn4b32_branch2c"
+	top: "bn4b32_branch2c"
+	name: "scale4b32_branch2c"
+	type: "Scale"
+	scale_param {
+		bias_term: true
+	}
+}
+
+layer {
+	bottom: "res4b31"
+	bottom: "bn4b32_branch2c"
+	top: "res4b32"
+	name: "res4b32"
+	type: "Eltwise"
+}
+
+layer {
+	bottom: "res4b32"
+	top: "res4b32"
+	name: "res4b32_relu"
+	type: "ReLU"
+}
+
+layer {
+	bottom: "res4b32"
+	top: "res4b33_branch2a"
+	name: "res4b33_branch2a"
+	type: "Convolution"
+	convolution_param {
+		num_output: 256
+		kernel_size: 1
+		pad: 0
+		stride: 1
+		bias_term: false
+	}
+}
+
+layer {
+	bottom: "res4b33_branch2a"
+	top: "bn4b33_branch2a"
+	name: "bn4b33_branch2a"
+	type: "BatchNorm"
+	batch_norm_param {
+		use_global_stats: true
+	}
+}
+
+layer {
+	bottom: "bn4b33_branch2a"
+	top: "bn4b33_branch2a"
+	name: "scale4b33_branch2a"
+	type: "Scale"
+	scale_param {
+		bias_term: true
+	}
+}
+
+layer {
+	top: "bn4b33_branch2a"
+	bottom: "bn4b33_branch2a"
+	name: "res4b33_branch2a_relu"
+	type: "ReLU"
+}
+
+layer {
+	bottom: "bn4b33_branch2a"
+	top: "res4b33_branch2b"
+	name: "res4b33_branch2b"
+	type: "Convolution"
+	convolution_param {
+		num_output: 256
+		kernel_size: 3
+		pad: 1
+		stride: 1
+		bias_term: false
+	}
+}
+
+layer {
+	bottom: "res4b33_branch2b"
+	top: "bn4b33_branch2b"
+	name: "bn4b33_branch2b"
+	type: "BatchNorm"
+	batch_norm_param {
+		use_global_stats: true
+	}
+}
+
+layer {
+	bottom: "bn4b33_branch2b"
+	top: "bn4b33_branch2b"
+	name: "scale4b33_branch2b"
+	type: "Scale"
+	scale_param {
+		bias_term: true
+	}
+}
+
+layer {
+	top: "bn4b33_branch2b"
+	bottom: "bn4b33_branch2b"
+	name: "res4b33_branch2b_relu"
+	type: "ReLU"
+}
+
+layer {
+	bottom: "bn4b33_branch2b"
+	top: "res4b33_branch2c"
+	name: "res4b33_branch2c"
+	type: "Convolution"
+	convolution_param {
+		num_output: 1024
+		kernel_size: 1
+		pad: 0
+		stride: 1
+		bias_term: false
+	}
+}
+
+layer {
+	bottom: "res4b33_branch2c"
+	top: "bn4b33_branch2c"
+	name: "bn4b33_branch2c"
+	type: "BatchNorm"
+	batch_norm_param {
+		use_global_stats: true
+	}
+}
+
+layer {
+	bottom: "bn4b33_branch2c"
+	top: "bn4b33_branch2c"
+	name: "scale4b33_branch2c"
+	type: "Scale"
+	scale_param {
+		bias_term: true
+	}
+}
+
+layer {
+	bottom: "res4b32"
+	bottom: "bn4b33_branch2c"
+	top: "res4b33"
+	name: "res4b33"
+	type: "Eltwise"
+}
+
+layer {
+	bottom: "res4b33"
+	top: "res4b33"
+	name: "res4b33_relu"
+	type: "ReLU"
+}
+
+layer {
+	bottom: "res4b33"
+	top: "res4b34_branch2a"
+	name: "res4b34_branch2a"
+	type: "Convolution"
+	convolution_param {
+		num_output: 256
+		kernel_size: 1
+		pad: 0
+		stride: 1
+		bias_term: false
+	}
+}
+
+layer {
+	bottom: "res4b34_branch2a"
+	top: "bn4b34_branch2a"
+	name: "bn4b34_branch2a"
+	type: "BatchNorm"
+	batch_norm_param {
+		use_global_stats: true
+	}
+}
+
+layer {
+	bottom: "bn4b34_branch2a"
+	top: "bn4b34_branch2a"
+	name: "scale4b34_branch2a"
+	type: "Scale"
+	scale_param {
+		bias_term: true
+	}
+}
+
+layer {
+	top: "bn4b34_branch2a"
+	bottom: "bn4b34_branch2a"
+	name: "res4b34_branch2a_relu"
+	type: "ReLU"
+}
+
+layer {
+	bottom: "bn4b34_branch2a"
+	top: "res4b34_branch2b"
+	name: "res4b34_branch2b"
+	type: "Convolution"
+	convolution_param {
+		num_output: 256
+		kernel_size: 3
+		pad: 1
+		stride: 1
+		bias_term: false
+	}
+}
+
+layer {
+	bottom: "res4b34_branch2b"
+	top: "bn4b34_branch2b"
+	name: "bn4b34_branch2b"
+	type: "BatchNorm"
+	batch_norm_param {
+		use_global_stats: true
+	}
+}
+
+layer {
+	bottom: "bn4b34_branch2b"
+	top: "bn4b34_branch2b"
+	name: "scale4b34_branch2b"
+	type: "Scale"
+	scale_param {
+		bias_term: true
+	}
+}
+
+layer {
+	top: "bn4b34_branch2b"
+	bottom: "bn4b34_branch2b"
+	name: "res4b34_branch2b_relu"
+	type: "ReLU"
+}
+
+layer {
+	bottom: "bn4b34_branch2b"
+	top: "res4b34_branch2c"
+	name: "res4b34_branch2c"
+	type: "Convolution"
+	convolution_param {
+		num_output: 1024
+		kernel_size: 1
+		pad: 0
+		stride: 1
+		bias_term: false
+	}
+}
+
+layer {
+	bottom: "res4b34_branch2c"
+	top: "bn4b34_branch2c"
+	name: "bn4b34_branch2c"
+	type: "BatchNorm"
+	batch_norm_param {
+		use_global_stats: true
+	}
+}
+
+layer {
+	bottom: "bn4b34_branch2c"
+	top: "bn4b34_branch2c"
+	name: "scale4b34_branch2c"
+	type: "Scale"
+	scale_param {
+		bias_term: true
+	}
+}
+
+layer {
+	bottom: "res4b33"
+	bottom: "bn4b34_branch2c"
+	top: "res4b34"
+	name: "res4b34"
+	type: "Eltwise"
+}
+
+layer {
+	bottom: "res4b34"
+	top: "res4b34"
+	name: "res4b34_relu"
+	type: "ReLU"
+}
+
+layer {
+	bottom: "res4b34"
+	top: "res4b35_branch2a"
+	name: "res4b35_branch2a"
+	type: "Convolution"
+	convolution_param {
+		num_output: 256
+		kernel_size: 1
+		pad: 0
+		stride: 1
+		bias_term: false
+	}
+}
+
+layer {
+	bottom: "res4b35_branch2a"
+	top: "bn4b35_branch2a"
+	name: "bn4b35_branch2a"
+	type: "BatchNorm"
+	batch_norm_param {
+		use_global_stats: true
+	}
+}
+
+layer {
+	bottom: "bn4b35_branch2a"
+	top: "bn4b35_branch2a"
+	name: "scale4b35_branch2a"
+	type: "Scale"
+	scale_param {
+		bias_term: true
+	}
+}
+
+layer {
+	top: "bn4b35_branch2a"
+	bottom: "bn4b35_branch2a"
+	name: "res4b35_branch2a_relu"
+	type: "ReLU"
+}
+
+layer {
+	bottom: "bn4b35_branch2a"
+	top: "res4b35_branch2b"
+	name: "res4b35_branch2b"
+	type: "Convolution"
+	convolution_param {
+		num_output: 256
+		kernel_size: 3
+		pad: 1
+		stride: 1
+		bias_term: false
+	}
+}
+
+layer {
+	bottom: "res4b35_branch2b"
+	top: "bn4b35_branch2b"
+	name: "bn4b35_branch2b"
+	type: "BatchNorm"
+	batch_norm_param {
+		use_global_stats: true
+	}
+}
+
+layer {
+	bottom: "bn4b35_branch2b"
+	top: "bn4b35_branch2b"
+	name: "scale4b35_branch2b"
+	type: "Scale"
+	scale_param {
+		bias_term: true
+	}
+}
+
+layer {
+	top: "bn4b35_branch2b"
+	bottom: "bn4b35_branch2b"
+	name: "res4b35_branch2b_relu"
+	type: "ReLU"
+}
+
+layer {
+	bottom: "bn4b35_branch2b"
+	top: "res4b35_branch2c"
+	name: "res4b35_branch2c"
+	type: "Convolution"
+	convolution_param {
+		num_output: 1024
+		kernel_size: 1
+		pad: 0
+		stride: 1
+		bias_term: false
+	}
+}
+
+layer {
+	bottom: "res4b35_branch2c"
+	top: "bn4b35_branch2c"
+	name: "bn4b35_branch2c"
+	type: "BatchNorm"
+	batch_norm_param {
+		use_global_stats: true
+	}
+}
+
+layer {
+	bottom: "bn4b35_branch2c"
+	top: "bn4b35_branch2c"
+	name: "scale4b35_branch2c"
+	type: "Scale"
+	scale_param {
+		bias_term: true
+	}
+}
+
+layer {
+	bottom: "res4b34"
+	bottom: "bn4b35_branch2c"
+	top: "res4b35"
+	name: "res4b35"
+	type: "Eltwise"
+}
+
+layer {
+	bottom: "res4b35"
+	top: "res4b35"
+	name: "res4b35_relu"
+	type: "ReLU"
+}
+
+layer {
+	bottom: "res4b35"
+	top: "res5a_branch1"
+	name: "res5a_branch1"
+	type: "Convolution"
+	convolution_param {
+		num_output: 2048
+		kernel_size: 1
+		pad: 0
+		stride: 2
+		bias_term: false
+	}
+}
+
+layer {
+	bottom: "res5a_branch1"
+	top: "bn5a_branch1"
+	name: "bn5a_branch1"
+	type: "BatchNorm"
+	batch_norm_param {
+		use_global_stats: true
+	}
+}
+
+layer {
+	bottom: "bn5a_branch1"
+	top: "bn5a_branch1"
+	name: "scale5a_branch1"
+	type: "Scale"
+	scale_param {
+		bias_term: true
+	}
+}
+
+layer {
+	bottom: "res4b35"
+	top: "res5a_branch2a"
+	name: "res5a_branch2a"
+	type: "Convolution"
+	convolution_param {
+		num_output: 512
+		kernel_size: 1
+		pad: 0
+		stride: 2
+		bias_term: false
+	}
+}
+
+layer {
+	bottom: "res5a_branch2a"
+	top: "bn5a_branch2a"
+	name: "bn5a_branch2a"
+	type: "BatchNorm"
+	batch_norm_param {
+		use_global_stats: true
+	}
+}
+
+layer {
+	bottom: "bn5a_branch2a"
+	top: "bn5a_branch2a"
+	name: "scale5a_branch2a"
+	type: "Scale"
+	scale_param {
+		bias_term: true
+	}
+}
+
+layer {
+	top: "bn5a_branch2a"
+	bottom: "bn5a_branch2a"
+	name: "res5a_branch2a_relu"
+	type: "ReLU"
+}
+
+layer {
+	bottom: "bn5a_branch2a"
+	top: "res5a_branch2b"
+	name: "res5a_branch2b"
+	type: "Convolution"
+	convolution_param {
+		num_output: 512
+		kernel_size: 3
+		pad: 1
+		stride: 1
+		bias_term: false
+	}
+}
+
+layer {
+	bottom: "res5a_branch2b"
+	top: "bn5a_branch2b"
+	name: "bn5a_branch2b"
+	type: "BatchNorm"
+	batch_norm_param {
+		use_global_stats: true
+	}
+}
+
+layer {
+	bottom: "bn5a_branch2b"
+	top: "bn5a_branch2b"
+	name: "scale5a_branch2b"
+	type: "Scale"
+	scale_param {
+		bias_term: true
+	}
+}
+
+layer {
+	top: "bn5a_branch2b"
+	bottom: "bn5a_branch2b"
+	name: "res5a_branch2b_relu"
+	type: "ReLU"
+}
+
+layer {
+	bottom: "bn5a_branch2b"
+	top: "res5a_branch2c"
+	name: "res5a_branch2c"
+	type: "Convolution"
+	convolution_param {
+		num_output: 2048
+		kernel_size: 1
+		pad: 0
+		stride: 1
+		bias_term: false
+	}
+}
+
+layer {
+	bottom: "res5a_branch2c"
+	top: "bn5a_branch2c"
+	name: "bn5a_branch2c"
+	type: "BatchNorm"
+	batch_norm_param {
+		use_global_stats: true
+	}
+}
+
+layer {
+	bottom: "bn5a_branch2c"
+	top: "bn5a_branch2c"
+	name: "scale5a_branch2c"
+	type: "Scale"
+	scale_param {
+		bias_term: true
+	}
+}
+
+layer {
+	bottom: "bn5a_branch1"
+	bottom: "bn5a_branch2c"
+	top: "res5a"
+	name: "res5a"
+	type: "Eltwise"
+}
+
+layer {
+	bottom: "res5a"
+	top: "res5a"
+	name: "res5a_relu"
+	type: "ReLU"
+}
+
+layer {
+	bottom: "res5a"
+	top: "res5b_branch2a"
+	name: "res5b_branch2a"
+	type: "Convolution"
+	convolution_param {
+		num_output: 512
+		kernel_size: 1
+		pad: 0
+		stride: 1
+		bias_term: false
+	}
+}
+
+layer {
+	bottom: "res5b_branch2a"
+	top: "bn5b_branch2a"
+	name: "bn5b_branch2a"
+	type: "BatchNorm"
+	batch_norm_param {
+		use_global_stats: true
+	}
+}
+
+layer {
+	bottom: "bn5b_branch2a"
+	top: "bn5b_branch2a"
+	name: "scale5b_branch2a"
+	type: "Scale"
+	scale_param {
+		bias_term: true
+	}
+}
+
+layer {
+	top: "bn5b_branch2a"
+	bottom: "bn5b_branch2a"
+	name: "res5b_branch2a_relu"
+	type: "ReLU"
+}
+
+layer {
+	bottom: "bn5b_branch2a"
+	top: "res5b_branch2b"
+	name: "res5b_branch2b"
+	type: "Convolution"
+	convolution_param {
+		num_output: 512
+		kernel_size: 3
+		pad: 1
+		stride: 1
+		bias_term: false
+	}
+}
+
+layer {
+	bottom: "res5b_branch2b"
+	top: "bn5b_branch2b"
+	name: "bn5b_branch2b"
+	type: "BatchNorm"
+	batch_norm_param {
+		use_global_stats: true
+	}
+}
+
+layer {
+	bottom: "bn5b_branch2b"
+	top: "bn5b_branch2b"
+	name: "scale5b_branch2b"
+	type: "Scale"
+	scale_param {
+		bias_term: true
+	}
+}
+
+layer {
+	top: "bn5b_branch2b"
+	bottom: "bn5b_branch2b"
+	name: "res5b_branch2b_relu"
+	type: "ReLU"
+}
+
+layer {
+	bottom: "bn5b_branch2b"
+	top: "res5b_branch2c"
+	name: "res5b_branch2c"
+	type: "Convolution"
+	convolution_param {
+		num_output: 2048
+		kernel_size: 1
+		pad: 0
+		stride: 1
+		bias_term: false
+	}
+}
+
+layer {
+	bottom: "res5b_branch2c"
+	top: "bn5b_branch2c"
+	name: "bn5b_branch2c"
+	type: "BatchNorm"
+	batch_norm_param {
+		use_global_stats: true
+	}
+}
+
+layer {
+	bottom: "bn5b_branch2c"
+	top: "bn5b_branch2c"
+	name: "scale5b_branch2c"
+	type: "Scale"
+	scale_param {
+		bias_term: true
+	}
+}
+
+layer {
+	bottom: "res5a"
+	bottom: "bn5b_branch2c"
+	top: "res5b"
+	name: "res5b"
+	type: "Eltwise"
+}
+
+layer {
+	bottom: "res5b"
+	top: "res5b"
+	name: "res5b_relu"
+	type: "ReLU"
+}
+
+layer {
+	bottom: "res5b"
+	top: "res5c_branch2a"
+	name: "res5c_branch2a"
+	type: "Convolution"
+	convolution_param {
+		num_output: 512
+		kernel_size: 1
+		pad: 0
+		stride: 1
+		bias_term: false
+	}
+}
+
+layer {
+	bottom: "res5c_branch2a"
+	top: "bn5c_branch2a"
+	name: "bn5c_branch2a"
+	type: "BatchNorm"
+	batch_norm_param {
+		use_global_stats: true
+	}
+}
+
+layer {
+	bottom: "bn5c_branch2a"
+	top: "bn5c_branch2a"
+	name: "scale5c_branch2a"
+	type: "Scale"
+	scale_param {
+		bias_term: true
+	}
+}
+
+layer {
+	top: "bn5c_branch2a"
+	bottom: "bn5c_branch2a"
+	name: "res5c_branch2a_relu"
+	type: "ReLU"
+}
+
+layer {
+	bottom: "bn5c_branch2a"
+	top: "res5c_branch2b"
+	name: "res5c_branch2b"
+	type: "Convolution"
+	convolution_param {
+		num_output: 512
+		kernel_size: 3
+		pad: 1
+		stride: 1
+		bias_term: false
+	}
+}
+
+layer {
+	bottom: "res5c_branch2b"
+	top: "bn5c_branch2b"
+	name: "bn5c_branch2b"
+	type: "BatchNorm"
+	batch_norm_param {
+		use_global_stats: true
+	}
+}
+
+layer {
+	bottom: "bn5c_branch2b"
+	top: "bn5c_branch2b"
+	name: "scale5c_branch2b"
+	type: "Scale"
+	scale_param {
+		bias_term: true
+	}
+}
+
+layer {
+	top: "bn5c_branch2b"
+	bottom: "bn5c_branch2b"
+	name: "res5c_branch2b_relu"
+	type: "ReLU"
+}
+
+layer {
+	bottom: "bn5c_branch2b"
+	top: "res5c_branch2c"
+	name: "res5c_branch2c"
+	type: "Convolution"
+	convolution_param {
+		num_output: 2048
+		kernel_size: 1
+		pad: 0
+		stride: 1
+		bias_term: false
+	}
+}
+
+layer {
+	bottom: "res5c_branch2c"
+	top: "bn5c_branch2c"
+	name: "bn5c_branch2c"
+	type: "BatchNorm"
+	batch_norm_param {
+		use_global_stats: true
+	}
+}
+
+layer {
+	bottom: "bn5c_branch2c"
+	top: "bn5c_branch2c"
+	name: "scale5c_branch2c"
+	type: "Scale"
+	scale_param {
+		bias_term: true
+	}
+}
+
+layer {
+	bottom: "res5b"
+	bottom: "bn5c_branch2c"
+	top: "res5c"
+	name: "res5c"
+	type: "Eltwise"
+}
+
+layer {
+	bottom: "res5c"
+	top: "res5c"
+	name: "res5c_relu"
+	type: "ReLU"
+}
+
+layer {
+	bottom: "res5c"
+	top: "pool5"
+	name: "pool5"
+	type: "Pooling"
+	pooling_param {
+		kernel_size: 7
+		stride: 1
+		pool: AVE
+	}
+}
+
+layer {
+	bottom: "pool5"
+	top: "fc1000"
+	name: "fc1000"
+	type: "InnerProduct"
+	inner_product_param {
+		num_output: 1000
+	}
+}
+
+layer {
+	bottom: "fc1000"
+	top: "prob"
+	name: "prob"
+	type: "Softmax"
+}
+
diff --git a/caffe2/python/tutorials/ResNet-50-deploy.prototxt b/caffe2/python/tutorials/ResNet-50-deploy.prototxt
new file mode 100644
index 000000000..6e8663cc7
--- /dev/null
+++ b/caffe2/python/tutorials/ResNet-50-deploy.prototxt
@@ -0,0 +1,2323 @@
+# Enter your network definition here.
+# Use Shift+Enter to update the visualization.
+
+name: "ResNet-50"
+input: "data"
+input_dim: 1
+input_dim: 3
+input_dim: 224
+input_dim: 224
+
+layer {
+	bottom: "data"
+	top: "conv1"
+	name: "conv1"
+	type: "Convolution"
+	convolution_param {
+		num_output: 64
+		kernel_size: 7
+		pad: 3
+		stride: 2
+	}
+}
+
+layer {
+	bottom: "conv1"
+	top: "bn_conv1"
+	name: "bn_conv1"
+	type: "BatchNorm"
+	batch_norm_param {
+		use_global_stats: true
+	}
+}
+
+layer {
+	bottom: "bn_conv1"
+	top: "bn_conv1"
+	name: "scale_conv1"
+	type: "Scale"
+	scale_param {
+		bias_term: true
+	}
+}
+
+layer {
+	bottom: "bn_conv1"
+	top: "bn_conv1"
+	name: "conv1_relu"
+	type: "ReLU"
+}
+
+layer {
+	bottom: "bn_conv1"
+	top: "pool1"
+	name: "pool1"
+	type: "Pooling"
+	pooling_param {
+		kernel_size: 3
+		stride: 2
+		pool: MAX
+	}
+}
+
+layer {
+	bottom: "pool1"
+	top: "res2a_branch1"
+	name: "res2a_branch1"
+	type: "Convolution"
+	convolution_param {
+		num_output: 256
+		kernel_size: 1
+		pad: 0
+		stride: 1
+		bias_term: false
+	}
+}
+
+layer {
+	bottom: "res2a_branch1"
+	top: "bn2a_branch1"
+	name: "bn2a_branch1"
+	type: "BatchNorm"
+	batch_norm_param {
+		use_global_stats: true
+	}
+}
+
+layer {
+	bottom: "bn2a_branch1"
+	top: "bn2a_branch1"
+	name: "scale2a_branch1"
+	type: "Scale"
+	scale_param {
+		bias_term: true
+	}
+}
+
+layer {
+	bottom: "pool1"
+	top: "res2a_branch2a"
+	name: "res2a_branch2a"
+	type: "Convolution"
+	convolution_param {
+		num_output: 64
+		kernel_size: 1
+		pad: 0
+		stride: 1
+		bias_term: false
+	}
+}
+
+layer {
+	bottom: "res2a_branch2a"
+	top: "bn2a_branch2a"
+	name: "bn2a_branch2a"
+	type: "BatchNorm"
+	batch_norm_param {
+		use_global_stats: true
+	}
+}
+
+layer {
+	bottom: "bn2a_branch2a"
+	top: "bn2a_branch2a"
+	name: "scale2a_branch2a"
+	type: "Scale"
+	scale_param {
+		bias_term: true
+	}
+}
+
+layer {
+	bottom: "bn2a_branch2a"
+	top: "bn2a_branch2a"
+	name: "res2a_branch2a_relu"
+	type: "ReLU"
+}
+
+layer {
+	bottom: "bn2a_branch2a"
+	top: "res2a_branch2b"
+	name: "res2a_branch2b"
+	type: "Convolution"
+	convolution_param {
+		num_output: 64
+		kernel_size: 3
+		pad: 1
+		stride: 1
+		bias_term: false
+	}
+}
+
+layer {
+	bottom: "res2a_branch2b"
+	top: "bn2a_branch2b"
+	name: "bn2a_branch2b"
+	type: "BatchNorm"
+	batch_norm_param {
+		use_global_stats: true
+	}
+}
+
+layer {
+	bottom: "bn2a_branch2b"
+	top: "bn2a_branch2b"
+	name: "scale2a_branch2b"
+	type: "Scale"
+	scale_param {
+		bias_term: true
+	}
+}
+
+layer {
+	bottom: "bn2a_branch2b"
+	top: "bn2a_branch2b"
+	name: "res2a_branch2b_relu"
+	type: "ReLU"
+}
+
+layer {
+	bottom: "bn2a_branch2b"
+	top: "res2a_branch2c"
+	name: "res2a_branch2c"
+	type: "Convolution"
+	convolution_param {
+		num_output: 256
+		kernel_size: 1
+		pad: 0
+		stride: 1
+		bias_term: false
+	}
+}
+
+layer {
+	bottom: "res2a_branch2c"
+	top: "bn2a_branch2c"
+	name: "bn2a_branch2c"
+	type: "BatchNorm"
+	batch_norm_param {
+		use_global_stats: true
+	}
+}
+
+layer {
+	bottom: "bn2a_branch2c"
+	top: "bn2a_branch2c"
+	name: "scale2a_branch2c"
+	type: "Scale"
+	scale_param {
+		bias_term: true
+	}
+}
+
+layer {
+	bottom: "bn2a_branch1"
+	bottom: "bn2a_branch2c"
+	top: "res2a"
+	name: "res2a"
+	type: "Eltwise"
+}
+
+layer {
+	bottom: "res2a"
+	top: "res2a"
+	name: "res2a_relu"
+	type: "ReLU"
+}
+
+layer {
+	bottom: "res2a"
+	top: "res2b_branch2a"
+	name: "res2b_branch2a"
+	type: "Convolution"
+	convolution_param {
+		num_output: 64
+		kernel_size: 1
+		pad: 0
+		stride: 1
+		bias_term: false
+	}
+}
+
+layer {
+	bottom: "res2b_branch2a"
+	top: "bn2b_branch2a"
+	name: "bn2b_branch2a"
+	type: "BatchNorm"
+	batch_norm_param {
+		use_global_stats: true
+	}
+}
+
+layer {
+	bottom: "bn2b_branch2a"
+	top: "bn2b_branch2a"
+	name: "scale2b_branch2a"
+	type: "Scale"
+	scale_param {
+		bias_term: true
+	}
+}
+
+layer {
+	bottom: "bn2b_branch2a"
+	top: "bn2b_branch2a"
+	name: "res2b_branch2a_relu"
+	type: "ReLU"
+}
+
+layer {
+	bottom: "bn2b_branch2a"
+	top: "res2b_branch2b"
+	name: "res2b_branch2b"
+	type: "Convolution"
+	convolution_param {
+		num_output: 64
+		kernel_size: 3
+		pad: 1
+		stride: 1
+		bias_term: false
+	}
+}
+
+layer {
+	bottom: "res2b_branch2b"
+	top: "bn2b_branch2b"
+	name: "bn2b_branch2b"
+	type: "BatchNorm"
+	batch_norm_param {
+		use_global_stats: true
+	}
+}
+
+layer {
+	bottom: "bn2b_branch2b"
+	top: "bn2b_branch2b"
+	name: "scale2b_branch2b"
+	type: "Scale"
+	scale_param {
+		bias_term: true
+	}
+}
+
+layer {
+	bottom: "bn2b_branch2b"
+	top: "bn2b_branch2b"
+	name: "res2b_branch2b_relu"
+	type: "ReLU"
+}
+
+layer {
+	bottom: "bn2b_branch2b"
+	top: "res2b_branch2c"
+	name: "res2b_branch2c"
+	type: "Convolution"
+	convolution_param {
+		num_output: 256
+		kernel_size: 1
+		pad: 0
+		stride: 1
+		bias_term: false
+	}
+}
+
+layer {
+	bottom: "res2b_branch2c"
+	top: "bn2b_branch2c"
+	name: "bn2b_branch2c"
+	type: "BatchNorm"
+	batch_norm_param {
+		use_global_stats: true
+	}
+}
+
+layer {
+	bottom: "bn2b_branch2c"
+	top: "bn2b_branch2c"
+	name: "scale2b_branch2c"
+	type: "Scale"
+	scale_param {
+		bias_term: true
+	}
+}
+
+layer {
+	bottom: "res2a"
+	bottom: "bn2b_branch2c"
+	top: "res2b"
+	name: "res2b"
+	type: "Eltwise"
+}
+
+layer {
+	bottom: "res2b"
+	top: "res2b"
+	name: "res2b_relu"
+	type: "ReLU"
+}
+
+layer {
+	bottom: "res2b"
+	top: "res2c_branch2a"
+	name: "res2c_branch2a"
+	type: "Convolution"
+	convolution_param {
+		num_output: 64
+		kernel_size: 1
+		pad: 0
+		stride: 1
+		bias_term: false
+	}
+}
+
+layer {
+	bottom: "res2c_branch2a"
+	top: "bn2c_branch2a"
+	name: "bn2c_branch2a"
+	type: "BatchNorm"
+	batch_norm_param {
+		use_global_stats: true
+	}
+}
+
+layer {
+	bottom: "bn2c_branch2a"
+	top: "bn2c_branch2a"
+	name: "scale2c_branch2a"
+	type: "Scale"
+	scale_param {
+		bias_term: true
+	}
+}
+
+layer {
+	bottom: "bn2c_branch2a"
+	top: "bn2c_branch2a"
+	name: "res2c_branch2a_relu"
+	type: "ReLU"
+}
+
+layer {
+	bottom: "bn2c_branch2a"
+	top: "res2c_branch2b"
+	name: "res2c_branch2b"
+	type: "Convolution"
+	convolution_param {
+		num_output: 64
+		kernel_size: 3
+		pad: 1
+		stride: 1
+		bias_term: false
+	}
+}
+
+layer {
+	bottom: "res2c_branch2b"
+	top: "bn2c_branch2b"
+	name: "bn2c_branch2b"
+	type: "BatchNorm"
+	batch_norm_param {
+		use_global_stats: true
+	}
+}
+
+layer {
+	bottom: "bn2c_branch2b"
+	top: "bn2c_branch2b"
+	name: "scale2c_branch2b"
+	type: "Scale"
+	scale_param {
+		bias_term: true
+	}
+}
+
+layer {
+	bottom: "bn2c_branch2b"
+	top: "bn2c_branch2b"
+	name: "res2c_branch2b_relu"
+	type: "ReLU"
+}
+
+layer {
+	bottom: "bn2c_branch2b"
+	top: "res2c_branch2c"
+	name: "res2c_branch2c"
+	type: "Convolution"
+	convolution_param {
+		num_output: 256
+		kernel_size: 1
+		pad: 0
+		stride: 1
+		bias_term: false
+	}
+}
+
+layer {
+	bottom: "res2c_branch2c"
+	top: "bn2c_branch2c"
+	name: "bn2c_branch2c"
+	type: "BatchNorm"
+	batch_norm_param {
+		use_global_stats: true
+	}
+}
+
+layer {
+	bottom: "bn2c_branch2c"
+	top: "bn2c_branch2c"
+	name: "scale2c_branch2c"
+	type: "Scale"
+	scale_param {
+		bias_term: true
+	}
+}
+
+layer {
+	bottom: "res2b"
+	bottom: "bn2c_branch2c"
+	top: "res2c"
+	name: "res2c"
+	type: "Eltwise"
+}
+
+layer {
+	bottom: "res2c"
+	top: "res2c"
+	name: "res2c_relu"
+	type: "ReLU"
+}
+
+layer {
+	bottom: "res2c"
+	top: "res3a_branch1"
+	name: "res3a_branch1"
+	type: "Convolution"
+	convolution_param {
+		num_output: 512
+		kernel_size: 1
+		pad: 0
+		stride: 2
+		bias_term: false
+	}
+}
+
+layer {
+	bottom: "res3a_branch1"
+	top: "bn3a_branch1"
+	name: "bn3a_branch1"
+	type: "BatchNorm"
+	batch_norm_param {
+		use_global_stats: true
+	}
+}
+
+layer {
+	bottom: "bn3a_branch1"
+	top: "bn3a_branch1"
+	name: "scale3a_branch1"
+	type: "Scale"
+	scale_param {
+		bias_term: true
+	}
+}
+
+layer {
+	bottom: "res2c"
+	top: "res3a_branch2a"
+	name: "res3a_branch2a"
+	type: "Convolution"
+	convolution_param {
+		num_output: 128
+		kernel_size: 1
+		pad: 0
+		stride: 2
+		bias_term: false
+	}
+}
+
+layer {
+	bottom: "res3a_branch2a"
+	top: "bn3a_branch2a"
+	name: "bn3a_branch2a"
+	type: "BatchNorm"
+	batch_norm_param {
+		use_global_stats: true
+	}
+}
+
+layer {
+	bottom: "bn3a_branch2a"
+	top: "bn3a_branch2a"
+	name: "scale3a_branch2a"
+	type: "Scale"
+	scale_param {
+		bias_term: true
+	}
+}
+
+layer {
+	bottom: "bn3a_branch2a"
+	top: "bn3a_branch2a"
+	name: "res3a_branch2a_relu"
+	type: "ReLU"
+}
+
+layer {
+	bottom: "bn3a_branch2a"
+	top: "res3a_branch2b"
+	name: "res3a_branch2b"
+	type: "Convolution"
+	convolution_param {
+		num_output: 128
+		kernel_size: 3
+		pad: 1
+		stride: 1
+		bias_term: false
+	}
+}
+
+layer {
+	bottom: "res3a_branch2b"
+	top: "bn3a_branch2b"
+	name: "bn3a_branch2b"
+	type: "BatchNorm"
+	batch_norm_param {
+		use_global_stats: true
+	}
+}
+
+layer {
+	bottom: "bn3a_branch2b"
+	top: "bn3a_branch2b"
+	name: "scale3a_branch2b"
+	type: "Scale"
+	scale_param {
+		bias_term: true
+	}
+}
+
+layer {
+	bottom: "bn3a_branch2b"
+	top: "bn3a_branch2b"
+	name: "res3a_branch2b_relu"
+	type: "ReLU"
+}
+
+layer {
+	bottom: "bn3a_branch2b"
+	top: "res3a_branch2c"
+	name: "res3a_branch2c"
+	type: "Convolution"
+	convolution_param {
+		num_output: 512
+		kernel_size: 1
+		pad: 0
+		stride: 1
+		bias_term: false
+	}
+}
+
+layer {
+	bottom: "res3a_branch2c"
+	top: "bn3a_branch2c"
+	name: "bn3a_branch2c"
+	type: "BatchNorm"
+	batch_norm_param {
+		use_global_stats: true
+	}
+}
+
+layer {
+	bottom: "bn3a_branch2c"
+	top: "bn3a_branch2c"
+	name: "scale3a_branch2c"
+	type: "Scale"
+	scale_param {
+		bias_term: true
+	}
+}
+
+layer {
+	bottom: "bn3a_branch1"
+	bottom: "bn3a_branch2c"
+	top: "res3a"
+	name: "res3a"
+	type: "Eltwise"
+}
+
+layer {
+	bottom: "res3a"
+	top: "res3a"
+	name: "res3a_relu"
+	type: "ReLU"
+}
+
+layer {
+	bottom: "res3a"
+	top: "res3b_branch2a"
+	name: "res3b_branch2a"
+	type: "Convolution"
+	convolution_param {
+		num_output: 128
+		kernel_size: 1
+		pad: 0
+		stride: 1
+		bias_term: false
+	}
+}
+
+layer {
+	bottom: "res3b_branch2a"
+	top: "bn3b_branch2a"
+	name: "bn3b_branch2a"
+	type: "BatchNorm"
+	batch_norm_param {
+		use_global_stats: true
+	}
+}
+
+layer {
+	bottom: "bn3b_branch2a"
+	top: "bn3b_branch2a"
+	name: "scale3b_branch2a"
+	type: "Scale"
+	scale_param {
+		bias_term: true
+	}
+}
+
+layer {
+	bottom: "bn3b_branch2a"
+	top: "bn3b_branch2a"
+	name: "res3b_branch2a_relu"
+	type: "ReLU"
+}
+
+layer {
+	bottom: "bn3b_branch2a"
+	top: "res3b_branch2b"
+	name: "res3b_branch2b"
+	type: "Convolution"
+	convolution_param {
+		num_output: 128
+		kernel_size: 3
+		pad: 1
+		stride: 1
+		bias_term: false
+	}
+}
+
+layer {
+	bottom: "res3b_branch2b"
+	top: "bn3b_branch2b"
+	name: "bn3b_branch2b"
+	type: "BatchNorm"
+	batch_norm_param {
+		use_global_stats: true
+	}
+}
+
+layer {
+	bottom: "bn3b_branch2b"
+	top: "bn3b_branch2b"
+	name: "scale3b_branch2b"
+	type: "Scale"
+	scale_param {
+		bias_term: true
+	}
+}
+
+layer {
+	bottom: "bn3b_branch2b"
+	top: "bn3b_branch2b"
+	name: "res3b_branch2b_relu"
+	type: "ReLU"
+}
+
+layer {
+	bottom: "bn3b_branch2b"
+	top: "res3b_branch2c"
+	name: "res3b_branch2c"
+	type: "Convolution"
+	convolution_param {
+		num_output: 512
+		kernel_size: 1
+		pad: 0
+		stride: 1
+		bias_term: false
+	}
+}
+
+layer {
+	bottom: "res3b_branch2c"
+	top: "bn3b_branch2c"
+	name: "bn3b_branch2c"
+	type: "BatchNorm"
+	batch_norm_param {
+		use_global_stats: true
+	}
+}
+
+layer {
+	bottom: "bn3b_branch2c"
+	top: "bn3b_branch2c"
+	name: "scale3b_branch2c"
+	type: "Scale"
+	scale_param {
+		bias_term: true
+	}
+}
+
+layer {
+	bottom: "res3a"
+	bottom: "bn3b_branch2c"
+	top: "res3b"
+	name: "res3b"
+	type: "Eltwise"
+}
+
+layer {
+	bottom: "res3b"
+	top: "res3b"
+	name: "res3b_relu"
+	type: "ReLU"
+}
+
+layer {
+	bottom: "res3b"
+	top: "res3c_branch2a"
+	name: "res3c_branch2a"
+	type: "Convolution"
+	convolution_param {
+		num_output: 128
+		kernel_size: 1
+		pad: 0
+		stride: 1
+		bias_term: false
+	}
+}
+
+layer {
+	bottom: "res3c_branch2a"
+	top: "bn3c_branch2a"
+	name: "bn3c_branch2a"
+	type: "BatchNorm"
+	batch_norm_param {
+		use_global_stats: true
+	}
+}
+
+layer {
+	bottom: "bn3c_branch2a"
+	top: "bn3c_branch2a"
+	name: "scale3c_branch2a"
+	type: "Scale"
+	scale_param {
+		bias_term: true
+	}
+}
+
+layer {
+	bottom: "bn3c_branch2a"
+	top: "bn3c_branch2a"
+	name: "res3c_branch2a_relu"
+	type: "ReLU"
+}
+
+layer {
+	bottom: "bn3c_branch2a"
+	top: "res3c_branch2b"
+	name: "res3c_branch2b"
+	type: "Convolution"
+	convolution_param {
+		num_output: 128
+		kernel_size: 3
+		pad: 1
+		stride: 1
+		bias_term: false
+	}
+}
+
+layer {
+	bottom: "res3c_branch2b"
+	top: "bn3c_branch2b"
+	name: "bn3c_branch2b"
+	type: "BatchNorm"
+	batch_norm_param {
+		use_global_stats: true
+	}
+}
+
+layer {
+	bottom: "bn3c_branch2b"
+	top: "bn3c_branch2b"
+	name: "scale3c_branch2b"
+	type: "Scale"
+	scale_param {
+		bias_term: true
+	}
+}
+
+layer {
+	bottom: "bn3c_branch2b"
+	top: "bn3c_branch2b"
+	name: "res3c_branch2b_relu"
+	type: "ReLU"
+}
+
+layer {
+	bottom: "bn3c_branch2b"
+	top: "res3c_branch2c"
+	name: "res3c_branch2c"
+	type: "Convolution"
+	convolution_param {
+		num_output: 512
+		kernel_size: 1
+		pad: 0
+		stride: 1
+		bias_term: false
+	}
+}
+
+layer {
+	bottom: "res3c_branch2c"
+	top: "bn3c_branch2c"
+	name: "bn3c_branch2c"
+	type: "BatchNorm"
+	batch_norm_param {
+		use_global_stats: true
+	}
+}
+
+layer {
+	bottom: "bn3c_branch2c"
+	top: "bn3c_branch2c"
+	name: "scale3c_branch2c"
+	type: "Scale"
+	scale_param {
+		bias_term: true
+	}
+}
+
+layer {
+	bottom: "res3b"
+	bottom: "bn3c_branch2c"
+	top: "res3c"
+	name: "res3c"
+	type: "Eltwise"
+}
+
+layer {
+	bottom: "res3c"
+	top: "res3c"
+	name: "res3c_relu"
+	type: "ReLU"
+}
+
+layer {
+	bottom: "res3c"
+	top: "res3d_branch2a"
+	name: "res3d_branch2a"
+	type: "Convolution"
+	convolution_param {
+		num_output: 128
+		kernel_size: 1
+		pad: 0
+		stride: 1
+		bias_term: false
+	}
+}
+
+layer {
+	bottom: "res3d_branch2a"
+	top: "bn3d_branch2a"
+	name: "bn3d_branch2a"
+	type: "BatchNorm"
+	batch_norm_param {
+		use_global_stats: true
+	}
+}
+
+layer {
+	bottom: "bn3d_branch2a"
+	top: "bn3d_branch2a"
+	name: "scale3d_branch2a"
+	type: "Scale"
+	scale_param {
+		bias_term: true
+	}
+}
+
+layer {
+	bottom: "bn3d_branch2a"
+	top: "bn3d_branch2a"
+	name: "res3d_branch2a_relu"
+	type: "ReLU"
+}
+
+layer {
+	bottom: "bn3d_branch2a"
+	top: "res3d_branch2b"
+	name: "res3d_branch2b"
+	type: "Convolution"
+	convolution_param {
+		num_output: 128
+		kernel_size: 3
+		pad: 1
+		stride: 1
+		bias_term: false
+	}
+}
+
+layer {
+	bottom: "res3d_branch2b"
+	top: "bn3d_branch2b"
+	name: "bn3d_branch2b"
+	type: "BatchNorm"
+	batch_norm_param {
+		use_global_stats: true
+	}
+}
+
+layer {
+	bottom: "bn3d_branch2b"
+	top: "bn3d_branch2b"
+	name: "scale3d_branch2b"
+	type: "Scale"
+	scale_param {
+		bias_term: true
+	}
+}
+
+layer {
+	bottom: "bn3d_branch2b"
+	top: "bn3d_branch2b"
+	name: "res3d_branch2b_relu"
+	type: "ReLU"
+}
+
+layer {
+	bottom: "bn3d_branch2b"
+	top: "res3d_branch2c"
+	name: "res3d_branch2c"
+	type: "Convolution"
+	convolution_param {
+		num_output: 512
+		kernel_size: 1
+		pad: 0
+		stride: 1
+		bias_term: false
+	}
+}
+
+layer {
+	bottom: "res3d_branch2c"
+	top: "bn3d_branch2c"
+	name: "bn3d_branch2c"
+	type: "BatchNorm"
+	batch_norm_param {
+		use_global_stats: true
+	}
+}
+
+layer {
+	bottom: "bn3d_branch2c"
+	top: "bn3d_branch2c"
+	name: "scale3d_branch2c"
+	type: "Scale"
+	scale_param {
+		bias_term: true
+	}
+}
+
+layer {
+	bottom: "res3c"
+	bottom: "bn3d_branch2c"
+	top: "res3d"
+	name: "res3d"
+	type: "Eltwise"
+}
+
+layer {
+	bottom: "res3d"
+	top: "res3d"
+	name: "res3d_relu"
+	type: "ReLU"
+}
+
+layer {
+	bottom: "res3d"
+	top: "res4a_branch1"
+	name: "res4a_branch1"
+	type: "Convolution"
+	convolution_param {
+		num_output: 1024
+		kernel_size: 1
+		pad: 0
+		stride: 2
+		bias_term: false
+	}
+}
+
+layer {
+	bottom: "res4a_branch1"
+	top: "bn4a_branch1"
+	name: "bn4a_branch1"
+	type: "BatchNorm"
+	batch_norm_param {
+		use_global_stats: true
+	}
+}
+
+layer {
+	bottom: "bn4a_branch1"
+	top: "bn4a_branch1"
+	name: "scale4a_branch1"
+	type: "Scale"
+	scale_param {
+		bias_term: true
+	}
+}
+
+layer {
+	bottom: "res3d"
+	top: "res4a_branch2a"
+	name: "res4a_branch2a"
+	type: "Convolution"
+	convolution_param {
+		num_output: 256
+		kernel_size: 1
+		pad: 0
+		stride: 2
+		bias_term: false
+	}
+}
+
+layer {
+	bottom: "res4a_branch2a"
+	top: "bn4a_branch2a"
+	name: "bn4a_branch2a"
+	type: "BatchNorm"
+	batch_norm_param {
+		use_global_stats: true
+	}
+}
+
+layer {
+	bottom: "bn4a_branch2a"
+	top: "bn4a_branch2a"
+	name: "scale4a_branch2a"
+	type: "Scale"
+	scale_param {
+		bias_term: true
+	}
+}
+
+layer {
+	bottom: "bn4a_branch2a"
+	top: "bn4a_branch2a"
+	name: "res4a_branch2a_relu"
+	type: "ReLU"
+}
+
+layer {
+	bottom: "bn4a_branch2a"
+	top: "res4a_branch2b"
+	name: "res4a_branch2b"
+	type: "Convolution"
+	convolution_param {
+		num_output: 256
+		kernel_size: 3
+		pad: 1
+		stride: 1
+		bias_term: false
+	}
+}
+
+layer {
+	bottom: "res4a_branch2b"
+	top: "bn4a_branch2b"
+	name: "bn4a_branch2b"
+	type: "BatchNorm"
+	batch_norm_param {
+		use_global_stats: true
+	}
+}
+
+layer {
+	bottom: "bn4a_branch2b"
+	top: "bn4a_branch2b"
+	name: "scale4a_branch2b"
+	type: "Scale"
+	scale_param {
+		bias_term: true
+	}
+}
+
+layer {
+	bottom: "bn4a_branch2b"
+	top: "bn4a_branch2b"
+	name: "res4a_branch2b_relu"
+	type: "ReLU"
+}
+
+layer {
+	bottom: "bn4a_branch2b"
+	top: "res4a_branch2c"
+	name: "res4a_branch2c"
+	type: "Convolution"
+	convolution_param {
+		num_output: 1024
+		kernel_size: 1
+		pad: 0
+		stride: 1
+		bias_term: false
+	}
+}
+
+layer {
+	bottom: "res4a_branch2c"
+	top: "bn4a_branch2c"
+	name: "bn4a_branch2c"
+	type: "BatchNorm"
+	batch_norm_param {
+		use_global_stats: true
+	}
+}
+
+layer {
+	bottom: "bn4a_branch2c"
+	top: "bn4a_branch2c"
+	name: "scale4a_branch2c"
+	type: "Scale"
+	scale_param {
+		bias_term: true
+	}
+}
+
+layer {
+	bottom: "bn4a_branch1"
+	bottom: "bn4a_branch2c"
+	top: "res4a"
+	name: "res4a"
+	type: "Eltwise"
+}
+
+layer {
+	bottom: "res4a"
+	top: "res4a"
+	name: "res4a_relu"
+	type: "ReLU"
+}
+
+layer {
+	bottom: "res4a"
+	top: "res4b_branch2a"
+	name: "res4b_branch2a"
+	type: "Convolution"
+	convolution_param {
+		num_output: 256
+		kernel_size: 1
+		pad: 0
+		stride: 1
+		bias_term: false
+	}
+}
+
+layer {
+	bottom: "res4b_branch2a"
+	top: "bn4b_branch2a"
+	name: "bn4b_branch2a"
+	type: "BatchNorm"
+	batch_norm_param {
+		use_global_stats: true
+	}
+}
+
+layer {
+	bottom: "bn4b_branch2a"
+	top: "bn4b_branch2a"
+	name: "scale4b_branch2a"
+	type: "Scale"
+	scale_param {
+		bias_term: true
+	}
+}
+
+layer {
+	bottom: "bn4b_branch2a"
+	top: "bn4b_branch2a"
+	name: "res4b_branch2a_relu"
+	type: "ReLU"
+}
+
+layer {
+	bottom: "bn4b_branch2a"
+	top: "res4b_branch2b"
+	name: "res4b_branch2b"
+	type: "Convolution"
+	convolution_param {
+		num_output: 256
+		kernel_size: 3
+		pad: 1
+		stride: 1
+		bias_term: false
+	}
+}
+
+layer {
+	bottom: "res4b_branch2b"
+	top: "bn4b_branch2b"
+	name: "bn4b_branch2b"
+	type: "BatchNorm"
+	batch_norm_param {
+		use_global_stats: true
+	}
+}
+
+layer {
+	bottom: "bn4b_branch2b"
+	top: "bn4b_branch2b"
+	name: "scale4b_branch2b"
+	type: "Scale"
+	scale_param {
+		bias_term: true
+	}
+}
+
+layer {
+	bottom: "bn4b_branch2b"
+	top: "bn4b_branch2b"
+	name: "res4b_branch2b_relu"
+	type: "ReLU"
+}
+
+layer {
+	bottom: "bn4b_branch2b"
+	top: "res4b_branch2c"
+	name: "res4b_branch2c"
+	type: "Convolution"
+	convolution_param {
+		num_output: 1024
+		kernel_size: 1
+		pad: 0
+		stride: 1
+		bias_term: false
+	}
+}
+
+layer {
+	bottom: "res4b_branch2c"
+	top: "bn4b_branch2c"
+	name: "bn4b_branch2c"
+	type: "BatchNorm"
+	batch_norm_param {
+		use_global_stats: true
+	}
+}
+
+layer {
+	bottom: "bn4b_branch2c"
+	top: "bn4b_branch2c"
+	name: "scale4b_branch2c"
+	type: "Scale"
+	scale_param {
+		bias_term: true
+	}
+}
+
+layer {
+	bottom: "res4a"
+	bottom: "bn4b_branch2c"
+	top: "res4b"
+	name: "res4b"
+	type: "Eltwise"
+}
+
+layer {
+	bottom: "res4b"
+	top: "res4b"
+	name: "res4b_relu"
+	type: "ReLU"
+}
+
+layer {
+	bottom: "res4b"
+	top: "res4c_branch2a"
+	name: "res4c_branch2a"
+	type: "Convolution"
+	convolution_param {
+		num_output: 256
+		kernel_size: 1
+		pad: 0
+		stride: 1
+		bias_term: false
+	}
+}
+
+layer {
+	bottom: "res4c_branch2a"
+	top: "bn4c_branch2a"
+	name: "bn4c_branch2a"
+	type: "BatchNorm"
+	batch_norm_param {
+		use_global_stats: true
+	}
+}
+
+layer {
+	bottom: "bn4c_branch2a"
+	top: "bn4c_branch2a"
+	name: "scale4c_branch2a"
+	type: "Scale"
+	scale_param {
+		bias_term: true
+	}
+}
+
+layer {
+	bottom: "bn4c_branch2a"
+	top: "bn4c_branch2a"
+	name: "res4c_branch2a_relu"
+	type: "ReLU"
+}
+
+layer {
+	bottom: "bn4c_branch2a"
+	top: "res4c_branch2b"
+	name: "res4c_branch2b"
+	type: "Convolution"
+	convolution_param {
+		num_output: 256
+		kernel_size: 3
+		pad: 1
+		stride: 1
+		bias_term: false
+	}
+}
+
+layer {
+	bottom: "res4c_branch2b"
+	top: "bn4c_branch2b"
+	name: "bn4c_branch2b"
+	type: "BatchNorm"
+	batch_norm_param {
+		use_global_stats: true
+	}
+}
+
+layer {
+	bottom: "bn4c_branch2b"
+	top: "bn4c_branch2b"
+	name: "scale4c_branch2b"
+	type: "Scale"
+	scale_param {
+		bias_term: true
+	}
+}
+
+layer {
+	bottom: "bn4c_branch2b"
+	top: "bn4c_branch2b"
+	name: "res4c_branch2b_relu"
+	type: "ReLU"
+}
+
+layer {
+	bottom: "bn4c_branch2b"
+	top: "res4c_branch2c"
+	name: "res4c_branch2c"
+	type: "Convolution"
+	convolution_param {
+		num_output: 1024
+		kernel_size: 1
+		pad: 0
+		stride: 1
+		bias_term: false
+	}
+}
+
+layer {
+	bottom: "res4c_branch2c"
+	top: "bn4c_branch2c"
+	name: "bn4c_branch2c"
+	type: "BatchNorm"
+	batch_norm_param {
+		use_global_stats: true
+	}
+}
+
+layer {
+	bottom: "bn4c_branch2c"
+	top: "bn4c_branch2c"
+	name: "scale4c_branch2c"
+	type: "Scale"
+	scale_param {
+		bias_term: true
+	}
+}
+
+layer {
+	bottom: "res4b"
+	bottom: "bn4c_branch2c"
+	top: "res4c"
+	name: "res4c"
+	type: "Eltwise"
+}
+
+layer {
+	bottom: "res4c"
+	top: "res4c"
+	name: "res4c_relu"
+	type: "ReLU"
+}
+
+layer {
+	bottom: "res4c"
+	top: "res4d_branch2a"
+	name: "res4d_branch2a"
+	type: "Convolution"
+	convolution_param {
+		num_output: 256
+		kernel_size: 1
+		pad: 0
+		stride: 1
+		bias_term: false
+	}
+}
+
+layer {
+	bottom: "res4d_branch2a"
+	top: "bn4d_branch2a"
+	name: "bn4d_branch2a"
+	type: "BatchNorm"
+	batch_norm_param {
+		use_global_stats: true
+	}
+}
+
+layer {
+	bottom: "bn4d_branch2a"
+	top: "bn4d_branch2a"
+	name: "scale4d_branch2a"
+	type: "Scale"
+	scale_param {
+		bias_term: true
+	}
+}
+
+layer {
+	bottom: "bn4d_branch2a"
+	top: "bn4d_branch2a"
+	name: "res4d_branch2a_relu"
+	type: "ReLU"
+}
+
+layer {
+	bottom: "bn4d_branch2a"
+	top: "res4d_branch2b"
+	name: "res4d_branch2b"
+	type: "Convolution"
+	convolution_param {
+		num_output: 256
+		kernel_size: 3
+		pad: 1
+		stride: 1
+		bias_term: false
+	}
+}
+
+layer {
+	bottom: "res4d_branch2b"
+	top: "bn4d_branch2b"
+	name: "bn4d_branch2b"
+	type: "BatchNorm"
+	batch_norm_param {
+		use_global_stats: true
+	}
+}
+
+layer {
+	bottom: "bn4d_branch2b"
+	top: "bn4d_branch2b"
+	name: "scale4d_branch2b"
+	type: "Scale"
+	scale_param {
+		bias_term: true
+	}
+}
+
+layer {
+	bottom: "bn4d_branch2b"
+	top: "bn4d_branch2b"
+	name: "res4d_branch2b_relu"
+	type: "ReLU"
+}
+
+layer {
+	bottom: "bn4d_branch2b"
+	top: "res4d_branch2c"
+	name: "res4d_branch2c"
+	type: "Convolution"
+	convolution_param {
+		num_output: 1024
+		kernel_size: 1
+		pad: 0
+		stride: 1
+		bias_term: false
+	}
+}
+
+layer {
+	bottom: "res4d_branch2c"
+	top: "bn4d_branch2c"
+	name: "bn4d_branch2c"
+	type: "BatchNorm"
+	batch_norm_param {
+		use_global_stats: true
+	}
+}
+
+layer {
+	bottom: "bn4d_branch2c"
+	top: "bn4d_branch2c"
+	name: "scale4d_branch2c"
+	type: "Scale"
+	scale_param {
+		bias_term: true
+	}
+}
+
+layer {
+	bottom: "res4c"
+	bottom: "bn4d_branch2c"
+	top: "res4d"
+	name: "res4d"
+	type: "Eltwise"
+}
+
+layer {
+	bottom: "res4d"
+	top: "res4d"
+	name: "res4d_relu"
+	type: "ReLU"
+}
+
+layer {
+	bottom: "res4d"
+	top: "res4e_branch2a"
+	name: "res4e_branch2a"
+	type: "Convolution"
+	convolution_param {
+		num_output: 256
+		kernel_size: 1
+		pad: 0
+		stride: 1
+		bias_term: false
+	}
+}
+
+layer {
+	bottom: "res4e_branch2a"
+	top: "bn4e_branch2a"
+	name: "bn4e_branch2a"
+	type: "BatchNorm"
+	batch_norm_param {
+		use_global_stats: true
+	}
+}
+
+layer {
+	bottom: "bn4e_branch2a"
+	top: "bn4e_branch2a"
+	name: "scale4e_branch2a"
+	type: "Scale"
+	scale_param {
+		bias_term: true
+	}
+}
+
+layer {
+	bottom: "bn4e_branch2a"
+	top: "bn4e_branch2a"
+	name: "res4e_branch2a_relu"
+	type: "ReLU"
+}
+
+layer {
+	bottom: "bn4e_branch2a"
+	top: "res4e_branch2b"
+	name: "res4e_branch2b"
+	type: "Convolution"
+	convolution_param {
+		num_output: 256
+		kernel_size: 3
+		pad: 1
+		stride: 1
+		bias_term: false
+	}
+}
+
+layer {
+	bottom: "res4e_branch2b"
+	top: "bn4e_branch2b"
+	name: "bn4e_branch2b"
+	type: "BatchNorm"
+	batch_norm_param {
+		use_global_stats: true
+	}
+}
+
+layer {
+	bottom: "bn4e_branch2b"
+	top: "bn4e_branch2b"
+	name: "scale4e_branch2b"
+	type: "Scale"
+	scale_param {
+		bias_term: true
+	}
+}
+
+layer {
+	bottom: "bn4e_branch2b"
+	top: "bn4e_branch2b"
+	name: "res4e_branch2b_relu"
+	type: "ReLU"
+}
+
+layer {
+	bottom: "bn4e_branch2b"
+	top: "res4e_branch2c"
+	name: "res4e_branch2c"
+	type: "Convolution"
+	convolution_param {
+		num_output: 1024
+		kernel_size: 1
+		pad: 0
+		stride: 1
+		bias_term: false
+	}
+}
+
+layer {
+	bottom: "res4e_branch2c"
+	top: "bn4e_branch2c"
+	name: "bn4e_branch2c"
+	type: "BatchNorm"
+	batch_norm_param {
+		use_global_stats: true
+	}
+}
+
+layer {
+	bottom: "bn4e_branch2c"
+	top: "bn4e_branch2c"
+	name: "scale4e_branch2c"
+	type: "Scale"
+	scale_param {
+		bias_term: true
+	}
+}
+
+layer {
+	bottom: "res4d"
+	bottom: "bn4e_branch2c"
+	top: "res4e"
+	name: "res4e"
+	type: "Eltwise"
+}
+
+layer {
+	bottom: "res4e"
+	top: "res4e"
+	name: "res4e_relu"
+	type: "ReLU"
+}
+
+layer {
+	bottom: "res4e"
+	top: "res4f_branch2a"
+	name: "res4f_branch2a"
+	type: "Convolution"
+	convolution_param {
+		num_output: 256
+		kernel_size: 1
+		pad: 0
+		stride: 1
+		bias_term: false
+	}
+}
+
+layer {
+	bottom: "res4f_branch2a"
+	top: "bn4f_branch2a"
+	name: "bn4f_branch2a"
+	type: "BatchNorm"
+	batch_norm_param {
+		use_global_stats: true
+	}
+}
+
+layer {
+	bottom: "bn4f_branch2a"
+	top: "bn4f_branch2a"
+	name: "scale4f_branch2a"
+	type: "Scale"
+	scale_param {
+		bias_term: true
+	}
+}
+
+layer {
+	bottom: "bn4f_branch2a"
+	top: "bn4f_branch2a"
+	name: "res4f_branch2a_relu"
+	type: "ReLU"
+}
+
+layer {
+	bottom: "bn4f_branch2a"
+	top: "res4f_branch2b"
+	name: "res4f_branch2b"
+	type: "Convolution"
+	convolution_param {
+		num_output: 256
+		kernel_size: 3
+		pad: 1
+		stride: 1
+		bias_term: false
+	}
+}
+
+layer {
+	bottom: "res4f_branch2b"
+	top: "bn4f_branch2b"
+	name: "bn4f_branch2b"
+	type: "BatchNorm"
+	batch_norm_param {
+		use_global_stats: true
+	}
+}
+
+layer {
+	bottom: "bn4f_branch2b"
+	top: "bn4f_branch2b"
+	name: "scale4f_branch2b"
+	type: "Scale"
+	scale_param {
+		bias_term: true
+	}
+}
+
+layer {
+	bottom: "bn4f_branch2b"
+	top: "bn4f_branch2b"
+	name: "res4f_branch2b_relu"
+	type: "ReLU"
+}
+
+layer {
+	bottom: "bn4f_branch2b"
+	top: "res4f_branch2c"
+	name: "res4f_branch2c"
+	type: "Convolution"
+	convolution_param {
+		num_output: 1024
+		kernel_size: 1
+		pad: 0
+		stride: 1
+		bias_term: false
+	}
+}
+
+layer {
+	bottom: "res4f_branch2c"
+	top: "bn4f_branch2c"
+	name: "bn4f_branch2c"
+	type: "BatchNorm"
+	batch_norm_param {
+		use_global_stats: true
+	}
+}
+
+layer {
+	bottom: "bn4f_branch2c"
+	top: "bn4f_branch2c"
+	name: "scale4f_branch2c"
+	type: "Scale"
+	scale_param {
+		bias_term: true
+	}
+}
+
+layer {
+	bottom: "res4e"
+	bottom: "bn4f_branch2c"
+	top: "res4f"
+	name: "res4f"
+	type: "Eltwise"
+}
+
+layer {
+	bottom: "res4f"
+	top: "res4f"
+	name: "res4f_relu"
+	type: "ReLU"
+}
+
+layer {
+	bottom: "res4f"
+	top: "res5a_branch1"
+	name: "res5a_branch1"
+	type: "Convolution"
+	convolution_param {
+		num_output: 2048
+		kernel_size: 1
+		pad: 0
+		stride: 2
+		bias_term: false
+	}
+}
+
+layer {
+	bottom: "res5a_branch1"
+	top: "bn5a_branch1"
+	name: "bn5a_branch1"
+	type: "BatchNorm"
+	batch_norm_param {
+		use_global_stats: true
+	}
+}
+
+layer {
+	bottom: "bn5a_branch1"
+	top: "bn5a_branch1"
+	name: "scale5a_branch1"
+	type: "Scale"
+	scale_param {
+		bias_term: true
+	}
+}
+
+layer {
+	bottom: "res4f"
+	top: "res5a_branch2a"
+	name: "res5a_branch2a"
+	type: "Convolution"
+	convolution_param {
+		num_output: 512
+		kernel_size: 1
+		pad: 0
+		stride: 2
+		bias_term: false
+	}
+}
+
+layer {
+	bottom: "res5a_branch2a"
+	top: "bn5a_branch2a"
+	name: "bn5a_branch2a"
+	type: "BatchNorm"
+	batch_norm_param {
+		use_global_stats: true
+	}
+}
+
+layer {
+	bottom: "bn5a_branch2a"
+	top: "bn5a_branch2a"
+	name: "scale5a_branch2a"
+	type: "Scale"
+	scale_param {
+		bias_term: true
+	}
+}
+
+layer {
+	bottom: "bn5a_branch2a"
+	top: "bn5a_branch2a"
+	name: "res5a_branch2a_relu"
+	type: "ReLU"
+}
+
+layer {
+	bottom: "bn5a_branch2a"
+	top: "res5a_branch2b"
+	name: "res5a_branch2b"
+	type: "Convolution"
+	convolution_param {
+		num_output: 512
+		kernel_size: 3
+		pad: 1
+		stride: 1
+		bias_term: false
+	}
+}
+
+layer {
+	bottom: "res5a_branch2b"
+	top: "bn5a_branch2b"
+	name: "bn5a_branch2b"
+	type: "BatchNorm"
+	batch_norm_param {
+		use_global_stats: true
+	}
+}
+
+layer {
+	bottom: "bn5a_branch2b"
+	top: "bn5a_branch2b"
+	name: "scale5a_branch2b"
+	type: "Scale"
+	scale_param {
+		bias_term: true
+	}
+}
+
+layer {
+	bottom: "bn5a_branch2b"
+	top: "bn5a_branch2b"
+	name: "res5a_branch2b_relu"
+	type: "ReLU"
+}
+
+layer {
+	bottom: "bn5a_branch2b"
+	top: "res5a_branch2c"
+	name: "res5a_branch2c"
+	type: "Convolution"
+	convolution_param {
+		num_output: 2048
+		kernel_size: 1
+		pad: 0
+		stride: 1
+		bias_term: false
+	}
+}
+
+layer {
+	bottom: "res5a_branch2c"
+	top: "bn5a_branch2c"
+	name: "bn5a_branch2c"
+	type: "BatchNorm"
+	batch_norm_param {
+		use_global_stats: true
+	}
+}
+
+layer {
+	bottom: "bn5a_branch2c"
+	top: "bn5a_branch2c"
+	name: "scale5a_branch2c"
+	type: "Scale"
+	scale_param {
+		bias_term: true
+	}
+}
+
+layer {
+	bottom: "bn5a_branch1"
+	bottom: "bn5a_branch2c"
+	top: "res5a"
+	name: "res5a"
+	type: "Eltwise"
+}
+
+layer {
+	bottom: "res5a"
+	top: "res5a"
+	name: "res5a_relu"
+	type: "ReLU"
+}
+
+layer {
+	bottom: "res5a"
+	top: "res5b_branch2a"
+	name: "res5b_branch2a"
+	type: "Convolution"
+	convolution_param {
+		num_output: 512
+		kernel_size: 1
+		pad: 0
+		stride: 1
+		bias_term: false
+	}
+}
+
+layer {
+	bottom: "res5b_branch2a"
+	top: "bn5b_branch2a"
+	name: "bn5b_branch2a"
+	type: "BatchNorm"
+	batch_norm_param {
+		use_global_stats: true
+	}
+}
+
+layer {
+	bottom: "bn5b_branch2a"
+	top: "bn5b_branch2a"
+	name: "scale5b_branch2a"
+	type: "Scale"
+	scale_param {
+		bias_term: true
+	}
+}
+
+layer {
+	bottom: "bn5b_branch2a"
+	top: "bn5b_branch2a"
+	name: "res5b_branch2a_relu"
+	type: "ReLU"
+}
+
+layer {
+	bottom: "bn5b_branch2a"
+	top: "res5b_branch2b"
+	name: "res5b_branch2b"
+	type: "Convolution"
+	convolution_param {
+		num_output: 512
+		kernel_size: 3
+		pad: 1
+		stride: 1
+		bias_term: false
+	}
+}
+
+layer {
+	bottom: "res5b_branch2b"
+	top: "bn5b_branch2b"
+	name: "bn5b_branch2b"
+	type: "BatchNorm"
+	batch_norm_param {
+		use_global_stats: true
+	}
+}
+
+layer {
+	bottom: "bn5b_branch2b"
+	top: "bn5b_branch2b"
+	name: "scale5b_branch2b"
+	type: "Scale"
+	scale_param {
+		bias_term: true
+	}
+}
+
+layer {
+	bottom: "bn5b_branch2b"
+	top: "bn5b_branch2b"
+	name: "res5b_branch2b_relu"
+	type: "ReLU"
+}
+
+layer {
+	bottom: "bn5b_branch2b"
+	top: "res5b_branch2c"
+	name: "res5b_branch2c"
+	type: "Convolution"
+	convolution_param {
+		num_output: 2048
+		kernel_size: 1
+		pad: 0
+		stride: 1
+		bias_term: false
+	}
+}
+
+layer {
+	bottom: "res5b_branch2c"
+	top: "bn5b_branch2c"
+	name: "bn5b_branch2c"
+	type: "BatchNorm"
+	batch_norm_param {
+		use_global_stats: true
+	}
+}
+
+layer {
+	bottom: "bn5b_branch2c"
+	top: "bn5b_branch2c"
+	name: "scale5b_branch2c"
+	type: "Scale"
+	scale_param {
+		bias_term: true
+	}
+}
+
+layer {
+	bottom: "res5a"
+	bottom: "bn5b_branch2c"
+	top: "res5b"
+	name: "res5b"
+	type: "Eltwise"
+}
+
+layer {
+	bottom: "res5b"
+	top: "res5b"
+	name: "res5b_relu"
+	type: "ReLU"
+}
+
+layer {
+	bottom: "res5b"
+	top: "res5c_branch2a"
+	name: "res5c_branch2a"
+	type: "Convolution"
+	convolution_param {
+		num_output: 512
+		kernel_size: 1
+		pad: 0
+		stride: 1
+		bias_term: false
+	}
+}
+
+layer {
+	bottom: "res5c_branch2a"
+	top: "bn5c_branch2a"
+	name: "bn5c_branch2a"
+	type: "BatchNorm"
+	batch_norm_param {
+		use_global_stats: true
+	}
+}
+
+layer {
+	bottom: "bn5c_branch2a"
+	top: "bn5c_branch2a"
+	name: "scale5c_branch2a"
+	type: "Scale"
+	scale_param {
+		bias_term: true
+	}
+}
+
+layer {
+	bottom: "bn5c_branch2a"
+	top: "bn5c_branch2a"
+	name: "res5c_branch2a_relu"
+	type: "ReLU"
+}
+
+layer {
+	bottom: "bn5c_branch2a"
+	top: "res5c_branch2b"
+	name: "res5c_branch2b"
+	type: "Convolution"
+	convolution_param {
+		num_output: 512
+		kernel_size: 3
+		pad: 1
+		stride: 1
+		bias_term: false
+	}
+}
+
+layer {
+	bottom: "res5c_branch2b"
+	top: "bn5c_branch2b"
+	name: "bn5c_branch2b"
+	type: "BatchNorm"
+	batch_norm_param {
+		use_global_stats: true
+	}
+}
+
+layer {
+	bottom: "bn5c_branch2b"
+	top: "bn5c_branch2b"
+	name: "scale5c_branch2b"
+	type: "Scale"
+	scale_param {
+		bias_term: true
+	}
+}
+
+layer {
+	bottom: "bn5c_branch2b"
+	top: "bn5c_branch2b"
+	name: "res5c_branch2b_relu"
+	type: "ReLU"
+}
+
+layer {
+	bottom: "bn5c_branch2b"
+	top: "res5c_branch2c"
+	name: "res5c_branch2c"
+	type: "Convolution"
+	convolution_param {
+		num_output: 2048
+		kernel_size: 1
+		pad: 0
+		stride: 1
+		bias_term: false
+	}
+}
+
+layer {
+	bottom: "res5c_branch2c"
+	top: "bn5c_branch2c"
+	name: "bn5c_branch2c"
+	type: "BatchNorm"
+	batch_norm_param {
+		use_global_stats: true
+	}
+}
+
+layer {
+	bottom: "bn5c_branch2c"
+	top: "bn5c_branch2c"
+	name: "scale5c_branch2c"
+	type: "Scale"
+	scale_param {
+		bias_term: true
+	}
+}
+
+layer {
+	bottom: "res5b"
+	bottom: "bn5c_branch2c"
+	top: "res5c"
+	name: "res5c"
+	type: "Eltwise"
+}
+
+layer {
+	bottom: "res5c"
+	top: "res5c"
+	name: "res5c_relu"
+	type: "ReLU"
+}
+
+layer {
+	bottom: "res5c"
+	top: "pool5"
+	name: "pool5"
+	type: "Pooling"
+	pooling_param {
+		kernel_size: 7
+		stride: 1
+		pool: AVE
+	}
+}
+
+layer {
+	bottom: "pool5"
+	top: "fc1000"
+	name: "fc1000"
+	type: "InnerProduct"
+	inner_product_param {
+		num_output: 1000
+	}
+}
+
+layer {
+	bottom: "fc1000"
+	top: "prob"
+	name: "prob"
+	type: "Softmax"
+}
+
diff --git a/caffe2/python/tutorials/Run_Alexnet_in_CPU_and_GPU_mode.ipynb b/caffe2/python/tutorials/Run_Alexnet_in_CPU_and_GPU_mode.ipynb
new file mode 100644
index 000000000..933f1a8f1
--- /dev/null
+++ b/caffe2/python/tutorials/Run_Alexnet_in_CPU_and_GPU_mode.ipynb
@@ -0,0 +1,409 @@
+{
+ "cells": [
+  {
+   "cell_type": "markdown",
+   "metadata": {},
+   "source": [
+    "# Run Alexnet in CPU and GPU\n",
+    "\n",
+<<<<<<< HEAD
+    "In this tutorial, I'll run Alexnet and show the speed in Caffe2. Before this, I recommend you to read anothor tutorial [Loading Pre-Trained Model](https://github.com/caffe2/caffe2/blob/master/caffe2/python/tutorials/Loading_Pretrained_Models.ipynb).\n",
+=======
+    "In this tutorial, I'll run Alexnet and show the speed and gpu memory cost in Caffe2. Before this, I recommend you to read anothor tutorial [Loading Pre-Trained Model](https://github.com/caffe2/caffe2/blob/master/caffe2/python/tutorials/Loading_Pretrained_Models.ipynb).\n",
+>>>>>>> update
+    "\n",
+    "## Convert Alexnet from caffe to caffe2\n",
+    "\n",
+    "First, we need to download the [deploy.prototxt](https://github.com/BVLC/caffe/blob/master/models/bvlc_alexnet/deploy.prototxt) and [bvlc_alexnet.caffemodel](http://dl.caffe.berkeleyvision.org/bvlc_alexnet.caffemodel).\n",
+    "\n",
+    "```\n",
+    "wget https://raw.githubusercontent.com/BVLC/caffe/master/models/bvlc_alexnet/deploy.prototxt\n",
+    "wget http://dl.caffe.berkeleyvision.org/bvlc_alexnet.caffemodel\n",
+    "```\n",
+    "\n",
+    "After that, if you have Caffe2 installed you can find caffe_translator.py in CAFFE_ROOT/caffe2/python. The following command will help you to convert Alexnet into caffe2.\n",
+    "\n",
+    "```\n",
+    "python caffe_translator.py tutorials/deploy.prototxt tutorials/bvlc_alexnet.caffemodel --init_net tutorials/init_net.pb --predict_net tutorials/predict_net.pb\n",
+    "```\n",
+    "\n",
+    "## Run Alexnet in CPU mode\n",
+    "\n",
+    "Now, let's write some code to run Alexnet in cpu mode."
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 6,
+   "metadata": {
+    "collapsed": true
+   },
+   "outputs": [],
+   "source": [
+    "# First let's import a few things needed.\n",
+    "import numpy as np\n",
+    "import os, time\n",
+    "\n",
+    "from caffe2.proto import caffe2_pb2\n",
+    "from caffe2.python import workspace\n",
+    "\n",
+    "# set the root of caffe2\n",
+    "caffe_root = '~/caffe2'\n",
+    "\n",
+    "# set the path of init_net and predict_net\n",
+    "init_net_path = os.path.join(caffe_root, 'caffe2/python/tutorials/init_net.pb')\n",
+    "predict_net_path = os.path.join(caffe_root, 'caffe2/python/tutorials/predict_net.pb')"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 10,
+   "metadata": {
+    "collapsed": true
+   },
+   "outputs": [],
+   "source": [
+    "# We set the device options to CPU\n",
+    "device_opts = caffe2_pb2.DeviceOption()\n",
+    "device_opts.device_type = caffe2_pb2.CPU"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 18,
+   "metadata": {},
+   "outputs": [
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      "[u'_fc6_mask', u'_fc7_mask', u'_norm1_scale', u'_norm2_scale', u'conv1', u'conv1_b', u'conv1_w', u'conv2', u'conv2_b', u'conv2_w', u'conv3', u'conv3_b', u'conv3_w', u'conv4', u'conv4_b', u'conv4_w', u'conv5', u'conv5_b', u'conv5_w', u'data', u'fc6', u'fc6_b', u'fc6_w', u'fc7', u'fc7_b', u'fc7_w', u'fc8', u'fc8_b', u'fc8_w', u'norm1', u'norm2', u'pool1', u'pool2', u'pool5', u'prob']\n",
+      "(96, 3, 11, 11)\n",
+      "(1,)\n"
+     ]
+    }
+   ],
+   "source": [
+    "# load init_net which contains the blobs of alexnet\n",
+    "init_def = caffe2_pb2.NetDef()\n",
+    "with open(init_net_path, 'r') as f:\n",
+    "    init_def.ParseFromString(f.read())\n",
+    "    init_def.device_option.CopyFrom(device_opts)\n",
+    "    workspace.RunNetOnce(init_def)\n",
+    "\n",
+    "print workspace.Blobs()\n",
+    "print workspace.FetchBlob('conv1_w').shape\n",
+    "print workspace.FetchBlob('data').shape"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 22,
+   "metadata": {},
+   "outputs": [
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      "AlexNet\n",
+      "[u'_fc6_mask', u'_fc7_mask', u'_norm1_scale', u'_norm2_scale', u'conv1', u'conv1_b', u'conv1_w', u'conv2', u'conv2_b', u'conv2_w', u'conv3', u'conv3_b', u'conv3_w', u'conv4', u'conv4_b', u'conv4_w', u'conv5', u'conv5_b', u'conv5_w', u'data', u'fc6', u'fc6_b', u'fc6_w', u'fc7', u'fc7_b', u'fc7_w', u'fc8', u'fc8_b', u'fc8_w', u'norm1', u'norm2', u'pool1', u'pool2', u'pool5', u'prob']\n",
+      "_fc7_mask, a C++ native class of type nullptr (uninitialized).\n"
+     ]
+    }
+   ],
+   "source": [
+    "# load predict_net\n",
+    "net_def = caffe2_pb2.NetDef()\n",
+    "with open(predict_net_path, 'r') as f:\n",
+    "    net_def.ParseFromString(f.read())\n",
+    "    net_def.device_option.CopyFrom(device_opts)\n",
+    "    workspace.CreateNet(net_def, overwrite=True)\n",
+    "\n",
+    "print net_def.name\n",
+    "print workspace.Blobs()\n",
+    "print workspace.FetchBlob('_fc7_mask')"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 21,
+   "metadata": {},
+   "outputs": [
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      "(1, 3, 227, 227)\n"
+     ]
+    }
+   ],
+   "source": [
+    "# here we feed the data blob with 1x3x227x227 and type of float32\n",
+    "workspace.FeedBlob('data', np.random.rand(1, 3, 227, 227).astype(np.float32), device_opts)\n",
+    "print workspace.FetchBlob('data').shape"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 24,
+   "metadata": {},
+   "outputs": [
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      "Run time per RunNet: 0.161446561813\n"
+     ]
+    }
+   ],
+   "source": [
+    "# run alexnet 50 iters in cpu mode\n",
+    "num_iters = 50\n",
+    "start = time.time()\n",
+    "for i in range(num_iters):\n",
+    "    workspace.RunNet(net_def.name, 1)\n",
+    "end = time.time()\n",
+    "print('Run time per RunNet: {}'.format((end - start) / num_iters))"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 29,
+   "metadata": {
+    "collapsed": true
+   },
+   "outputs": [],
+   "source": [
+    "# benchmark alexnet\n",
+    "warmup_runs = 10\n",
+    "main_runs = 50\n",
+    "run_individual = True\n",
+    "cpu_stats = workspace.BenchmarkNet(net_def.name, warmup_runs, main_runs, run_individual)"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 30,
+   "metadata": {},
+   "outputs": [
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      "Operator #0 Milliseconds per iter: 158.544464111 ms/iters\n",
+      "Operator #1 (conv1, Conv) 10.0862464905 ms/iters\n",
+      "Operator #2 (conv1, Relu) 0.152279004455 ms/iters\n",
+      "Operator #3 (norm1, LRN) 15.3392858505 ms/iters\n",
+      "Operator #4 (pool1, MaxPool) 1.75234615803 ms/iters\n",
+      "Operator #5 (conv2, Conv) 17.9576473236 ms/iters\n",
+      "Operator #6 (conv2, Relu) 0.101289302111 ms/iters\n",
+      "Operator #7 (norm2, LRN) 11.8667507172 ms/iters\n",
+      "Operator #8 (pool2, MaxPool) 1.29284083843 ms/iters\n",
+      "Operator #9 (conv3, Conv) 15.8340377808 ms/iters\n",
+      "Operator #10 (conv3, Relu) 0.015605058521 ms/iters\n",
+      "Operator #11 (conv4, Conv) 6.03665542603 ms/iters\n",
+      "Operator #12 (conv4, Relu) 0.0141125591472 ms/iters\n",
+      "Operator #13 (conv5, Conv) 5.42444992065 ms/iters\n",
+      "Operator #14 (conv5, Relu) 0.00877944100648 ms/iters\n",
+      "Operator #15 (pool5, MaxPool) 0.278489500284 ms/iters\n",
+      "Operator #16 (fc6, FC) 42.2674255371 ms/iters\n",
+      "Operator #17 (fc6, Relu) 0.00187726004515 ms/iters\n",
+      "Operator #18 (fc6, Dropout) 0.0027340000961 ms/iters\n",
+      "Operator #19 (fc7, FC) 18.0905380249 ms/iters\n",
+      "Operator #20 (fc7, Relu) 0.00157702004071 ms/iters\n",
+      "Operator #21 (fc7, Dropout) 0.00167087989394 ms/iters\n",
+      "Operator #22 (fc8, FC) 4.12333965302 ms/iters\n",
+      "Operator #23 (prob, Softmax) 0.0149464607239 ms/iters\n"
+     ]
+    }
+   ],
+   "source": [
+    "# TODO: I havn't found a proper way to get operators of net. \n",
+    "operators = [\n",
+    "    'Milliseconds per iter: {}',\n",
+    "    '(conv1, Conv) {}',\n",
+    "    '(conv1, Relu) {}',\n",
+    "    '(norm1, LRN) {}',\n",
+    "    '(pool1, MaxPool) {}',\n",
+    "    '(conv2, Conv) {}',\n",
+    "    '(conv2, Relu) {}',\n",
+    "    '(norm2, LRN) {}',\n",
+    "    '(pool2, MaxPool) {}',\n",
+    "    '(conv3, Conv) {}',\n",
+    "    '(conv3, Relu) {}',\n",
+    "    '(conv4, Conv) {}',\n",
+    "    '(conv4, Relu) {}',\n",
+    "    '(conv5, Conv) {}',\n",
+    "    '(conv5, Relu) {}',\n",
+    "    '(pool5, MaxPool) {}',\n",
+    "    '(fc6, FC) {}',\n",
+    "    '(fc6, Relu) {}',\n",
+    "    '(fc6, Dropout) {}',\n",
+    "    '(fc7, FC) {}',\n",
+    "    '(fc7, Relu) {}',\n",
+    "    '(fc7, Dropout) {}',\n",
+    "    '(fc8, FC) {}',\n",
+    "    '(prob, Softmax) {}'\n",
+    "]\n",
+    "def show_stats(stats):\n",
+    "    len_stat = len(stats)\n",
+    "    for i in range(len_stat):\n",
+    "        print 'Operator #{} '.format(i) + operators[i].format(stats[i]) + ' ms/iters'\n",
+    "\n",
+    "show_stats(cpu_stats)"
+   ]
+  },
+  {
+   "cell_type": "markdown",
+   "metadata": {},
+   "source": [
+    "## Run Alexnet in GPU mode\n",
+    "\n",
+    "Runing Alexnet in gpu mode is simple. The only changes is device_opts."
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 40,
+   "metadata": {},
+   "outputs": [
+    {
+     "data": {
+      "text/plain": [
+       "True"
+      ]
+     },
+     "execution_count": 40,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "# first, reset workspace\n",
+    "workspace.ResetWorkspace()"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 41,
+   "metadata": {
+    "collapsed": true
+   },
+   "outputs": [],
+   "source": [
+    "# set the device options to CUDA\n",
+    "device_opts = caffe2_pb2.DeviceOption()\n",
+    "device_opts.device_type = caffe2_pb2.CUDA\n",
+    "device_opts.cuda_gpu_id = 0"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 42,
+   "metadata": {},
+   "outputs": [
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      "Run time per RunNet: 0.00201209211349\n"
+     ]
+    }
+   ],
+   "source": [
+    "# init net\n",
+    "init_def = caffe2_pb2.NetDef()\n",
+    "with open(init_net_path, 'r') as f:\n",
+    "    init_def.ParseFromString(f.read())\n",
+    "    init_def.device_option.CopyFrom(device_opts)\n",
+    "    workspace.RunNetOnce(init_def)\n",
+    "\n",
+    "# create net\n",
+    "net_def = caffe2_pb2.NetDef()\n",
+    "with open(predict_net_path, 'r') as f:\n",
+    "    net_def.ParseFromString(f.read())\n",
+    "    net_def.device_option.CopyFrom(device_opts)\n",
+    "    workspace.CreateNet(net_def, overwrite=True)\n",
+    "\n",
+    "# feed data blob\n",
+    "workspace.FeedBlob('data', np.random.rand(1, 3, 227, 227).astype(np.float32), device_opts)\n",
+    "\n",
+    "# run alexnet 1000 iters in gpu mode\n",
+    "num_iters = 1000\n",
+    "start = time.time()\n",
+    "for i in range(num_iters):\n",
+    "    workspace.RunNet(net_def.name, 1)\n",
+    "end = time.time()\n",
+    "print('Run time per RunNet: {}'.format((end - start) / num_iters))\n",
+    "\n",
+    "# benchmark alexnet\n",
+    "warmup_runs = 50\n",
+    "main_runs = 1000\n",
+    "run_individual = True\n",
+    "gpu_stats = workspace.BenchmarkNet(net_def.name, warmup_runs, main_runs, run_individual)"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 43,
+   "metadata": {},
+   "outputs": [
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      "Operator #0 Milliseconds per iter: 1.70603919029 ms/iters\n",
+      "Operator #1 (conv1, Conv) 0.102756902575 ms/iters\n",
+      "Operator #2 (conv1, Relu) 0.0112983090803 ms/iters\n",
+      "Operator #3 (norm1, LRN) 0.0401390828192 ms/iters\n",
+      "Operator #4 (pool1, MaxPool) 0.020453164354 ms/iters\n",
+      "Operator #5 (conv2, Conv) 0.166687503457 ms/iters\n",
+      "Operator #6 (conv2, Relu) 0.0109590971842 ms/iters\n",
+      "Operator #7 (norm2, LRN) 0.0613889656961 ms/iters\n",
+      "Operator #8 (pool2, MaxPool) 0.0173483639956 ms/iters\n",
+      "Operator #9 (conv3, Conv) 0.111571870744 ms/iters\n",
+      "Operator #10 (conv3, Relu) 0.0101103847846 ms/iters\n",
+      "Operator #11 (conv4, Conv) 0.150309726596 ms/iters\n",
+      "Operator #12 (conv4, Relu) 0.00984948966652 ms/iters\n",
+      "Operator #13 (conv5, Conv) 0.147298529744 ms/iters\n",
+      "Operator #14 (conv5, Relu) 0.00964171625674 ms/iters\n",
+      "Operator #15 (pool5, MaxPool) 0.0151336118579 ms/iters\n",
+      "Operator #16 (fc6, FC) 0.480961769819 ms/iters\n",
+      "Operator #17 (fc6, Relu) 0.00969945359975 ms/iters\n",
+      "Operator #18 (fc6, Dropout) 0.00229897466488 ms/iters\n",
+      "Operator #19 (fc7, FC) 0.214303538203 ms/iters\n",
+      "Operator #20 (fc7, Relu) 0.00927217118442 ms/iters\n",
+      "Operator #21 (fc7, Dropout) 0.00193213194143 ms/iters\n",
+      "Operator #22 (fc8, FC) 0.0633651390672 ms/iters\n",
+      "Operator #23 (prob, Softmax) 0.0434232056141 ms/iters\n"
+     ]
+    }
+   ],
+   "source": [
+    "# These stats are runing in TITAN X\n",
+    "show_stats(gpu_stats)"
+   ]
+  }
+ ],
+ "metadata": {
+  "kernelspec": {
+   "display_name": "Python 2",
+   "language": "python",
+   "name": "python2"
+  },
+  "language_info": {
+   "codemirror_mode": {
+    "name": "ipython",
+    "version": 2
+   },
+   "file_extension": ".py",
+   "mimetype": "text/x-python",
+   "name": "python",
+   "nbconvert_exporter": "python",
+   "pygments_lexer": "ipython2",
+   "version": "2.7.12"
+  }
+ },
+ "nbformat": 4,
+ "nbformat_minor": 2
+}
diff --git a/caffe2/utils/bbox_util.cc b/caffe2/utils/bbox_util.cc
new file mode 100644
index 000000000..8cbbc3ea8
--- /dev/null
+++ b/caffe2/utils/bbox_util.cc
@@ -0,0 +1,494 @@
+#include <algorithm>
+#include <csignal>
+#include <ctime>
+#include <functional>
+#include <map>
+#include <set>
+#include <string>
+#include <utility>
+#include <vector>
+
+#include "caffe2/utils/bbox_util.h"
+
+namespace caffe2 {
+
+template <typename Dtype>
+void GetLocPredictions(const Dtype* loc_data, const int num,
+      const int num_preds_per_class, const int num_loc_classes,
+      const bool share_location, vector<LabelBBox>* loc_preds) {
+  loc_preds->clear();
+  if (share_location) {
+    CAFFE_ENFORCE_EQ(num_loc_classes, 1);
+  }
+  loc_preds->resize(num);
+  for (int i = 0; i < num; ++i) {
+    LabelBBox& label_bbox = (*loc_preds)[i];
+    for (int p = 0; p < num_preds_per_class; ++p) {
+      int start_idx = p * num_loc_classes * 4;
+      for (int c = 0; c < num_loc_classes; ++c) {
+        int label = share_location ? -1 : c;
+        if (label_bbox.find(label) == label_bbox.end()) {
+          label_bbox[label].resize(num_preds_per_class);
+        }
+        label_bbox[label][p].set_xmin(loc_data[start_idx + c * 4]);
+        label_bbox[label][p].set_ymin(loc_data[start_idx + c * 4 + 1]);
+        label_bbox[label][p].set_xmax(loc_data[start_idx + c * 4 + 2]);
+        label_bbox[label][p].set_ymax(loc_data[start_idx + c * 4 + 3]);
+      }
+    }
+    loc_data += num_preds_per_class * num_loc_classes * 4;
+  }
+}
+// Explicit initialization.
+template void GetLocPredictions(const float* loc_data, const int num,
+      const int num_preds_per_class, const int num_loc_classes,
+      const bool share_location, vector<LabelBBox>* loc_preds);
+
+template <typename Dtype>
+void GetConfidenceScores(const Dtype* conf_data, const int num,
+      const int num_preds_per_class, const int num_classes,
+      vector<map<int, vector<float> > >* conf_preds) {
+  conf_preds->clear();
+  conf_preds->resize(num);
+  for (int i = 0; i < num; ++i) {
+    map<int, vector<float> >& label_scores = (*conf_preds)[i];
+    for (int p = 0; p < num_preds_per_class; ++p) {
+      int start_idx = p * num_classes;
+      for (int c = 0; c < num_classes; ++c) {
+        label_scores[c].push_back(conf_data[start_idx + c]);
+      }
+    }
+    conf_data += num_preds_per_class * num_classes;
+  }
+}
+// Explicit initialization.
+template void GetConfidenceScores(const float* conf_data, const int num,
+      const int num_preds_per_class, const int num_classes,
+      vector<map<int, vector<float> > >* conf_preds);
+
+template <typename Dtype>
+void GetPriorBBoxes(const Dtype* prior_data, const int num_priors,
+      vector<NormalizedBBox>* prior_bboxes,
+      vector<vector<float> >* prior_variances) {
+  prior_bboxes->clear();
+  prior_variances->clear();
+  for (int i = 0; i < num_priors; ++i) {
+    int start_idx = i * 4;
+    NormalizedBBox bbox;
+    bbox.set_xmin(prior_data[start_idx]);
+    bbox.set_ymin(prior_data[start_idx + 1]);
+    bbox.set_xmax(prior_data[start_idx + 2]);
+    bbox.set_ymax(prior_data[start_idx + 3]);
+    float bbox_size = BBoxSize(bbox);
+    bbox.set_size(bbox_size);
+    prior_bboxes->push_back(bbox);
+  }
+
+  for (int i = 0; i < num_priors; ++i) {
+    int start_idx = (num_priors + i) * 4;
+    vector<float> var;
+    for (int j = 0; j < 4; ++j) {
+      var.push_back(prior_data[start_idx + j]);
+    }
+    prior_variances->push_back(var);
+  }
+}
+
+// Explicit initialization.
+template void GetPriorBBoxes(const float* prior_data, const int num_priors,
+      vector<NormalizedBBox>* prior_bboxes,
+      vector<vector<float> >* prior_variances);
+
+float BBoxSize(const NormalizedBBox& bbox, const bool normalized) {
+  if (bbox.xmax() < bbox.xmin() || bbox.ymax() < bbox.ymin()) {
+    // If bbox is invalid (e.g. xmax < xmin or ymax < ymin), return 0.
+    return 0;
+  } else {
+    if (bbox.has_size()) {
+      return bbox.size();
+    } else {
+      float width = bbox.xmax() - bbox.xmin();
+      float height = bbox.ymax() - bbox.ymin();
+      if (normalized) {
+        return width * height;
+      } else {
+        // If bbox is not within range [0, 1].
+        return (width + 1) * (height + 1);
+      }
+    }
+  }
+}
+
+void DecodeBBoxesAll(const vector<LabelBBox>& all_loc_preds,
+    const vector<NormalizedBBox>& prior_bboxes,
+    const vector<vector<float> >& prior_variances,
+    const int num, const bool share_location,
+    const int num_loc_classes, const int background_label_id,
+    const CodeType code_type, const bool variance_encoded_in_target,
+    const bool clip, vector<LabelBBox>* all_decode_bboxes) {
+  CAFFE_ENFORCE_EQ(all_loc_preds.size(), num);
+  all_decode_bboxes->clear();
+  all_decode_bboxes->resize(num);
+  for (int i = 0; i < num; ++i) {
+    // Decode predictions into bboxes.
+    LabelBBox& decode_bboxes = (*all_decode_bboxes)[i];
+    for (int c = 0; c < num_loc_classes; ++c) {
+      int label = share_location ? -1 : c;
+      if (label == background_label_id) {
+        // Ignore background class.
+        continue;
+      }
+      if (all_loc_preds[i].find(label) == all_loc_preds[i].end()) {
+        // Something bad happened if there are no predictions for current label.
+        LOG(FATAL) << "Could not find location predictions for label " << label;
+      }
+      const vector<NormalizedBBox>& label_loc_preds =
+          all_loc_preds[i].find(label)->second;
+      DecodeBBoxes(prior_bboxes, prior_variances,
+                   code_type, variance_encoded_in_target, clip,
+                   label_loc_preds, &(decode_bboxes[label]));
+    }
+  }
+}
+
+void DecodeBBoxes(
+    const vector<NormalizedBBox>& prior_bboxes,
+    const vector<vector<float> >& prior_variances,
+    const CodeType code_type, const bool variance_encoded_in_target,
+    const bool clip_bbox, const vector<NormalizedBBox>& bboxes,
+    vector<NormalizedBBox>* decode_bboxes) {
+  CAFFE_ENFORCE_EQ(prior_bboxes.size(), prior_variances.size());
+  CAFFE_ENFORCE_EQ(prior_bboxes.size(), bboxes.size());
+  int num_bboxes = prior_bboxes.size();
+  if (num_bboxes >= 1) {
+  	CAFFE_ENFORCE_EQ(prior_variances[0].size(), 4);
+  }
+  decode_bboxes->clear();
+  for (int i = 0; i < num_bboxes; ++i) {
+    NormalizedBBox decode_bbox;
+    DecodeBBox(prior_bboxes[i], prior_variances[i], code_type,
+               variance_encoded_in_target, clip_bbox, bboxes[i], &decode_bbox);
+    decode_bboxes->push_back(decode_bbox);
+  }
+}
+void DecodeBBox(
+    const NormalizedBBox& prior_bbox, const vector<float>& prior_variance,
+    const CodeType code_type, const bool variance_encoded_in_target,
+    const bool clip_bbox, const NormalizedBBox& bbox,
+    NormalizedBBox* decode_bbox) {
+  if (code_type == caffe::PriorBoxParameter_CodeType_CORNER) {
+    if (variance_encoded_in_target) {
+      // variance is encoded in target, we simply need to add the offset
+      // predictions.
+      decode_bbox->set_xmin(prior_bbox.xmin() + bbox.xmin());
+      decode_bbox->set_ymin(prior_bbox.ymin() + bbox.ymin());
+      decode_bbox->set_xmax(prior_bbox.xmax() + bbox.xmax());
+      decode_bbox->set_ymax(prior_bbox.ymax() + bbox.ymax());
+    } else {
+      // variance is encoded in bbox, we need to scale the offset accordingly.
+      decode_bbox->set_xmin(
+          prior_bbox.xmin() + prior_variance[0] * bbox.xmin());
+      decode_bbox->set_ymin(
+          prior_bbox.ymin() + prior_variance[1] * bbox.ymin());
+      decode_bbox->set_xmax(
+          prior_bbox.xmax() + prior_variance[2] * bbox.xmax());
+      decode_bbox->set_ymax(
+          prior_bbox.ymax() + prior_variance[3] * bbox.ymax());
+    }
+  } else if (code_type == caffe::PriorBoxParameter_CodeType_CENTER_SIZE) {
+    float prior_width = prior_bbox.xmax() - prior_bbox.xmin();
+    CAFFE_ENFORCE_GT(prior_width, 0);
+    float prior_height = prior_bbox.ymax() - prior_bbox.ymin();
+    CAFFE_ENFORCE_GT(prior_height, 0);
+    float prior_center_x = (prior_bbox.xmin() + prior_bbox.xmax()) / 2.;
+    float prior_center_y = (prior_bbox.ymin() + prior_bbox.ymax()) / 2.;
+
+    float decode_bbox_center_x, decode_bbox_center_y;
+    float decode_bbox_width, decode_bbox_height;
+    if (variance_encoded_in_target) {
+      // variance is encoded in target, we simply need to retore the offset
+      // predictions.
+      decode_bbox_center_x = bbox.xmin() * prior_width + prior_center_x;
+      decode_bbox_center_y = bbox.ymin() * prior_height + prior_center_y;
+      decode_bbox_width = exp(bbox.xmax()) * prior_width;
+      decode_bbox_height = exp(bbox.ymax()) * prior_height;
+    } else {
+      // variance is encoded in bbox, we need to scale the offset accordingly.
+      decode_bbox_center_x =
+          prior_variance[0] * bbox.xmin() * prior_width + prior_center_x;
+      decode_bbox_center_y =
+          prior_variance[1] * bbox.ymin() * prior_height + prior_center_y;
+      decode_bbox_width =
+          exp(prior_variance[2] * bbox.xmax()) * prior_width;
+      decode_bbox_height =
+          exp(prior_variance[3] * bbox.ymax()) * prior_height;
+    }
+
+    decode_bbox->set_xmin(decode_bbox_center_x - decode_bbox_width / 2.);
+    decode_bbox->set_ymin(decode_bbox_center_y - decode_bbox_height / 2.);
+    decode_bbox->set_xmax(decode_bbox_center_x + decode_bbox_width / 2.);
+    decode_bbox->set_ymax(decode_bbox_center_y + decode_bbox_height / 2.);
+  } else if (code_type == caffe::PriorBoxParameter_CodeType_CORNER_SIZE) {
+    float prior_width = prior_bbox.xmax() - prior_bbox.xmin();
+    CAFFE_ENFORCE_GT(prior_width, 0);
+    float prior_height = prior_bbox.ymax() - prior_bbox.ymin();
+    CAFFE_ENFORCE_GT(prior_height, 0);
+    if (variance_encoded_in_target) {
+      // variance is encoded in target, we simply need to add the offset
+      // predictions.
+      decode_bbox->set_xmin(prior_bbox.xmin() + bbox.xmin() * prior_width);
+      decode_bbox->set_ymin(prior_bbox.ymin() + bbox.ymin() * prior_height);
+      decode_bbox->set_xmax(prior_bbox.xmax() + bbox.xmax() * prior_width);
+      decode_bbox->set_ymax(prior_bbox.ymax() + bbox.ymax() * prior_height);
+    } else {
+      // variance is encoded in bbox, we need to scale the offset accordingly.
+      decode_bbox->set_xmin(
+          prior_bbox.xmin() + prior_variance[0] * bbox.xmin() * prior_width);
+      decode_bbox->set_ymin(
+          prior_bbox.ymin() + prior_variance[1] * bbox.ymin() * prior_height);
+      decode_bbox->set_xmax(
+          prior_bbox.xmax() + prior_variance[2] * bbox.xmax() * prior_width);
+      decode_bbox->set_ymax(
+          prior_bbox.ymax() + prior_variance[3] * bbox.ymax() * prior_height);
+    }
+  } else {
+    LOG(FATAL) << "Unknown LocLossType.";
+  }
+  float bbox_size = BBoxSize(*decode_bbox);
+  decode_bbox->set_size(bbox_size);
+  if (clip_bbox) {
+    ClipBBox(*decode_bbox, decode_bbox);
+  }
+}
+void ClipBBox(const NormalizedBBox& bbox, NormalizedBBox* clip_bbox) {
+  clip_bbox->set_xmin(std::max(std::min(bbox.xmin(), 1.f), 0.f));
+  clip_bbox->set_ymin(std::max(std::min(bbox.ymin(), 1.f), 0.f));
+  clip_bbox->set_xmax(std::max(std::min(bbox.xmax(), 1.f), 0.f));
+  clip_bbox->set_ymax(std::max(std::min(bbox.ymax(), 1.f), 0.f));
+  clip_bbox->clear_size();
+  clip_bbox->set_size(BBoxSize(*clip_bbox));
+  clip_bbox->set_difficult(bbox.difficult());
+}
+
+void ApplyNMSFast(const vector<NormalizedBBox>& bboxes,
+      const vector<float>& scores, const float score_threshold,
+      const float nms_threshold, const float eta, const int top_k,
+      vector<int>* indices) {
+  // Sanity check.
+  CAFFE_ENFORCE_EQ(bboxes.size(), scores.size());
+
+  // Get top_k scores (with corresponding indices).
+  vector<pair<float, int> > score_index_vec;
+  GetMaxScoreIndex(scores, score_threshold, top_k, &score_index_vec);
+
+  // Do nms.
+  float adaptive_threshold = nms_threshold;
+  indices->clear();
+  while (score_index_vec.size() != 0) {
+    const int idx = score_index_vec.front().second;
+    bool keep = true;
+    for (int k = 0; k < indices->size(); ++k) {
+      if (keep) {
+        const int kept_idx = (*indices)[k];
+        float overlap = JaccardOverlap(bboxes[idx], bboxes[kept_idx]);
+        keep = overlap <= adaptive_threshold;
+      } else {
+        break;
+      }
+    }
+    if (keep) {
+      indices->push_back(idx);
+    }
+    score_index_vec.erase(score_index_vec.begin());
+    if (keep && eta < 1 && adaptive_threshold > 0.5) {
+      adaptive_threshold *= eta;
+    }
+  }
+}
+void GetMaxScoreIndex(const vector<float>& scores, const float threshold,
+      const int top_k, vector<pair<float, int> >* score_index_vec) {
+  // Generate index score pairs.
+  for (int i = 0; i < scores.size(); ++i) {
+    if (scores[i] > threshold) {
+      score_index_vec->push_back(std::make_pair(scores[i], i));
+    }
+  }
+
+  // Sort the score pair according to the scores in descending order
+  std::stable_sort(score_index_vec->begin(), score_index_vec->end(),
+                   SortScorePairDescend<int>);
+
+  // Keep top_k scores if needed.
+  if (top_k > -1 && top_k < score_index_vec->size()) {
+    score_index_vec->resize(top_k);
+  }
+}
+template <typename T>
+bool SortScorePairDescend(const pair<float, T>& pair1,
+                          const pair<float, T>& pair2) {
+  return pair1.first > pair2.first;
+}
+
+// Explicit initialization.
+template bool SortScorePairDescend(const pair<float, int>& pair1,
+                                   const pair<float, int>& pair2);
+template bool SortScorePairDescend(const pair<float, pair<int, int> >& pair1,
+                                   const pair<float, pair<int, int> >& pair2);
+
+
+float JaccardOverlap(const NormalizedBBox& bbox1, const NormalizedBBox& bbox2,
+                     const bool normalized) {
+  NormalizedBBox intersect_bbox;
+  IntersectBBox(bbox1, bbox2, &intersect_bbox);
+  float intersect_width, intersect_height;
+  if (normalized) {
+    intersect_width = intersect_bbox.xmax() - intersect_bbox.xmin();
+    intersect_height = intersect_bbox.ymax() - intersect_bbox.ymin();
+  } else {
+    intersect_width = intersect_bbox.xmax() - intersect_bbox.xmin() + 1;
+    intersect_height = intersect_bbox.ymax() - intersect_bbox.ymin() + 1;
+  }
+  if (intersect_width > 0 && intersect_height > 0) {
+    float intersect_size = intersect_width * intersect_height;
+    float bbox1_size = BBoxSize(bbox1);
+    float bbox2_size = BBoxSize(bbox2);
+    return intersect_size / (bbox1_size + bbox2_size - intersect_size);
+  } else {
+    return 0.;
+  }
+}
+void IntersectBBox(const NormalizedBBox& bbox1, const NormalizedBBox& bbox2,
+                   NormalizedBBox* intersect_bbox) {
+  if (bbox2.xmin() > bbox1.xmax() || bbox2.xmax() < bbox1.xmin() ||
+      bbox2.ymin() > bbox1.ymax() || bbox2.ymax() < bbox1.ymin()) {
+    // Return [0, 0, 0, 0] if there is no intersection.
+    intersect_bbox->set_xmin(0);
+    intersect_bbox->set_ymin(0);
+    intersect_bbox->set_xmax(0);
+    intersect_bbox->set_ymax(0);
+  } else {
+    intersect_bbox->set_xmin(std::max(bbox1.xmin(), bbox2.xmin()));
+    intersect_bbox->set_ymin(std::max(bbox1.ymin(), bbox2.ymin()));
+    intersect_bbox->set_xmax(std::min(bbox1.xmax(), bbox2.xmax()));
+    intersect_bbox->set_ymax(std::min(bbox1.ymax(), bbox2.ymax()));
+  }
+}
+
+template <typename Dtype>
+void ApplyNMSFast(const Dtype* bboxes, const Dtype* scores, const int num,
+      const float score_threshold, const float nms_threshold,
+      const float eta, const int top_k, vector<int>* indices) {
+  // Get top_k scores (with corresponding indices).
+  vector<pair<Dtype, int> > score_index_vec;
+  GetMaxScoreIndex(scores, num, score_threshold, top_k, &score_index_vec);
+
+  // Do nms.
+  float adaptive_threshold = nms_threshold;
+  indices->clear();
+  while (score_index_vec.size() != 0) {
+    const int idx = score_index_vec.front().second;
+    bool keep = true;
+    for (int k = 0; k < indices->size(); ++k) {
+      if (keep) {
+        const int kept_idx = (*indices)[k];
+        float overlap = JaccardOverlap(bboxes + idx * 4, bboxes + kept_idx * 4);
+        keep = overlap <= adaptive_threshold;
+      } else {
+        break;
+      }
+    }
+    if (keep) {
+      indices->push_back(idx);
+    }
+    score_index_vec.erase(score_index_vec.begin());
+    if (keep && eta < 1 && adaptive_threshold > 0.5) {
+      adaptive_threshold *= eta;
+    }
+  }
+}
+
+template
+void ApplyNMSFast(const float* bboxes, const float* scores, const int num,
+      const float score_threshold, const float nms_threshold,
+      const float eta, const int top_k, vector<int>* indices);
+template
+void ApplyNMSFast(const double* bboxes, const double* scores, const int num,
+      const float score_threshold, const float nms_threshold,
+      const float eta, const int top_k, vector<int>* indices);
+
+
+template <typename Dtype>
+void GetMaxScoreIndex(const Dtype* scores, const int num, const float threshold,
+      const int top_k, vector<pair<Dtype, int> >* score_index_vec) {
+  // Generate index score pairs.
+  for (int i = 0; i < num; ++i) {
+    if (scores[i] > threshold) {
+      score_index_vec->push_back(std::make_pair(scores[i], i));
+    }
+  }
+
+  // Sort the score pair according to the scores in descending order
+  std::sort(score_index_vec->begin(), score_index_vec->end(),
+            SortScorePairDescend<int>);
+
+  // Keep top_k scores if needed.
+  if (top_k > -1 && top_k < score_index_vec->size()) {
+    score_index_vec->resize(top_k);
+  }
+}
+
+template
+void GetMaxScoreIndex(const float* scores, const int num, const float threshold,
+      const int top_k, vector<pair<float, int> >* score_index_vec);
+template
+void GetMaxScoreIndex(const double* scores, const int num,
+      const float threshold, const int top_k,
+      vector<pair<double, int> >* score_index_vec);
+
+template <typename Dtype>
+Dtype JaccardOverlap(const Dtype* bbox1, const Dtype* bbox2) {
+  if (bbox2[0] > bbox1[2] || bbox2[2] < bbox1[0] ||
+      bbox2[1] > bbox1[3] || bbox2[3] < bbox1[1]) {
+    return Dtype(0.);
+  } else {
+    const Dtype inter_xmin = std::max(bbox1[0], bbox2[0]);
+    const Dtype inter_ymin = std::max(bbox1[1], bbox2[1]);
+    const Dtype inter_xmax = std::min(bbox1[2], bbox2[2]);
+    const Dtype inter_ymax = std::min(bbox1[3], bbox2[3]);
+
+    const Dtype inter_width = inter_xmax - inter_xmin;
+    const Dtype inter_height = inter_ymax - inter_ymin;
+    const Dtype inter_size = inter_width * inter_height;
+
+    const Dtype bbox1_size = BBoxSize(bbox1);
+    const Dtype bbox2_size = BBoxSize(bbox2);
+
+    return inter_size / (bbox1_size + bbox2_size - inter_size);
+  }
+}
+
+template float JaccardOverlap(const float* bbox1, const float* bbox2);
+template double JaccardOverlap(const double* bbox1, const double* bbox2);
+
+template <typename Dtype>
+Dtype BBoxSize(const Dtype* bbox, const bool normalized) {
+  if (bbox[2] < bbox[0] || bbox[3] < bbox[1]) {
+    // If bbox is invalid (e.g. xmax < xmin or ymax < ymin), return 0.
+    return Dtype(0.);
+  } else {
+    const Dtype width = bbox[2] - bbox[0];
+    const Dtype height = bbox[3] - bbox[1];
+    if (normalized) {
+      return width * height;
+    } else {
+      // If bbox is not within range [0, 1].
+      return (width + 1) * (height + 1);
+    }
+  }
+}
+
+template float BBoxSize(const float* bbox, const bool normalized);
+template double BBoxSize(const double* bbox, const bool normalized);
+
+
+} // namespace caffe2
diff --git a/caffe2/utils/bbox_util.cu b/caffe2/utils/bbox_util.cu
new file mode 100644
index 000000000..925d8ce63
--- /dev/null
+++ b/caffe2/utils/bbox_util.cu
@@ -0,0 +1,10 @@
+#include <map>
+#include <vector>
+
+#include "caffe2/utils/bbox_util.h"
+#include "caffe2/core/context_gpu.h"
+
+namespace caffe2 {
+
+
+} // namespace caffe2
diff --git a/caffe2/utils/bbox_util.h b/caffe2/utils/bbox_util.h
new file mode 100644
index 000000000..7c071cf60
--- /dev/null
+++ b/caffe2/utils/bbox_util.h
@@ -0,0 +1,97 @@
+#ifndef CAFFE2_UTILS_BBOX_UTIL_H_
+#define CAFFE2_UTILS_BBOX_UTIL_H_
+
+#include <vector>
+#include <stdint.h>
+#include <cmath>  // for std::fabs and std::signbit
+#include <map>
+#include <string>
+#include <utility>
+
+#include "caffe/proto/caffe.pb.h"
+#include "caffe2/core/common.h"
+#include "caffe2/core/logging.h"
+
+namespace caffe2 {
+using std::map;
+using std::pair;
+using caffe::NormalizedBBox;
+using caffe::PriorBoxParameter_CodeType;
+
+typedef PriorBoxParameter_CodeType CodeType;
+typedef map<int, vector<NormalizedBBox> > LabelBBox;
+
+
+template <typename Dtype>
+void GetLocPredictions(const Dtype* loc_data, const int num,
+      const int num_preds_per_class, const int num_loc_classes,
+      const bool share_location, vector<LabelBBox>* loc_preds);
+
+template <typename Dtype>
+void GetConfidenceScores(const Dtype* conf_data, const int num,
+      const int num_preds_per_class, const int num_classes,
+      vector<map<int, vector<float> > >* conf_scores);
+
+template <typename Dtype>
+void GetPriorBBoxes(const Dtype* prior_data, const int num_priors,
+      vector<NormalizedBBox>* prior_bboxes,
+      vector<vector<float> >* prior_variances);
+// Compute bbox size.
+float BBoxSize(const NormalizedBBox& bbox, const bool normalized = true);
+
+// Decode all bboxes in a batch.
+void DecodeBBoxesAll(const vector<LabelBBox>& all_loc_pred,
+    const vector<NormalizedBBox>& prior_bboxes,
+    const vector<vector<float> >& prior_variances,
+    const int num, const bool share_location,
+    const int num_loc_classes, const int background_label_id,
+    const CodeType code_type, const bool variance_encoded_in_target,
+    const bool clip, vector<LabelBBox>* all_decode_bboxes);
+// Decode a set of bboxes according to a set of prior bboxes.
+void DecodeBBoxes(const vector<NormalizedBBox>& prior_bboxes,
+    const vector<vector<float> >& prior_variances,
+    const CodeType code_type, const bool variance_encoded_in_target,
+    const bool clip_bbox, const vector<NormalizedBBox>& bboxes,
+    vector<NormalizedBBox>* decode_bboxes);
+// Decode a bbox according to a prior bbox.
+void DecodeBBox(const NormalizedBBox& prior_bbox,
+    const vector<float>& prior_variance, const CodeType code_type,
+    const bool variance_encoded_in_target, const bool clip_bbox,
+    const NormalizedBBox& bbox, NormalizedBBox* decode_bbox);
+// Clip the NormalizedBBox such that the range for each corner is [0, 1].
+void ClipBBox(const NormalizedBBox& bbox, NormalizedBBox* clip_bbox);
+
+void ApplyNMSFast(const vector<NormalizedBBox>& bboxes,
+      const vector<float>& scores, const float score_threshold,
+      const float nms_threshold, const float eta, const int top_k,
+      vector<int>* indices);
+void GetMaxScoreIndex(const vector<float>& scores, const float threshold,
+      const int top_k, vector<pair<float, int> >* score_index_vec);
+template <typename T>
+bool SortScorePairDescend(const pair<float, T>& pair1,
+                          const pair<float, T>& pair2);
+// Compute the jaccard (intersection over union IoU) overlap between two bboxes.
+float JaccardOverlap(const NormalizedBBox& bbox1, const NormalizedBBox& bbox2,
+                     const bool normalized = true);
+// Compute the intersection between two bboxes.
+void IntersectBBox(const NormalizedBBox& bbox1, const NormalizedBBox& bbox2,
+                   NormalizedBBox* intersect_bbox);
+
+template <typename Dtype>
+void ApplyNMSFast(const Dtype* bboxes, const Dtype* scores, const int num,
+      const float score_threshold, const float nms_threshold,
+      const float eta, const int top_k, vector<int>* indices);
+
+template <typename Dtype>
+void GetMaxScoreIndex(const Dtype* scores, const int num, const float threshold,
+      const int top_k, vector<pair<Dtype, int> >* score_index_vec);
+
+template <typename Dtype>
+Dtype JaccardOverlap(const Dtype* bbox1, const Dtype* bbox2);
+
+template <typename Dtype>
+Dtype BBoxSize(const Dtype* bbox, const bool normalized = true);
+
+} // namspace caffe2
+
+#endif
-- 
2.14.3 (Apple Git-98)

